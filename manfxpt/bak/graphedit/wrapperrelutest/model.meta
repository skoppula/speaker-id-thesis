meta_info_def {
  stripped_op_list {
    op {
      name: "Add"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      input_arg {
        name: "y"
        type_attr: "T"
      }
      output_arg {
        name: "z"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_UINT8
            type: DT_INT8
            type: DT_INT16
            type: DT_INT32
            type: DT_INT64
            type: DT_COMPLEX64
            type: DT_COMPLEX128
            type: DT_STRING
          }
        }
      }
    }
    op {
      name: "ApplyAdam"
      input_arg {
        name: "var"
        type_attr: "T"
        is_ref: true
      }
      input_arg {
        name: "m"
        type_attr: "T"
        is_ref: true
      }
      input_arg {
        name: "v"
        type_attr: "T"
        is_ref: true
      }
      input_arg {
        name: "beta1_power"
        type_attr: "T"
      }
      input_arg {
        name: "beta2_power"
        type_attr: "T"
      }
      input_arg {
        name: "lr"
        type_attr: "T"
      }
      input_arg {
        name: "beta1"
        type_attr: "T"
      }
      input_arg {
        name: "beta2"
        type_attr: "T"
      }
      input_arg {
        name: "epsilon"
        type_attr: "T"
      }
      input_arg {
        name: "grad"
        type_attr: "T"
      }
      output_arg {
        name: "out"
        type_attr: "T"
        is_ref: true
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT64
            type: DT_INT32
            type: DT_UINT8
            type: DT_UINT16
            type: DT_INT16
            type: DT_INT8
            type: DT_COMPLEX64
            type: DT_COMPLEX128
            type: DT_QINT8
            type: DT_QUINT8
            type: DT_QINT32
            type: DT_HALF
          }
        }
      }
      attr {
        name: "use_locking"
        type: "bool"
        default_value {
          b: false
        }
      }
      attr {
        name: "use_nesterov"
        type: "bool"
        default_value {
          b: false
        }
      }
    }
    op {
      name: "ArgMax"
      input_arg {
        name: "input"
        type_attr: "T"
      }
      input_arg {
        name: "dimension"
        type_attr: "Tidx"
      }
      output_arg {
        name: "output"
        type_attr: "output_type"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT64
            type: DT_INT32
            type: DT_UINT8
            type: DT_UINT16
            type: DT_INT16
            type: DT_INT8
            type: DT_COMPLEX64
            type: DT_COMPLEX128
            type: DT_QINT8
            type: DT_QUINT8
            type: DT_QINT32
            type: DT_HALF
          }
        }
      }
      attr {
        name: "Tidx"
        type: "type"
        default_value {
          type: DT_INT32
        }
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
      attr {
        name: "output_type"
        type: "type"
        default_value {
          type: DT_INT64
        }
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
    }
    op {
      name: "Assign"
      input_arg {
        name: "ref"
        type_attr: "T"
        is_ref: true
      }
      input_arg {
        name: "value"
        type_attr: "T"
      }
      output_arg {
        name: "output_ref"
        type_attr: "T"
        is_ref: true
      }
      attr {
        name: "T"
        type: "type"
      }
      attr {
        name: "validate_shape"
        type: "bool"
        default_value {
          b: true
        }
      }
      attr {
        name: "use_locking"
        type: "bool"
        default_value {
          b: true
        }
      }
      allows_uninitialized_input: true
    }
    op {
      name: "AssignAdd"
      input_arg {
        name: "ref"
        type_attr: "T"
        is_ref: true
      }
      input_arg {
        name: "value"
        type_attr: "T"
      }
      output_arg {
        name: "output_ref"
        type_attr: "T"
        is_ref: true
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT64
            type: DT_INT32
            type: DT_UINT8
            type: DT_UINT16
            type: DT_INT16
            type: DT_INT8
            type: DT_COMPLEX64
            type: DT_COMPLEX128
            type: DT_QINT8
            type: DT_QUINT8
            type: DT_QINT32
            type: DT_HALF
          }
        }
      }
      attr {
        name: "use_locking"
        type: "bool"
        default_value {
          b: false
        }
      }
    }
    op {
      name: "AssignSub"
      input_arg {
        name: "ref"
        type_attr: "T"
        is_ref: true
      }
      input_arg {
        name: "value"
        type_attr: "T"
      }
      output_arg {
        name: "output_ref"
        type_attr: "T"
        is_ref: true
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT64
            type: DT_INT32
            type: DT_UINT8
            type: DT_UINT16
            type: DT_INT16
            type: DT_INT8
            type: DT_COMPLEX64
            type: DT_COMPLEX128
            type: DT_QINT8
            type: DT_QUINT8
            type: DT_QINT32
            type: DT_HALF
          }
        }
      }
      attr {
        name: "use_locking"
        type: "bool"
        default_value {
          b: false
        }
      }
    }
    op {
      name: "BiasAdd"
      input_arg {
        name: "value"
        type_attr: "T"
      }
      input_arg {
        name: "bias"
        type_attr: "T"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT64
            type: DT_INT32
            type: DT_UINT8
            type: DT_UINT16
            type: DT_INT16
            type: DT_INT8
            type: DT_COMPLEX64
            type: DT_COMPLEX128
            type: DT_QINT8
            type: DT_QUINT8
            type: DT_QINT32
            type: DT_HALF
          }
        }
      }
      attr {
        name: "data_format"
        type: "string"
        default_value {
          s: "NHWC"
        }
        allowed_values {
          list {
            s: "NHWC"
            s: "NCHW"
          }
        }
      }
    }
    op {
      name: "BiasAddGrad"
      input_arg {
        name: "out_backprop"
        type_attr: "T"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT64
            type: DT_INT32
            type: DT_UINT8
            type: DT_UINT16
            type: DT_INT16
            type: DT_INT8
            type: DT_COMPLEX64
            type: DT_COMPLEX128
            type: DT_QINT8
            type: DT_QUINT8
            type: DT_QINT32
            type: DT_HALF
          }
        }
      }
      attr {
        name: "data_format"
        type: "string"
        default_value {
          s: "NHWC"
        }
        allowed_values {
          list {
            s: "NHWC"
            s: "NCHW"
          }
        }
      }
    }
    op {
      name: "Cast"
      input_arg {
        name: "x"
        type_attr: "SrcT"
      }
      output_arg {
        name: "y"
        type_attr: "DstT"
      }
      attr {
        name: "SrcT"
        type: "type"
      }
      attr {
        name: "DstT"
        type: "type"
      }
    }
    op {
      name: "ConcatV2"
      input_arg {
        name: "values"
        type_attr: "T"
        number_attr: "N"
      }
      input_arg {
        name: "axis"
        type_attr: "Tidx"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "N"
        type: "int"
        has_minimum: true
        minimum: 2
      }
      attr {
        name: "T"
        type: "type"
      }
      attr {
        name: "Tidx"
        type: "type"
        default_value {
          type: DT_INT32
        }
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
    }
    op {
      name: "Const"
      output_arg {
        name: "output"
        type_attr: "dtype"
      }
      attr {
        name: "value"
        type: "tensor"
      }
      attr {
        name: "dtype"
        type: "type"
      }
    }
    op {
      name: "ExpandDims"
      input_arg {
        name: "input"
        type_attr: "T"
      }
      input_arg {
        name: "dim"
        type_attr: "Tdim"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
      }
      attr {
        name: "Tdim"
        type: "type"
        default_value {
          type: DT_INT32
        }
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
    }
    op {
      name: "FIFOQueueV2"
      output_arg {
        name: "handle"
        type: DT_RESOURCE
      }
      attr {
        name: "component_types"
        type: "list(type)"
        has_minimum: true
        minimum: 1
      }
      attr {
        name: "shapes"
        type: "list(shape)"
        default_value {
          list {
          }
        }
        has_minimum: true
      }
      attr {
        name: "capacity"
        type: "int"
        default_value {
          i: -1
        }
      }
      attr {
        name: "container"
        type: "string"
        default_value {
          s: ""
        }
      }
      attr {
        name: "shared_name"
        type: "string"
        default_value {
          s: ""
        }
      }
      is_stateful: true
    }
    op {
      name: "Fill"
      input_arg {
        name: "dims"
        type: DT_INT32
      }
      input_arg {
        name: "value"
        type_attr: "T"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
      }
    }
    op {
      name: "FloorDiv"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      input_arg {
        name: "y"
        type_attr: "T"
      }
      output_arg {
        name: "z"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_UINT8
            type: DT_INT8
            type: DT_UINT16
            type: DT_INT16
            type: DT_INT32
            type: DT_INT64
            type: DT_COMPLEX64
            type: DT_COMPLEX128
          }
        }
      }
    }
    op {
      name: "FusedBatchNorm"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      input_arg {
        name: "scale"
        type_attr: "T"
      }
      input_arg {
        name: "offset"
        type_attr: "T"
      }
      input_arg {
        name: "mean"
        type_attr: "T"
      }
      input_arg {
        name: "variance"
        type_attr: "T"
      }
      output_arg {
        name: "y"
        type_attr: "T"
      }
      output_arg {
        name: "batch_mean"
        type_attr: "T"
      }
      output_arg {
        name: "batch_variance"
        type_attr: "T"
      }
      output_arg {
        name: "reserve_space_1"
        type_attr: "T"
      }
      output_arg {
        name: "reserve_space_2"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        name: "epsilon"
        type: "float"
        default_value {
          f: 9.99999974738e-05
        }
      }
      attr {
        name: "data_format"
        type: "string"
        default_value {
          s: "NHWC"
        }
      }
      attr {
        name: "is_training"
        type: "bool"
        default_value {
          b: true
        }
      }
    }
    op {
      name: "FusedBatchNormGrad"
      input_arg {
        name: "y_backprop"
        type_attr: "T"
      }
      input_arg {
        name: "x"
        type_attr: "T"
      }
      input_arg {
        name: "scale"
        type_attr: "T"
      }
      input_arg {
        name: "reserve_space_1"
        type_attr: "T"
      }
      input_arg {
        name: "reserve_space_2"
        type_attr: "T"
      }
      output_arg {
        name: "x_backprop"
        type_attr: "T"
      }
      output_arg {
        name: "scale_backprop"
        type_attr: "T"
      }
      output_arg {
        name: "offset_backprop"
        type_attr: "T"
      }
      output_arg {
        name: "reserve_space_3"
        type_attr: "T"
      }
      output_arg {
        name: "reserve_space_4"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        name: "epsilon"
        type: "float"
        default_value {
          f: 9.99999974738e-05
        }
      }
      attr {
        name: "data_format"
        type: "string"
        default_value {
          s: "NHWC"
        }
      }
      attr {
        name: "is_training"
        type: "bool"
        default_value {
          b: true
        }
      }
    }
    op {
      name: "Gather"
      input_arg {
        name: "params"
        type_attr: "Tparams"
      }
      input_arg {
        name: "indices"
        type_attr: "Tindices"
      }
      output_arg {
        name: "output"
        type_attr: "Tparams"
      }
      attr {
        name: "validate_indices"
        type: "bool"
        default_value {
          b: true
        }
      }
      attr {
        name: "Tparams"
        type: "type"
      }
      attr {
        name: "Tindices"
        type: "type"
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
    }
    op {
      name: "HistogramSummary"
      input_arg {
        name: "tag"
        type: DT_STRING
      }
      input_arg {
        name: "values"
        type_attr: "T"
      }
      output_arg {
        name: "summary"
        type: DT_STRING
      }
      attr {
        name: "T"
        type: "type"
        default_value {
          type: DT_FLOAT
        }
        allowed_values {
          list {
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT32
            type: DT_INT64
            type: DT_UINT8
            type: DT_INT16
            type: DT_INT8
            type: DT_UINT16
            type: DT_HALF
          }
        }
      }
    }
    op {
      name: "Identity"
      input_arg {
        name: "input"
        type_attr: "T"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
      }
    }
    op {
      name: "InTopKV2"
      input_arg {
        name: "predictions"
        type: DT_FLOAT
      }
      input_arg {
        name: "targets"
        type_attr: "T"
      }
      input_arg {
        name: "k"
        type_attr: "T"
      }
      output_arg {
        name: "precision"
        type: DT_BOOL
      }
      attr {
        name: "T"
        type: "type"
        default_value {
          type: DT_INT32
        }
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
    }
    op {
      name: "IsVariableInitialized"
      input_arg {
        name: "ref"
        type_attr: "dtype"
        is_ref: true
      }
      output_arg {
        name: "is_initialized"
        type: DT_BOOL
      }
      attr {
        name: "dtype"
        type: "type"
      }
      allows_uninitialized_input: true
    }
    op {
      name: "LogicalNot"
      input_arg {
        name: "x"
        type: DT_BOOL
      }
      output_arg {
        name: "y"
        type: DT_BOOL
      }
    }
    op {
      name: "MatMul"
      input_arg {
        name: "a"
        type_attr: "T"
      }
      input_arg {
        name: "b"
        type_attr: "T"
      }
      output_arg {
        name: "product"
        type_attr: "T"
      }
      attr {
        name: "transpose_a"
        type: "bool"
        default_value {
          b: false
        }
      }
      attr {
        name: "transpose_b"
        type: "bool"
        default_value {
          b: false
        }
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT32
            type: DT_COMPLEX64
            type: DT_COMPLEX128
          }
        }
      }
    }
    op {
      name: "Maximum"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      input_arg {
        name: "y"
        type_attr: "T"
      }
      output_arg {
        name: "z"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
      is_commutative: true
    }
    op {
      name: "Mean"
      input_arg {
        name: "input"
        type_attr: "T"
      }
      input_arg {
        name: "reduction_indices"
        type_attr: "Tidx"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "keep_dims"
        type: "bool"
        default_value {
          b: false
        }
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT64
            type: DT_INT32
            type: DT_UINT8
            type: DT_UINT16
            type: DT_INT16
            type: DT_INT8
            type: DT_COMPLEX64
            type: DT_COMPLEX128
            type: DT_QINT8
            type: DT_QUINT8
            type: DT_QINT32
            type: DT_HALF
          }
        }
      }
      attr {
        name: "Tidx"
        type: "type"
        default_value {
          type: DT_INT32
        }
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
    }
    op {
      name: "MergeSummary"
      input_arg {
        name: "inputs"
        type: DT_STRING
        number_attr: "N"
      }
      output_arg {
        name: "summary"
        type: DT_STRING
      }
      attr {
        name: "N"
        type: "int"
        has_minimum: true
        minimum: 1
      }
    }
    op {
      name: "Mul"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      input_arg {
        name: "y"
        type_attr: "T"
      }
      output_arg {
        name: "z"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_UINT8
            type: DT_INT8
            type: DT_UINT16
            type: DT_INT16
            type: DT_INT32
            type: DT_INT64
            type: DT_COMPLEX64
            type: DT_COMPLEX128
          }
        }
      }
      is_commutative: true
    }
    op {
      name: "NoOp"
    }
    op {
      name: "NotEqual"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      input_arg {
        name: "y"
        type_attr: "T"
      }
      output_arg {
        name: "z"
        type: DT_BOOL
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_UINT8
            type: DT_INT8
            type: DT_INT16
            type: DT_INT32
            type: DT_INT64
            type: DT_COMPLEX64
            type: DT_QUINT8
            type: DT_QINT8
            type: DT_QINT32
            type: DT_STRING
            type: DT_BOOL
            type: DT_COMPLEX128
          }
        }
      }
      is_commutative: true
    }
    op {
      name: "Pack"
      input_arg {
        name: "values"
        type_attr: "T"
        number_attr: "N"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "N"
        type: "int"
        has_minimum: true
        minimum: 1
      }
      attr {
        name: "T"
        type: "type"
      }
      attr {
        name: "axis"
        type: "int"
        default_value {
          i: 0
        }
      }
    }
    op {
      name: "Placeholder"
      output_arg {
        name: "output"
        type_attr: "dtype"
      }
      attr {
        name: "dtype"
        type: "type"
      }
      attr {
        name: "shape"
        type: "shape"
        default_value {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    op {
      name: "Pow"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      input_arg {
        name: "y"
        type_attr: "T"
      }
      output_arg {
        name: "z"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT32
            type: DT_INT64
            type: DT_COMPLEX64
            type: DT_COMPLEX128
          }
        }
      }
    }
    op {
      name: "PreventGradient"
      input_arg {
        name: "input"
        type_attr: "T"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
      }
      attr {
        name: "message"
        type: "string"
        default_value {
          s: ""
        }
      }
    }
    op {
      name: "Prod"
      input_arg {
        name: "input"
        type_attr: "T"
      }
      input_arg {
        name: "reduction_indices"
        type_attr: "Tidx"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "keep_dims"
        type: "bool"
        default_value {
          b: false
        }
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT64
            type: DT_INT32
            type: DT_UINT8
            type: DT_UINT16
            type: DT_INT16
            type: DT_INT8
            type: DT_COMPLEX64
            type: DT_COMPLEX128
            type: DT_QINT8
            type: DT_QUINT8
            type: DT_QINT32
            type: DT_HALF
          }
        }
      }
      attr {
        name: "Tidx"
        type: "type"
        default_value {
          type: DT_INT32
        }
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
    }
    op {
      name: "QueueCloseV2"
      input_arg {
        name: "handle"
        type: DT_RESOURCE
      }
      attr {
        name: "cancel_pending_enqueues"
        type: "bool"
        default_value {
          b: false
        }
      }
      is_stateful: true
    }
    op {
      name: "QueueDequeueV2"
      input_arg {
        name: "handle"
        type: DT_RESOURCE
      }
      output_arg {
        name: "components"
        type_list_attr: "component_types"
      }
      attr {
        name: "component_types"
        type: "list(type)"
        has_minimum: true
        minimum: 1
      }
      attr {
        name: "timeout_ms"
        type: "int"
        default_value {
          i: -1
        }
      }
      is_stateful: true
    }
    op {
      name: "QueueEnqueueV2"
      input_arg {
        name: "handle"
        type: DT_RESOURCE
      }
      input_arg {
        name: "components"
        type_list_attr: "Tcomponents"
      }
      attr {
        name: "Tcomponents"
        type: "list(type)"
        has_minimum: true
        minimum: 1
      }
      attr {
        name: "timeout_ms"
        type: "int"
        default_value {
          i: -1
        }
      }
      is_stateful: true
    }
    op {
      name: "QueueSizeV2"
      input_arg {
        name: "handle"
        type: DT_RESOURCE
      }
      output_arg {
        name: "size"
        type: DT_INT32
      }
      is_stateful: true
    }
    op {
      name: "RealDiv"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      input_arg {
        name: "y"
        type_attr: "T"
      }
      output_arg {
        name: "z"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_UINT8
            type: DT_INT8
            type: DT_UINT16
            type: DT_INT16
            type: DT_INT32
            type: DT_INT64
            type: DT_COMPLEX64
            type: DT_COMPLEX128
          }
        }
      }
    }
    op {
      name: "Relu"
      input_arg {
        name: "features"
        type_attr: "T"
      }
      output_arg {
        name: "activations"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT32
            type: DT_INT64
            type: DT_UINT8
            type: DT_INT16
            type: DT_INT8
            type: DT_UINT16
            type: DT_HALF
          }
        }
      }
    }
    op {
      name: "ReluGrad"
      input_arg {
        name: "gradients"
        type_attr: "T"
      }
      input_arg {
        name: "features"
        type_attr: "T"
      }
      output_arg {
        name: "backprops"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT32
            type: DT_INT64
            type: DT_UINT8
            type: DT_INT16
            type: DT_INT8
            type: DT_UINT16
            type: DT_HALF
          }
        }
      }
    }
    op {
      name: "Reshape"
      input_arg {
        name: "tensor"
        type_attr: "T"
      }
      input_arg {
        name: "shape"
        type_attr: "Tshape"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
      }
      attr {
        name: "Tshape"
        type: "type"
        default_value {
          type: DT_INT32
        }
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
    }
    op {
      name: "RestoreV2"
      input_arg {
        name: "prefix"
        type: DT_STRING
      }
      input_arg {
        name: "tensor_names"
        type: DT_STRING
      }
      input_arg {
        name: "shape_and_slices"
        type: DT_STRING
      }
      output_arg {
        name: "tensors"
        type_list_attr: "dtypes"
      }
      attr {
        name: "dtypes"
        type: "list(type)"
        has_minimum: true
        minimum: 1
      }
      is_stateful: true
    }
    op {
      name: "Rsqrt"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      output_arg {
        name: "y"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_COMPLEX64
            type: DT_COMPLEX128
          }
        }
      }
    }
    op {
      name: "SaveV2"
      input_arg {
        name: "prefix"
        type: DT_STRING
      }
      input_arg {
        name: "tensor_names"
        type: DT_STRING
      }
      input_arg {
        name: "shape_and_slices"
        type: DT_STRING
      }
      input_arg {
        name: "tensors"
        type_list_attr: "dtypes"
      }
      attr {
        name: "dtypes"
        type: "list(type)"
        has_minimum: true
        minimum: 1
      }
      is_stateful: true
    }
    op {
      name: "ScalarSummary"
      input_arg {
        name: "tags"
        type: DT_STRING
      }
      input_arg {
        name: "values"
        type_attr: "T"
      }
      output_arg {
        name: "summary"
        type: DT_STRING
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT32
            type: DT_INT64
            type: DT_UINT8
            type: DT_INT16
            type: DT_INT8
            type: DT_UINT16
            type: DT_HALF
          }
        }
      }
    }
    op {
      name: "Shape"
      input_arg {
        name: "input"
        type_attr: "T"
      }
      output_arg {
        name: "output"
        type_attr: "out_type"
      }
      attr {
        name: "T"
        type: "type"
      }
      attr {
        name: "out_type"
        type: "type"
        default_value {
          type: DT_INT32
        }
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
    }
    op {
      name: "Softmax"
      input_arg {
        name: "logits"
        type_attr: "T"
      }
      output_arg {
        name: "softmax"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
          }
        }
      }
    }
    op {
      name: "SparseSoftmaxCrossEntropyWithLogits"
      input_arg {
        name: "features"
        type_attr: "T"
      }
      input_arg {
        name: "labels"
        type_attr: "Tlabels"
      }
      output_arg {
        name: "loss"
        type_attr: "T"
      }
      output_arg {
        name: "backprop"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
          }
        }
      }
      attr {
        name: "Tlabels"
        type: "type"
        default_value {
          type: DT_INT64
        }
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
    }
    op {
      name: "Sqrt"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      output_arg {
        name: "y"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_COMPLEX64
            type: DT_COMPLEX128
          }
        }
      }
    }
    op {
      name: "Square"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      output_arg {
        name: "y"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT32
            type: DT_INT64
            type: DT_COMPLEX64
            type: DT_COMPLEX128
          }
        }
      }
    }
    op {
      name: "Squeeze"
      input_arg {
        name: "input"
        type_attr: "T"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
      }
      attr {
        name: "squeeze_dims"
        type: "list(int)"
        default_value {
          list {
          }
        }
        has_minimum: true
      }
    }
    op {
      name: "StridedSlice"
      input_arg {
        name: "input"
        type_attr: "T"
      }
      input_arg {
        name: "begin"
        type_attr: "Index"
      }
      input_arg {
        name: "end"
        type_attr: "Index"
      }
      input_arg {
        name: "strides"
        type_attr: "Index"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
      }
      attr {
        name: "Index"
        type: "type"
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
      attr {
        name: "begin_mask"
        type: "int"
        default_value {
          i: 0
        }
      }
      attr {
        name: "end_mask"
        type: "int"
        default_value {
          i: 0
        }
      }
      attr {
        name: "ellipsis_mask"
        type: "int"
        default_value {
          i: 0
        }
      }
      attr {
        name: "new_axis_mask"
        type: "int"
        default_value {
          i: 0
        }
      }
      attr {
        name: "shrink_axis_mask"
        type: "int"
        default_value {
          i: 0
        }
      }
    }
    op {
      name: "Sub"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      input_arg {
        name: "y"
        type_attr: "T"
      }
      output_arg {
        name: "z"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_UINT8
            type: DT_INT8
            type: DT_UINT16
            type: DT_INT16
            type: DT_INT32
            type: DT_INT64
            type: DT_COMPLEX64
            type: DT_COMPLEX128
          }
        }
      }
    }
    op {
      name: "Tile"
      input_arg {
        name: "input"
        type_attr: "T"
      }
      input_arg {
        name: "multiples"
        type_attr: "Tmultiples"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
      }
      attr {
        name: "Tmultiples"
        type: "type"
        default_value {
          type: DT_INT32
        }
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
    }
    op {
      name: "TruncatedNormal"
      input_arg {
        name: "shape"
        type_attr: "T"
      }
      output_arg {
        name: "output"
        type_attr: "dtype"
      }
      attr {
        name: "seed"
        type: "int"
        default_value {
          i: 0
        }
      }
      attr {
        name: "seed2"
        type: "int"
        default_value {
          i: 0
        }
      }
      attr {
        name: "dtype"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
          }
        }
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
      is_stateful: true
    }
    op {
      name: "UniqueWithCounts"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      output_arg {
        name: "y"
        type_attr: "T"
      }
      output_arg {
        name: "idx"
        type_attr: "out_idx"
      }
      output_arg {
        name: "count"
        type_attr: "out_idx"
      }
      attr {
        name: "T"
        type: "type"
      }
      attr {
        name: "out_idx"
        type: "type"
        default_value {
          type: DT_INT32
        }
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
    }
    op {
      name: "VariableV2"
      output_arg {
        name: "ref"
        type_attr: "dtype"
        is_ref: true
      }
      attr {
        name: "shape"
        type: "shape"
      }
      attr {
        name: "dtype"
        type: "type"
      }
      attr {
        name: "container"
        type: "string"
        default_value {
          s: ""
        }
      }
      attr {
        name: "shared_name"
        type: "string"
        default_value {
          s: ""
        }
      }
      is_stateful: true
    }
    op {
      name: "Where"
      input_arg {
        name: "input"
        type: DT_BOOL
      }
      output_arg {
        name: "index"
        type: DT_INT64
      }
    }
    op {
      name: "ZerosLike"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      output_arg {
        name: "y"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
      }
    }
  }
  tensorflow_version: "1.4.0"
  tensorflow_git_version: "v1.4.0-rc1-11-g130a514"
}
graph_def {
  node {
    name: "input"
    op: "Placeholder"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1000
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1000
          }
        }
      }
    }
  }
  node {
    name: "label"
    op: "Placeholder"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  node {
    name: "QueueInput/input_queue"
    op: "FIFOQueueV2"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "capacity"
      value {
        i: 50
      }
    }
    attr {
      key: "component_types"
      value {
        list {
          type: DT_FLOAT
          type: DT_INT32
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "shapes"
      value {
        list {
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "QueueInput/input_queue_enqueue"
    op: "QueueEnqueueV2"
    input: "QueueInput/input_queue"
    input: "input"
    input: "label"
    attr {
      key: "Tcomponents"
      value {
        list {
          type: DT_FLOAT
          type: DT_INT32
        }
      }
    }
    attr {
      key: "timeout_ms"
      value {
        i: -1
      }
    }
  }
  node {
    name: "QueueInput/input_queue_Close"
    op: "QueueCloseV2"
    input: "QueueInput/input_queue"
    attr {
      key: "cancel_pending_enqueues"
      value {
        b: true
      }
    }
  }
  node {
    name: "QueueInput/dequeue_for_reset"
    op: "QueueDequeueV2"
    input: "QueueInput/input_queue"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "component_types"
      value {
        list {
          type: DT_FLOAT
          type: DT_INT32
        }
      }
    }
    attr {
      key: "timeout_ms"
      value {
        i: -1
      }
    }
  }
  node {
    name: "QueueInput/input_queue_Size"
    op: "QueueSizeV2"
    input: "QueueInput/input_queue"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "QueueInput/queue_size"
    op: "Cast"
    input: "QueueInput/input_queue_Size"
    attr {
      key: "DstT"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "SrcT"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size/Initializer/Const"
    op: "Const"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size"
    op: "VariableV2"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size/Assign"
    op: "Assign"
    input: "EMA/QueueInput/queue_size"
    input: "EMA/QueueInput/queue_size/Initializer/Const"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size/read"
    op: "Identity"
    input: "EMA/QueueInput/queue_size"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size_EMA_apply/decay"
    op: "Const"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0500000007451
        }
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/zeros"
    op: "Const"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size/biased"
    op: "VariableV2"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size/biased/Assign"
    op: "Assign"
    input: "EMA/QueueInput/queue_size/biased"
    input: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/zeros"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size/biased/read"
    op: "Identity"
    input: "EMA/QueueInput/queue_size/biased"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size/local_step/Initializer/zeros"
    op: "Const"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size/local_step"
    op: "VariableV2"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size/local_step/Assign"
    op: "Assign"
    input: "EMA/QueueInput/queue_size/local_step"
    input: "EMA/QueueInput/queue_size/local_step/Initializer/zeros"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size/local_step/read"
    op: "Identity"
    input: "EMA/QueueInput/queue_size/local_step"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/sub"
    op: "Sub"
    input: "EMA/QueueInput/queue_size/biased/read"
    input: "QueueInput/queue_size"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/mul"
    op: "Mul"
    input: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/sub"
    input: "EMA/QueueInput/queue_size_EMA_apply/decay"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/EMA/QueueInput/queue_size"
    op: "AssignSub"
    input: "EMA/QueueInput/queue_size/biased"
    input: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/mul"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/AssignAdd/value"
    op: "Const"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/AssignAdd"
    op: "AssignAdd"
    input: "EMA/QueueInput/queue_size/local_step"
    input: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/AssignAdd/value"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/read"
    op: "Identity"
    input: "EMA/QueueInput/queue_size/biased"
    input: "^EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/EMA/QueueInput/queue_size"
    input: "^EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/AssignAdd"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/sub_1/x"
    op: "Const"
    input: "^EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/EMA/QueueInput/queue_size"
    input: "^EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/AssignAdd"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/sub_1"
    op: "Sub"
    input: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/sub_1/x"
    input: "EMA/QueueInput/queue_size_EMA_apply/decay"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/read_1"
    op: "Identity"
    input: "EMA/QueueInput/queue_size/local_step"
    input: "^EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/EMA/QueueInput/queue_size"
    input: "^EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/AssignAdd"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/Pow"
    op: "Pow"
    input: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/sub_1"
    input: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/read_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/sub_2/x"
    op: "Const"
    input: "^EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/EMA/QueueInput/queue_size"
    input: "^EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/AssignAdd"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/sub_2"
    op: "Sub"
    input: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/sub_2/x"
    input: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/Pow"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/truediv"
    op: "RealDiv"
    input: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/read"
    input: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/sub_2"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/sub_3"
    op: "Sub"
    input: "EMA/QueueInput/queue_size/read"
    input: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/truediv"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/QueueInput/queue_size_EMA_apply"
    op: "AssignSub"
    input: "EMA/QueueInput/queue_size"
    input: "EMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/sub_3"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "QueueInput/queue_size-summary/tags"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "QueueInput/queue_size-summary"
        }
      }
    }
  }
  node {
    name: "QueueInput/queue_size-summary"
    op: "ScalarSummary"
    input: "QueueInput/queue_size-summary/tags"
    input: "EMA/QueueInput/queue_size_EMA_apply"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "QueueInput/input_deque"
    op: "QueueDequeueV2"
    input: "QueueInput/input_queue"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1000
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    attr {
      key: "component_types"
      value {
        list {
          type: DT_FLOAT
          type: DT_INT32
        }
      }
    }
    attr {
      key: "timeout_ms"
      value {
        i: -1
      }
    }
  }
  node {
    name: "tower0/linear0/Reshape/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\377\377\377\377\350\003\000\000"
        }
      }
    }
  }
  node {
    name: "tower0/linear0/Reshape"
    op: "Reshape"
    input: "QueueInput/input_deque"
    input: "tower0/linear0/Reshape/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1000
            }
          }
        }
      }
    }
  }
  node {
    name: "linear0/W/Initializer/truncated_normal/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\350\003\000\000\370\001\000\000"
        }
      }
    }
  }
  node {
    name: "linear0/W/Initializer/truncated_normal/mean"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear0/W/Initializer/truncated_normal/stddev"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0509901940823
        }
      }
    }
  }
  node {
    name: "linear0/W/Initializer/truncated_normal/TruncatedNormal"
    op: "TruncatedNormal"
    input: "linear0/W/Initializer/truncated_normal/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "seed"
      value {
        i: 0
      }
    }
    attr {
      key: "seed2"
      value {
        i: 0
      }
    }
  }
  node {
    name: "linear0/W/Initializer/truncated_normal/mul"
    op: "Mul"
    input: "linear0/W/Initializer/truncated_normal/TruncatedNormal"
    input: "linear0/W/Initializer/truncated_normal/stddev"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear0/W/Initializer/truncated_normal"
    op: "Add"
    input: "linear0/W/Initializer/truncated_normal/mul"
    input: "linear0/W/Initializer/truncated_normal/mean"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear0/W"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear0/W/Assign"
    op: "Assign"
    input: "linear0/W"
    input: "linear0/W/Initializer/truncated_normal"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear0/W/read"
    op: "Identity"
    input: "linear0/W"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear0/b/Initializer/truncated_normal/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 504
        }
      }
    }
  }
  node {
    name: "linear0/b/Initializer/truncated_normal/mean"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear0/b/Initializer/truncated_normal/stddev"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0718242973089
        }
      }
    }
  }
  node {
    name: "linear0/b/Initializer/truncated_normal/TruncatedNormal"
    op: "TruncatedNormal"
    input: "linear0/b/Initializer/truncated_normal/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "seed"
      value {
        i: 0
      }
    }
    attr {
      key: "seed2"
      value {
        i: 0
      }
    }
  }
  node {
    name: "linear0/b/Initializer/truncated_normal/mul"
    op: "Mul"
    input: "linear0/b/Initializer/truncated_normal/TruncatedNormal"
    input: "linear0/b/Initializer/truncated_normal/stddev"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear0/b/Initializer/truncated_normal"
    op: "Add"
    input: "linear0/b/Initializer/truncated_normal/mul"
    input: "linear0/b/Initializer/truncated_normal/mean"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear0/b"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear0/b/Assign"
    op: "Assign"
    input: "linear0/b"
    input: "linear0/b/Initializer/truncated_normal"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear0/b/read"
    op: "Identity"
    input: "linear0/b"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear0/MatMul"
    op: "MatMul"
    input: "tower0/linear0/Reshape"
    input: "linear0/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: false
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/linear0/BiasAdd"
    op: "BiasAdd"
    input: "tower0/linear0/MatMul"
    input: "linear0/b/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
  }
  node {
    name: "linear0/bn/beta/Initializer/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear0/bn/beta"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear0/bn/beta/Assign"
    op: "Assign"
    input: "linear0/bn/beta"
    input: "linear0/bn/beta/Initializer/Const"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear0/bn/beta/read"
    op: "Identity"
    input: "linear0/bn/beta"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear0/bn/gamma/Initializer/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "linear0/bn/gamma"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear0/bn/gamma/Assign"
    op: "Assign"
    input: "linear0/bn/gamma"
    input: "linear0/bn/gamma/Initializer/Const"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear0/bn/gamma/read"
    op: "Identity"
    input: "linear0/bn/gamma"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear0/bn/mean/EMA/Initializer/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear0/bn/mean/EMA"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear0/bn/mean/EMA/Assign"
    op: "Assign"
    input: "linear0/bn/mean/EMA"
    input: "linear0/bn/mean/EMA/Initializer/Const"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear0/bn/mean/EMA/read"
    op: "Identity"
    input: "linear0/bn/mean/EMA"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear0/bn/variance/EMA/Initializer/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "linear0/bn/variance/EMA"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear0/bn/variance/EMA/Assign"
    op: "Assign"
    input: "linear0/bn/variance/EMA"
    input: "linear0/bn/variance/EMA/Initializer/Const"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear0/bn/variance/EMA/read"
    op: "Identity"
    input: "linear0/bn/variance/EMA"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear0/bn/Reshape/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 4
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 4
            }
          }
          tensor_content: "\377\377\377\377\001\000\000\000\001\000\000\000\370\001\000\000"
        }
      }
    }
  }
  node {
    name: "tower0/linear0/bn/Reshape"
    op: "Reshape"
    input: "tower0/linear0/BiasAdd"
    input: "tower0/linear0/bn/Reshape/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear0/bn/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear0/bn/Const_1"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear0/bn/FusedBatchNorm"
    op: "FusedBatchNorm"
    input: "tower0/linear0/bn/Reshape"
    input: "linear0/bn/gamma/read"
    input: "linear0/bn/beta/read"
    input: "tower0/linear0/bn/Const"
    input: "tower0/linear0/bn/Const_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
    attr {
      key: "epsilon"
      value {
        f: 1.00099996416e-05
      }
    }
    attr {
      key: "is_training"
      value {
        b: true
      }
    }
  }
  node {
    name: "tower0/linear0/bn/Squeeze"
    op: "Squeeze"
    input: "tower0/linear0/bn/FusedBatchNorm"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "squeeze_dims"
      value {
        list {
          i: 1
          i: 2
        }
      }
    }
  }
  node {
    name: "tower0/linear0/bn/mean_ema_op/decay"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.10000000149
        }
      }
    }
  }
  node {
    name: "tower0/linear0/bn/mean_ema_op/sub"
    op: "Sub"
    input: "linear0/bn/mean/EMA/read"
    input: "tower0/linear0/bn/FusedBatchNorm:1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear0/bn/mean_ema_op/mul"
    op: "Mul"
    input: "tower0/linear0/bn/mean_ema_op/sub"
    input: "tower0/linear0/bn/mean_ema_op/decay"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear0/bn/mean_ema_op"
    op: "AssignSub"
    input: "linear0/bn/mean/EMA"
    input: "tower0/linear0/bn/mean_ema_op/mul"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/linear0/bn/var_ema_op/decay"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.10000000149
        }
      }
    }
  }
  node {
    name: "tower0/linear0/bn/var_ema_op/sub"
    op: "Sub"
    input: "linear0/bn/variance/EMA/read"
    input: "tower0/linear0/bn/FusedBatchNorm:2"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear0/bn/var_ema_op/mul"
    op: "Mul"
    input: "tower0/linear0/bn/var_ema_op/sub"
    input: "tower0/linear0/bn/var_ema_op/decay"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear0/bn/var_ema_op"
    op: "AssignSub"
    input: "linear0/bn/variance/EMA"
    input: "tower0/linear0/bn/var_ema_op/mul"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/linear0/output"
    op: "Relu"
    input: "tower0/linear0/bn/Squeeze"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear1/Reshape/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\377\377\377\377\370\001\000\000"
        }
      }
    }
  }
  node {
    name: "tower0/linear1/Reshape"
    op: "Reshape"
    input: "tower0/linear0/output"
    input: "tower0/linear1/Reshape/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear1/W/Initializer/truncated_normal/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\370\001\000\000\370\001\000\000"
        }
      }
    }
  }
  node {
    name: "linear1/W/Initializer/truncated_normal/mean"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear1/W/Initializer/truncated_normal/stddev"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0718242973089
        }
      }
    }
  }
  node {
    name: "linear1/W/Initializer/truncated_normal/TruncatedNormal"
    op: "TruncatedNormal"
    input: "linear1/W/Initializer/truncated_normal/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "seed"
      value {
        i: 0
      }
    }
    attr {
      key: "seed2"
      value {
        i: 0
      }
    }
  }
  node {
    name: "linear1/W/Initializer/truncated_normal/mul"
    op: "Mul"
    input: "linear1/W/Initializer/truncated_normal/TruncatedNormal"
    input: "linear1/W/Initializer/truncated_normal/stddev"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear1/W/Initializer/truncated_normal"
    op: "Add"
    input: "linear1/W/Initializer/truncated_normal/mul"
    input: "linear1/W/Initializer/truncated_normal/mean"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear1/W"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear1/W/Assign"
    op: "Assign"
    input: "linear1/W"
    input: "linear1/W/Initializer/truncated_normal"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear1/W/read"
    op: "Identity"
    input: "linear1/W"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear1/b/Initializer/truncated_normal/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 504
        }
      }
    }
  }
  node {
    name: "linear1/b/Initializer/truncated_normal/mean"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear1/b/Initializer/truncated_normal/stddev"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0718242973089
        }
      }
    }
  }
  node {
    name: "linear1/b/Initializer/truncated_normal/TruncatedNormal"
    op: "TruncatedNormal"
    input: "linear1/b/Initializer/truncated_normal/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "seed"
      value {
        i: 0
      }
    }
    attr {
      key: "seed2"
      value {
        i: 0
      }
    }
  }
  node {
    name: "linear1/b/Initializer/truncated_normal/mul"
    op: "Mul"
    input: "linear1/b/Initializer/truncated_normal/TruncatedNormal"
    input: "linear1/b/Initializer/truncated_normal/stddev"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear1/b/Initializer/truncated_normal"
    op: "Add"
    input: "linear1/b/Initializer/truncated_normal/mul"
    input: "linear1/b/Initializer/truncated_normal/mean"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear1/b"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear1/b/Assign"
    op: "Assign"
    input: "linear1/b"
    input: "linear1/b/Initializer/truncated_normal"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear1/b/read"
    op: "Identity"
    input: "linear1/b"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear1/MatMul"
    op: "MatMul"
    input: "tower0/linear1/Reshape"
    input: "linear1/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: false
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/linear1/BiasAdd"
    op: "BiasAdd"
    input: "tower0/linear1/MatMul"
    input: "linear1/b/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
  }
  node {
    name: "linear1/bn/beta/Initializer/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear1/bn/beta"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear1/bn/beta/Assign"
    op: "Assign"
    input: "linear1/bn/beta"
    input: "linear1/bn/beta/Initializer/Const"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear1/bn/beta/read"
    op: "Identity"
    input: "linear1/bn/beta"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear1/bn/gamma/Initializer/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "linear1/bn/gamma"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear1/bn/gamma/Assign"
    op: "Assign"
    input: "linear1/bn/gamma"
    input: "linear1/bn/gamma/Initializer/Const"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear1/bn/gamma/read"
    op: "Identity"
    input: "linear1/bn/gamma"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear1/bn/mean/EMA/Initializer/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear1/bn/mean/EMA"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear1/bn/mean/EMA/Assign"
    op: "Assign"
    input: "linear1/bn/mean/EMA"
    input: "linear1/bn/mean/EMA/Initializer/Const"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear1/bn/mean/EMA/read"
    op: "Identity"
    input: "linear1/bn/mean/EMA"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear1/bn/variance/EMA/Initializer/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "linear1/bn/variance/EMA"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear1/bn/variance/EMA/Assign"
    op: "Assign"
    input: "linear1/bn/variance/EMA"
    input: "linear1/bn/variance/EMA/Initializer/Const"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear1/bn/variance/EMA/read"
    op: "Identity"
    input: "linear1/bn/variance/EMA"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear1/bn/Reshape/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 4
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 4
            }
          }
          tensor_content: "\377\377\377\377\001\000\000\000\001\000\000\000\370\001\000\000"
        }
      }
    }
  }
  node {
    name: "tower0/linear1/bn/Reshape"
    op: "Reshape"
    input: "tower0/linear1/BiasAdd"
    input: "tower0/linear1/bn/Reshape/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear1/bn/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear1/bn/Const_1"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear1/bn/FusedBatchNorm"
    op: "FusedBatchNorm"
    input: "tower0/linear1/bn/Reshape"
    input: "linear1/bn/gamma/read"
    input: "linear1/bn/beta/read"
    input: "tower0/linear1/bn/Const"
    input: "tower0/linear1/bn/Const_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
    attr {
      key: "epsilon"
      value {
        f: 1.00099996416e-05
      }
    }
    attr {
      key: "is_training"
      value {
        b: true
      }
    }
  }
  node {
    name: "tower0/linear1/bn/Squeeze"
    op: "Squeeze"
    input: "tower0/linear1/bn/FusedBatchNorm"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "squeeze_dims"
      value {
        list {
          i: 1
          i: 2
        }
      }
    }
  }
  node {
    name: "tower0/linear1/bn/mean_ema_op/decay"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.10000000149
        }
      }
    }
  }
  node {
    name: "tower0/linear1/bn/mean_ema_op/sub"
    op: "Sub"
    input: "linear1/bn/mean/EMA/read"
    input: "tower0/linear1/bn/FusedBatchNorm:1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear1/bn/mean_ema_op/mul"
    op: "Mul"
    input: "tower0/linear1/bn/mean_ema_op/sub"
    input: "tower0/linear1/bn/mean_ema_op/decay"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear1/bn/mean_ema_op"
    op: "AssignSub"
    input: "linear1/bn/mean/EMA"
    input: "tower0/linear1/bn/mean_ema_op/mul"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/linear1/bn/var_ema_op/decay"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.10000000149
        }
      }
    }
  }
  node {
    name: "tower0/linear1/bn/var_ema_op/sub"
    op: "Sub"
    input: "linear1/bn/variance/EMA/read"
    input: "tower0/linear1/bn/FusedBatchNorm:2"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear1/bn/var_ema_op/mul"
    op: "Mul"
    input: "tower0/linear1/bn/var_ema_op/sub"
    input: "tower0/linear1/bn/var_ema_op/decay"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear1/bn/var_ema_op"
    op: "AssignSub"
    input: "linear1/bn/variance/EMA"
    input: "tower0/linear1/bn/var_ema_op/mul"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/linear1/output"
    op: "Relu"
    input: "tower0/linear1/bn/Squeeze"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear2/Reshape/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\377\377\377\377\370\001\000\000"
        }
      }
    }
  }
  node {
    name: "tower0/linear2/Reshape"
    op: "Reshape"
    input: "tower0/linear1/output"
    input: "tower0/linear2/Reshape/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear2/W/Initializer/truncated_normal/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\370\001\000\000\370\001\000\000"
        }
      }
    }
  }
  node {
    name: "linear2/W/Initializer/truncated_normal/mean"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear2/W/Initializer/truncated_normal/stddev"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0718242973089
        }
      }
    }
  }
  node {
    name: "linear2/W/Initializer/truncated_normal/TruncatedNormal"
    op: "TruncatedNormal"
    input: "linear2/W/Initializer/truncated_normal/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "seed"
      value {
        i: 0
      }
    }
    attr {
      key: "seed2"
      value {
        i: 0
      }
    }
  }
  node {
    name: "linear2/W/Initializer/truncated_normal/mul"
    op: "Mul"
    input: "linear2/W/Initializer/truncated_normal/TruncatedNormal"
    input: "linear2/W/Initializer/truncated_normal/stddev"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear2/W/Initializer/truncated_normal"
    op: "Add"
    input: "linear2/W/Initializer/truncated_normal/mul"
    input: "linear2/W/Initializer/truncated_normal/mean"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear2/W"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear2/W/Assign"
    op: "Assign"
    input: "linear2/W"
    input: "linear2/W/Initializer/truncated_normal"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear2/W/read"
    op: "Identity"
    input: "linear2/W"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear2/b/Initializer/truncated_normal/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 504
        }
      }
    }
  }
  node {
    name: "linear2/b/Initializer/truncated_normal/mean"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear2/b/Initializer/truncated_normal/stddev"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0718242973089
        }
      }
    }
  }
  node {
    name: "linear2/b/Initializer/truncated_normal/TruncatedNormal"
    op: "TruncatedNormal"
    input: "linear2/b/Initializer/truncated_normal/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "seed"
      value {
        i: 0
      }
    }
    attr {
      key: "seed2"
      value {
        i: 0
      }
    }
  }
  node {
    name: "linear2/b/Initializer/truncated_normal/mul"
    op: "Mul"
    input: "linear2/b/Initializer/truncated_normal/TruncatedNormal"
    input: "linear2/b/Initializer/truncated_normal/stddev"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear2/b/Initializer/truncated_normal"
    op: "Add"
    input: "linear2/b/Initializer/truncated_normal/mul"
    input: "linear2/b/Initializer/truncated_normal/mean"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear2/b"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear2/b/Assign"
    op: "Assign"
    input: "linear2/b"
    input: "linear2/b/Initializer/truncated_normal"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear2/b/read"
    op: "Identity"
    input: "linear2/b"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear2/MatMul"
    op: "MatMul"
    input: "tower0/linear2/Reshape"
    input: "linear2/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: false
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/linear2/BiasAdd"
    op: "BiasAdd"
    input: "tower0/linear2/MatMul"
    input: "linear2/b/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
  }
  node {
    name: "linear2/bn/beta/Initializer/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear2/bn/beta"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear2/bn/beta/Assign"
    op: "Assign"
    input: "linear2/bn/beta"
    input: "linear2/bn/beta/Initializer/Const"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear2/bn/beta/read"
    op: "Identity"
    input: "linear2/bn/beta"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear2/bn/gamma/Initializer/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "linear2/bn/gamma"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear2/bn/gamma/Assign"
    op: "Assign"
    input: "linear2/bn/gamma"
    input: "linear2/bn/gamma/Initializer/Const"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear2/bn/gamma/read"
    op: "Identity"
    input: "linear2/bn/gamma"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear2/bn/mean/EMA/Initializer/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear2/bn/mean/EMA"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear2/bn/mean/EMA/Assign"
    op: "Assign"
    input: "linear2/bn/mean/EMA"
    input: "linear2/bn/mean/EMA/Initializer/Const"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear2/bn/mean/EMA/read"
    op: "Identity"
    input: "linear2/bn/mean/EMA"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear2/bn/variance/EMA/Initializer/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "linear2/bn/variance/EMA"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear2/bn/variance/EMA/Assign"
    op: "Assign"
    input: "linear2/bn/variance/EMA"
    input: "linear2/bn/variance/EMA/Initializer/Const"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear2/bn/variance/EMA/read"
    op: "Identity"
    input: "linear2/bn/variance/EMA"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear2/bn/Reshape/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 4
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 4
            }
          }
          tensor_content: "\377\377\377\377\001\000\000\000\001\000\000\000\370\001\000\000"
        }
      }
    }
  }
  node {
    name: "tower0/linear2/bn/Reshape"
    op: "Reshape"
    input: "tower0/linear2/BiasAdd"
    input: "tower0/linear2/bn/Reshape/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear2/bn/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear2/bn/Const_1"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear2/bn/FusedBatchNorm"
    op: "FusedBatchNorm"
    input: "tower0/linear2/bn/Reshape"
    input: "linear2/bn/gamma/read"
    input: "linear2/bn/beta/read"
    input: "tower0/linear2/bn/Const"
    input: "tower0/linear2/bn/Const_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
    attr {
      key: "epsilon"
      value {
        f: 1.00099996416e-05
      }
    }
    attr {
      key: "is_training"
      value {
        b: true
      }
    }
  }
  node {
    name: "tower0/linear2/bn/Squeeze"
    op: "Squeeze"
    input: "tower0/linear2/bn/FusedBatchNorm"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "squeeze_dims"
      value {
        list {
          i: 1
          i: 2
        }
      }
    }
  }
  node {
    name: "tower0/linear2/bn/mean_ema_op/decay"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.10000000149
        }
      }
    }
  }
  node {
    name: "tower0/linear2/bn/mean_ema_op/sub"
    op: "Sub"
    input: "linear2/bn/mean/EMA/read"
    input: "tower0/linear2/bn/FusedBatchNorm:1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear2/bn/mean_ema_op/mul"
    op: "Mul"
    input: "tower0/linear2/bn/mean_ema_op/sub"
    input: "tower0/linear2/bn/mean_ema_op/decay"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear2/bn/mean_ema_op"
    op: "AssignSub"
    input: "linear2/bn/mean/EMA"
    input: "tower0/linear2/bn/mean_ema_op/mul"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/linear2/bn/var_ema_op/decay"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.10000000149
        }
      }
    }
  }
  node {
    name: "tower0/linear2/bn/var_ema_op/sub"
    op: "Sub"
    input: "linear2/bn/variance/EMA/read"
    input: "tower0/linear2/bn/FusedBatchNorm:2"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear2/bn/var_ema_op/mul"
    op: "Mul"
    input: "tower0/linear2/bn/var_ema_op/sub"
    input: "tower0/linear2/bn/var_ema_op/decay"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear2/bn/var_ema_op"
    op: "AssignSub"
    input: "linear2/bn/variance/EMA"
    input: "tower0/linear2/bn/var_ema_op/mul"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/linear2/output"
    op: "Relu"
    input: "tower0/linear2/bn/Squeeze"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear3/Reshape/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\377\377\377\377\370\001\000\000"
        }
      }
    }
  }
  node {
    name: "tower0/linear3/Reshape"
    op: "Reshape"
    input: "tower0/linear2/output"
    input: "tower0/linear3/Reshape/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear3/W/Initializer/truncated_normal/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\370\001\000\000\370\001\000\000"
        }
      }
    }
  }
  node {
    name: "linear3/W/Initializer/truncated_normal/mean"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear3/W/Initializer/truncated_normal/stddev"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0718242973089
        }
      }
    }
  }
  node {
    name: "linear3/W/Initializer/truncated_normal/TruncatedNormal"
    op: "TruncatedNormal"
    input: "linear3/W/Initializer/truncated_normal/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "seed"
      value {
        i: 0
      }
    }
    attr {
      key: "seed2"
      value {
        i: 0
      }
    }
  }
  node {
    name: "linear3/W/Initializer/truncated_normal/mul"
    op: "Mul"
    input: "linear3/W/Initializer/truncated_normal/TruncatedNormal"
    input: "linear3/W/Initializer/truncated_normal/stddev"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear3/W/Initializer/truncated_normal"
    op: "Add"
    input: "linear3/W/Initializer/truncated_normal/mul"
    input: "linear3/W/Initializer/truncated_normal/mean"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear3/W"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear3/W/Assign"
    op: "Assign"
    input: "linear3/W"
    input: "linear3/W/Initializer/truncated_normal"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear3/W/read"
    op: "Identity"
    input: "linear3/W"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear3/b/Initializer/truncated_normal/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 504
        }
      }
    }
  }
  node {
    name: "linear3/b/Initializer/truncated_normal/mean"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear3/b/Initializer/truncated_normal/stddev"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0718242973089
        }
      }
    }
  }
  node {
    name: "linear3/b/Initializer/truncated_normal/TruncatedNormal"
    op: "TruncatedNormal"
    input: "linear3/b/Initializer/truncated_normal/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "seed"
      value {
        i: 0
      }
    }
    attr {
      key: "seed2"
      value {
        i: 0
      }
    }
  }
  node {
    name: "linear3/b/Initializer/truncated_normal/mul"
    op: "Mul"
    input: "linear3/b/Initializer/truncated_normal/TruncatedNormal"
    input: "linear3/b/Initializer/truncated_normal/stddev"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear3/b/Initializer/truncated_normal"
    op: "Add"
    input: "linear3/b/Initializer/truncated_normal/mul"
    input: "linear3/b/Initializer/truncated_normal/mean"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear3/b"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear3/b/Assign"
    op: "Assign"
    input: "linear3/b"
    input: "linear3/b/Initializer/truncated_normal"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear3/b/read"
    op: "Identity"
    input: "linear3/b"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear3/MatMul"
    op: "MatMul"
    input: "tower0/linear3/Reshape"
    input: "linear3/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: false
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/linear3/BiasAdd"
    op: "BiasAdd"
    input: "tower0/linear3/MatMul"
    input: "linear3/b/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
  }
  node {
    name: "linear3/bn/beta/Initializer/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear3/bn/beta"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear3/bn/beta/Assign"
    op: "Assign"
    input: "linear3/bn/beta"
    input: "linear3/bn/beta/Initializer/Const"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear3/bn/beta/read"
    op: "Identity"
    input: "linear3/bn/beta"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear3/bn/gamma/Initializer/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "linear3/bn/gamma"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear3/bn/gamma/Assign"
    op: "Assign"
    input: "linear3/bn/gamma"
    input: "linear3/bn/gamma/Initializer/Const"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear3/bn/gamma/read"
    op: "Identity"
    input: "linear3/bn/gamma"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear3/bn/mean/EMA/Initializer/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear3/bn/mean/EMA"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear3/bn/mean/EMA/Assign"
    op: "Assign"
    input: "linear3/bn/mean/EMA"
    input: "linear3/bn/mean/EMA/Initializer/Const"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear3/bn/mean/EMA/read"
    op: "Identity"
    input: "linear3/bn/mean/EMA"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear3/bn/variance/EMA/Initializer/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "linear3/bn/variance/EMA"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear3/bn/variance/EMA/Assign"
    op: "Assign"
    input: "linear3/bn/variance/EMA"
    input: "linear3/bn/variance/EMA/Initializer/Const"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear3/bn/variance/EMA/read"
    op: "Identity"
    input: "linear3/bn/variance/EMA"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear3/bn/Reshape/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 4
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 4
            }
          }
          tensor_content: "\377\377\377\377\001\000\000\000\001\000\000\000\370\001\000\000"
        }
      }
    }
  }
  node {
    name: "tower0/linear3/bn/Reshape"
    op: "Reshape"
    input: "tower0/linear3/BiasAdd"
    input: "tower0/linear3/bn/Reshape/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear3/bn/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear3/bn/Const_1"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear3/bn/FusedBatchNorm"
    op: "FusedBatchNorm"
    input: "tower0/linear3/bn/Reshape"
    input: "linear3/bn/gamma/read"
    input: "linear3/bn/beta/read"
    input: "tower0/linear3/bn/Const"
    input: "tower0/linear3/bn/Const_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
    attr {
      key: "epsilon"
      value {
        f: 1.00099996416e-05
      }
    }
    attr {
      key: "is_training"
      value {
        b: true
      }
    }
  }
  node {
    name: "tower0/linear3/bn/Squeeze"
    op: "Squeeze"
    input: "tower0/linear3/bn/FusedBatchNorm"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "squeeze_dims"
      value {
        list {
          i: 1
          i: 2
        }
      }
    }
  }
  node {
    name: "tower0/linear3/bn/mean_ema_op/decay"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.10000000149
        }
      }
    }
  }
  node {
    name: "tower0/linear3/bn/mean_ema_op/sub"
    op: "Sub"
    input: "linear3/bn/mean/EMA/read"
    input: "tower0/linear3/bn/FusedBatchNorm:1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear3/bn/mean_ema_op/mul"
    op: "Mul"
    input: "tower0/linear3/bn/mean_ema_op/sub"
    input: "tower0/linear3/bn/mean_ema_op/decay"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear3/bn/mean_ema_op"
    op: "AssignSub"
    input: "linear3/bn/mean/EMA"
    input: "tower0/linear3/bn/mean_ema_op/mul"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/linear3/bn/var_ema_op/decay"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.10000000149
        }
      }
    }
  }
  node {
    name: "tower0/linear3/bn/var_ema_op/sub"
    op: "Sub"
    input: "linear3/bn/variance/EMA/read"
    input: "tower0/linear3/bn/FusedBatchNorm:2"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear3/bn/var_ema_op/mul"
    op: "Mul"
    input: "tower0/linear3/bn/var_ema_op/sub"
    input: "tower0/linear3/bn/var_ema_op/decay"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear3/bn/var_ema_op"
    op: "AssignSub"
    input: "linear3/bn/variance/EMA"
    input: "tower0/linear3/bn/var_ema_op/mul"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/linear3/output"
    op: "Relu"
    input: "tower0/linear3/bn/Squeeze"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/last_linear/Reshape/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\377\377\377\377\370\001\000\000"
        }
      }
    }
  }
  node {
    name: "tower0/last_linear/Reshape"
    op: "Reshape"
    input: "tower0/linear3/output"
    input: "tower0/last_linear/Reshape/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "last_linear/W/Initializer/truncated_normal/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\370\001\000\000\377\000\000\000"
        }
      }
    }
  }
  node {
    name: "last_linear/W/Initializer/truncated_normal/mean"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "last_linear/W/Initializer/truncated_normal/stddev"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0718242973089
        }
      }
    }
  }
  node {
    name: "last_linear/W/Initializer/truncated_normal/TruncatedNormal"
    op: "TruncatedNormal"
    input: "last_linear/W/Initializer/truncated_normal/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "seed"
      value {
        i: 0
      }
    }
    attr {
      key: "seed2"
      value {
        i: 0
      }
    }
  }
  node {
    name: "last_linear/W/Initializer/truncated_normal/mul"
    op: "Mul"
    input: "last_linear/W/Initializer/truncated_normal/TruncatedNormal"
    input: "last_linear/W/Initializer/truncated_normal/stddev"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
  }
  node {
    name: "last_linear/W/Initializer/truncated_normal"
    op: "Add"
    input: "last_linear/W/Initializer/truncated_normal/mul"
    input: "last_linear/W/Initializer/truncated_normal/mean"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
  }
  node {
    name: "last_linear/W"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
          dim {
            size: 255
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "last_linear/W/Assign"
    op: "Assign"
    input: "last_linear/W"
    input: "last_linear/W/Initializer/truncated_normal"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "last_linear/W/read"
    op: "Identity"
    input: "last_linear/W"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
  }
  node {
    name: "last_linear/b/Initializer/truncated_normal/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 255
        }
      }
    }
  }
  node {
    name: "last_linear/b/Initializer/truncated_normal/mean"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "last_linear/b/Initializer/truncated_normal/stddev"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.100975632668
        }
      }
    }
  }
  node {
    name: "last_linear/b/Initializer/truncated_normal/TruncatedNormal"
    op: "TruncatedNormal"
    input: "last_linear/b/Initializer/truncated_normal/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "seed"
      value {
        i: 0
      }
    }
    attr {
      key: "seed2"
      value {
        i: 0
      }
    }
  }
  node {
    name: "last_linear/b/Initializer/truncated_normal/mul"
    op: "Mul"
    input: "last_linear/b/Initializer/truncated_normal/TruncatedNormal"
    input: "last_linear/b/Initializer/truncated_normal/stddev"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 255
            }
          }
        }
      }
    }
  }
  node {
    name: "last_linear/b/Initializer/truncated_normal"
    op: "Add"
    input: "last_linear/b/Initializer/truncated_normal/mul"
    input: "last_linear/b/Initializer/truncated_normal/mean"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 255
            }
          }
        }
      }
    }
  }
  node {
    name: "last_linear/b"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 255
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "last_linear/b/Assign"
    op: "Assign"
    input: "last_linear/b"
    input: "last_linear/b/Initializer/truncated_normal"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "last_linear/b/read"
    op: "Identity"
    input: "last_linear/b"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 255
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/last_linear/MatMul"
    op: "MatMul"
    input: "tower0/last_linear/Reshape"
    input: "last_linear/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: false
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/last_linear/BiasAdd"
    op: "BiasAdd"
    input: "tower0/last_linear/MatMul"
    input: "last_linear/b/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
  }
  node {
    name: "tower0/last_linear/output"
    op: "Identity"
    input: "tower0/last_linear/BiasAdd"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/output"
    op: "Softmax"
    input: "tower0/last_linear/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/ArgMax/dimension"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "tower0/ArgMax"
    op: "ArgMax"
    input: "tower0/output"
    input: "tower0/ArgMax/dimension"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    attr {
      key: "output_type"
      value {
        type: DT_INT64
      }
    }
  }
  node {
    name: "tower0/Reshape/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: -1
        }
      }
    }
  }
  node {
    name: "tower0/Reshape"
    op: "Reshape"
    input: "tower0/ArgMax"
    input: "tower0/Reshape/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/UniqueWithCounts"
    op: "UniqueWithCounts"
    input: "tower0/Reshape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    attr {
      key: "out_idx"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "tower0/ArgMax_1/dimension"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "tower0/ArgMax_1"
    op: "ArgMax"
    input: "tower0/UniqueWithCounts:2"
    input: "tower0/ArgMax_1/dimension"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "output_type"
      value {
        type: DT_INT64
      }
    }
  }
  node {
    name: "tower0/Gather"
    op: "Gather"
    input: "tower0/UniqueWithCounts"
    input: "tower0/ArgMax_1"
    device: "/device:GPU:0"
    attr {
      key: "Tindices"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "Tparams"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "validate_indices"
      value {
        b: true
      }
    }
  }
  node {
    name: "tower0/strided_slice/stack"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "tower0/strided_slice/stack_1"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "tower0/strided_slice/stack_2"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "tower0/strided_slice"
    op: "StridedSlice"
    input: "QueueInput/input_deque:1"
    input: "tower0/strided_slice/stack"
    input: "tower0/strided_slice/stack_1"
    input: "tower0/strided_slice/stack_2"
    device: "/device:GPU:0"
    attr {
      key: "Index"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "begin_mask"
      value {
        i: 0
      }
    }
    attr {
      key: "ellipsis_mask"
      value {
        i: 0
      }
    }
    attr {
      key: "end_mask"
      value {
        i: 0
      }
    }
    attr {
      key: "new_axis_mask"
      value {
        i: 0
      }
    }
    attr {
      key: "shrink_axis_mask"
      value {
        i: 1
      }
    }
  }
  node {
    name: "tower0/Cast"
    op: "Cast"
    input: "tower0/strided_slice"
    device: "/device:GPU:0"
    attr {
      key: "DstT"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "SrcT"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "tower0/NotEqual"
    op: "NotEqual"
    input: "tower0/Gather"
    input: "tower0/Cast"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "tower0/utt-wrong/dim"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "tower0/utt-wrong"
    op: "ExpandDims"
    input: "tower0/NotEqual"
    input: "tower0/utt-wrong/dim"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "Tdim"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/SparseSoftmaxCrossEntropyWithLogits/Shape"
    op: "Shape"
    input: "QueueInput/input_deque:1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "tower0/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
    op: "SparseSoftmaxCrossEntropyWithLogits"
    input: "tower0/last_linear/output"
    input: "QueueInput/input_deque:1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tlabels"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "tower0/cross_entropy_loss"
    op: "Mean"
    input: "tower0/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
    input: "tower0/Const"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss/Initializer/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss/Assign"
    op: "Assign"
    input: "EMA/cross_entropy_loss"
    input: "EMA/cross_entropy_loss/Initializer/Const"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss/read"
    op: "Identity"
    input: "EMA/cross_entropy_loss"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss_EMA_apply/decay"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0500000007451
        }
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss/biased"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss/biased/Assign"
    op: "Assign"
    input: "EMA/cross_entropy_loss/biased"
    input: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss/biased/read"
    op: "Identity"
    input: "EMA/cross_entropy_loss/biased"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss/local_step/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss/local_step"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss/local_step/Assign"
    op: "Assign"
    input: "EMA/cross_entropy_loss/local_step"
    input: "EMA/cross_entropy_loss/local_step/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss/local_step/read"
    op: "Identity"
    input: "EMA/cross_entropy_loss/local_step"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/sub"
    op: "Sub"
    input: "EMA/cross_entropy_loss/biased/read"
    input: "tower0/cross_entropy_loss"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/mul"
    op: "Mul"
    input: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/sub"
    input: "EMA/cross_entropy_loss_EMA_apply/decay"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/EMA/cross_entropy_loss"
    op: "AssignSub"
    input: "EMA/cross_entropy_loss/biased"
    input: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/mul"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/AssignAdd/value"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/AssignAdd"
    op: "AssignAdd"
    input: "EMA/cross_entropy_loss/local_step"
    input: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/AssignAdd/value"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/read"
    op: "Identity"
    input: "EMA/cross_entropy_loss/biased"
    input: "^EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/EMA/cross_entropy_loss"
    input: "^EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/AssignAdd"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/sub_1/x"
    op: "Const"
    input: "^EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/EMA/cross_entropy_loss"
    input: "^EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/AssignAdd"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/sub_1"
    op: "Sub"
    input: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/sub_1/x"
    input: "EMA/cross_entropy_loss_EMA_apply/decay"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/read_1"
    op: "Identity"
    input: "EMA/cross_entropy_loss/local_step"
    input: "^EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/EMA/cross_entropy_loss"
    input: "^EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/AssignAdd"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/Pow"
    op: "Pow"
    input: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/sub_1"
    input: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/read_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/sub_2/x"
    op: "Const"
    input: "^EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/EMA/cross_entropy_loss"
    input: "^EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/AssignAdd"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/sub_2"
    op: "Sub"
    input: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/sub_2/x"
    input: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/Pow"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/truediv"
    op: "RealDiv"
    input: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/read"
    input: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/sub_2"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/sub_3"
    op: "Sub"
    input: "EMA/cross_entropy_loss/read"
    input: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/truediv"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/cross_entropy_loss_EMA_apply"
    op: "AssignSub"
    input: "EMA/cross_entropy_loss"
    input: "EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/sub_3"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "cross_entropy_loss-summary/tags"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "cross_entropy_loss-summary"
        }
      }
    }
  }
  node {
    name: "cross_entropy_loss-summary"
    op: "ScalarSummary"
    input: "cross_entropy_loss-summary/tags"
    input: "EMA/cross_entropy_loss_EMA_apply"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "tower0/in_top_k/InTopKV2/k"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "tower0/in_top_k/InTopKV2"
    op: "InTopKV2"
    input: "tower0/last_linear/output"
    input: "QueueInput/input_deque:1"
    input: "tower0/in_top_k/InTopKV2/k"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/LogicalNot"
    op: "LogicalNot"
    input: "tower0/in_top_k/InTopKV2"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/wrong-top1"
    op: "Cast"
    input: "tower0/LogicalNot"
    device: "/device:GPU:0"
    attr {
      key: "DstT"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "SrcT"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/Const_1"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "tower0/train-error-top1"
    op: "Mean"
    input: "tower0/wrong-top1"
    input: "tower0/Const_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "EMA/train-error-top1/Initializer/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "EMA/train-error-top1"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "EMA/train-error-top1/Assign"
    op: "Assign"
    input: "EMA/train-error-top1"
    input: "EMA/train-error-top1/Initializer/Const"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "EMA/train-error-top1/read"
    op: "Identity"
    input: "EMA/train-error-top1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/train-error-top1_EMA_apply/decay"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0500000007451
        }
      }
    }
  }
  node {
    name: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "EMA/train-error-top1/biased"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "EMA/train-error-top1/biased/Assign"
    op: "Assign"
    input: "EMA/train-error-top1/biased"
    input: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "EMA/train-error-top1/biased/read"
    op: "Identity"
    input: "EMA/train-error-top1/biased"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/train-error-top1/local_step/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "EMA/train-error-top1/local_step"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "EMA/train-error-top1/local_step/Assign"
    op: "Assign"
    input: "EMA/train-error-top1/local_step"
    input: "EMA/train-error-top1/local_step/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "EMA/train-error-top1/local_step/read"
    op: "Identity"
    input: "EMA/train-error-top1/local_step"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/sub"
    op: "Sub"
    input: "EMA/train-error-top1/biased/read"
    input: "tower0/train-error-top1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/mul"
    op: "Mul"
    input: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/sub"
    input: "EMA/train-error-top1_EMA_apply/decay"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/EMA/train-error-top1"
    op: "AssignSub"
    input: "EMA/train-error-top1/biased"
    input: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/mul"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/AssignAdd/value"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/AssignAdd"
    op: "AssignAdd"
    input: "EMA/train-error-top1/local_step"
    input: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/AssignAdd/value"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/read"
    op: "Identity"
    input: "EMA/train-error-top1/biased"
    input: "^EMA/train-error-top1_EMA_apply/EMA/train-error-top1/EMA/train-error-top1"
    input: "^EMA/train-error-top1_EMA_apply/EMA/train-error-top1/AssignAdd"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/sub_1/x"
    op: "Const"
    input: "^EMA/train-error-top1_EMA_apply/EMA/train-error-top1/EMA/train-error-top1"
    input: "^EMA/train-error-top1_EMA_apply/EMA/train-error-top1/AssignAdd"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/sub_1"
    op: "Sub"
    input: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/sub_1/x"
    input: "EMA/train-error-top1_EMA_apply/decay"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/read_1"
    op: "Identity"
    input: "EMA/train-error-top1/local_step"
    input: "^EMA/train-error-top1_EMA_apply/EMA/train-error-top1/EMA/train-error-top1"
    input: "^EMA/train-error-top1_EMA_apply/EMA/train-error-top1/AssignAdd"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/Pow"
    op: "Pow"
    input: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/sub_1"
    input: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/read_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/sub_2/x"
    op: "Const"
    input: "^EMA/train-error-top1_EMA_apply/EMA/train-error-top1/EMA/train-error-top1"
    input: "^EMA/train-error-top1_EMA_apply/EMA/train-error-top1/AssignAdd"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/sub_2"
    op: "Sub"
    input: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/sub_2/x"
    input: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/Pow"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/truediv"
    op: "RealDiv"
    input: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/read"
    input: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/sub_2"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/sub_3"
    op: "Sub"
    input: "EMA/train-error-top1/read"
    input: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/truediv"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "EMA/train-error-top1_EMA_apply"
    op: "AssignSub"
    input: "EMA/train-error-top1"
    input: "EMA/train-error-top1_EMA_apply/EMA/train-error-top1/sub_3"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "train-error-top1-summary/tags"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "train-error-top1-summary"
        }
      }
    }
  }
  node {
    name: "train-error-top1-summary"
    op: "ScalarSummary"
    input: "train-error-top1-summary/tags"
    input: "EMA/train-error-top1_EMA_apply"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "Square"
    op: "Square"
    input: "linear0/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\000\000\000\000\001\000\000\000"
        }
      }
    }
  }
  node {
    name: "Mean"
    op: "Mean"
    input: "Square"
    input: "Const"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "linear0/W/rms"
    op: "Sqrt"
    input: "Mean"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "param-summary/linear0/W-rms/tags"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "param-summary/linear0/W-rms"
        }
      }
    }
  }
  node {
    name: "param-summary/linear0/W-rms"
    op: "ScalarSummary"
    input: "param-summary/linear0/W-rms/tags"
    input: "linear0/W/rms"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "param-summary/linear0/W-histogram/tag"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "param-summary/linear0/W-histogram"
        }
      }
    }
  }
  node {
    name: "param-summary/linear0/W-histogram"
    op: "HistogramSummary"
    input: "param-summary/linear0/W-histogram/tag"
    input: "linear0/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "Square_1"
    op: "Square"
    input: "linear1/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "Const_1"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\000\000\000\000\001\000\000\000"
        }
      }
    }
  }
  node {
    name: "Mean_1"
    op: "Mean"
    input: "Square_1"
    input: "Const_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "linear1/W/rms"
    op: "Sqrt"
    input: "Mean_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "param-summary/linear1/W-rms/tags"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "param-summary/linear1/W-rms"
        }
      }
    }
  }
  node {
    name: "param-summary/linear1/W-rms"
    op: "ScalarSummary"
    input: "param-summary/linear1/W-rms/tags"
    input: "linear1/W/rms"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "param-summary/linear1/W-histogram/tag"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "param-summary/linear1/W-histogram"
        }
      }
    }
  }
  node {
    name: "param-summary/linear1/W-histogram"
    op: "HistogramSummary"
    input: "param-summary/linear1/W-histogram/tag"
    input: "linear1/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "Square_2"
    op: "Square"
    input: "linear2/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "Const_2"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\000\000\000\000\001\000\000\000"
        }
      }
    }
  }
  node {
    name: "Mean_2"
    op: "Mean"
    input: "Square_2"
    input: "Const_2"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "linear2/W/rms"
    op: "Sqrt"
    input: "Mean_2"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "param-summary/linear2/W-rms/tags"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "param-summary/linear2/W-rms"
        }
      }
    }
  }
  node {
    name: "param-summary/linear2/W-rms"
    op: "ScalarSummary"
    input: "param-summary/linear2/W-rms/tags"
    input: "linear2/W/rms"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "param-summary/linear2/W-histogram/tag"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "param-summary/linear2/W-histogram"
        }
      }
    }
  }
  node {
    name: "param-summary/linear2/W-histogram"
    op: "HistogramSummary"
    input: "param-summary/linear2/W-histogram/tag"
    input: "linear2/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "Square_3"
    op: "Square"
    input: "linear3/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "Const_3"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\000\000\000\000\001\000\000\000"
        }
      }
    }
  }
  node {
    name: "Mean_3"
    op: "Mean"
    input: "Square_3"
    input: "Const_3"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "linear3/W/rms"
    op: "Sqrt"
    input: "Mean_3"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "param-summary/linear3/W-rms/tags"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "param-summary/linear3/W-rms"
        }
      }
    }
  }
  node {
    name: "param-summary/linear3/W-rms"
    op: "ScalarSummary"
    input: "param-summary/linear3/W-rms/tags"
    input: "linear3/W/rms"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "param-summary/linear3/W-histogram/tag"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "param-summary/linear3/W-histogram"
        }
      }
    }
  }
  node {
    name: "param-summary/linear3/W-histogram"
    op: "HistogramSummary"
    input: "param-summary/linear3/W-histogram/tag"
    input: "linear3/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "Square_4"
    op: "Square"
    input: "last_linear/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
  }
  node {
    name: "Const_4"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\000\000\000\000\001\000\000\000"
        }
      }
    }
  }
  node {
    name: "Mean_4"
    op: "Mean"
    input: "Square_4"
    input: "Const_4"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "last_linear/W/rms"
    op: "Sqrt"
    input: "Mean_4"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "param-summary/last_linear/W-rms/tags"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "param-summary/last_linear/W-rms"
        }
      }
    }
  }
  node {
    name: "param-summary/last_linear/W-rms"
    op: "ScalarSummary"
    input: "param-summary/last_linear/W-rms/tags"
    input: "last_linear/W/rms"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "param-summary/last_linear/W-histogram/tag"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "param-summary/last_linear/W-histogram"
        }
      }
    }
  }
  node {
    name: "param-summary/last_linear/W-histogram"
    op: "HistogramSummary"
    input: "param-summary/last_linear/W-histogram/tag"
    input: "last_linear/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "Square_5"
    op: "Square"
    input: "linear0/b/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "Const_5"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "Mean_5"
    op: "Mean"
    input: "Square_5"
    input: "Const_5"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "linear0/b/rms"
    op: "Sqrt"
    input: "Mean_5"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "param-summary/linear0/b-rms/tags"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "param-summary/linear0/b-rms"
        }
      }
    }
  }
  node {
    name: "param-summary/linear0/b-rms"
    op: "ScalarSummary"
    input: "param-summary/linear0/b-rms/tags"
    input: "linear0/b/rms"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "param-summary/linear0/b-histogram/tag"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "param-summary/linear0/b-histogram"
        }
      }
    }
  }
  node {
    name: "param-summary/linear0/b-histogram"
    op: "HistogramSummary"
    input: "param-summary/linear0/b-histogram/tag"
    input: "linear0/b/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "Square_6"
    op: "Square"
    input: "linear1/b/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "Const_6"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "Mean_6"
    op: "Mean"
    input: "Square_6"
    input: "Const_6"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "linear1/b/rms"
    op: "Sqrt"
    input: "Mean_6"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "param-summary/linear1/b-rms/tags"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "param-summary/linear1/b-rms"
        }
      }
    }
  }
  node {
    name: "param-summary/linear1/b-rms"
    op: "ScalarSummary"
    input: "param-summary/linear1/b-rms/tags"
    input: "linear1/b/rms"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "param-summary/linear1/b-histogram/tag"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "param-summary/linear1/b-histogram"
        }
      }
    }
  }
  node {
    name: "param-summary/linear1/b-histogram"
    op: "HistogramSummary"
    input: "param-summary/linear1/b-histogram/tag"
    input: "linear1/b/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "Square_7"
    op: "Square"
    input: "linear2/b/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "Const_7"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "Mean_7"
    op: "Mean"
    input: "Square_7"
    input: "Const_7"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "linear2/b/rms"
    op: "Sqrt"
    input: "Mean_7"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "param-summary/linear2/b-rms/tags"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "param-summary/linear2/b-rms"
        }
      }
    }
  }
  node {
    name: "param-summary/linear2/b-rms"
    op: "ScalarSummary"
    input: "param-summary/linear2/b-rms/tags"
    input: "linear2/b/rms"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "param-summary/linear2/b-histogram/tag"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "param-summary/linear2/b-histogram"
        }
      }
    }
  }
  node {
    name: "param-summary/linear2/b-histogram"
    op: "HistogramSummary"
    input: "param-summary/linear2/b-histogram/tag"
    input: "linear2/b/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "Square_8"
    op: "Square"
    input: "linear3/b/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "Const_8"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "Mean_8"
    op: "Mean"
    input: "Square_8"
    input: "Const_8"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "linear3/b/rms"
    op: "Sqrt"
    input: "Mean_8"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "param-summary/linear3/b-rms/tags"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "param-summary/linear3/b-rms"
        }
      }
    }
  }
  node {
    name: "param-summary/linear3/b-rms"
    op: "ScalarSummary"
    input: "param-summary/linear3/b-rms/tags"
    input: "linear3/b/rms"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "param-summary/linear3/b-histogram/tag"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "param-summary/linear3/b-histogram"
        }
      }
    }
  }
  node {
    name: "param-summary/linear3/b-histogram"
    op: "HistogramSummary"
    input: "param-summary/linear3/b-histogram/tag"
    input: "linear3/b/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "Square_9"
    op: "Square"
    input: "last_linear/b/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 255
            }
          }
        }
      }
    }
  }
  node {
    name: "Const_9"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "Mean_9"
    op: "Mean"
    input: "Square_9"
    input: "Const_9"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "last_linear/b/rms"
    op: "Sqrt"
    input: "Mean_9"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "param-summary/last_linear/b-rms/tags"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "param-summary/last_linear/b-rms"
        }
      }
    }
  }
  node {
    name: "param-summary/last_linear/b-rms"
    op: "ScalarSummary"
    input: "param-summary/last_linear/b-rms/tags"
    input: "last_linear/b/rms"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "param-summary/last_linear/b-histogram/tag"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "param-summary/last_linear/b-histogram"
        }
      }
    }
  }
  node {
    name: "param-summary/last_linear/b-histogram"
    op: "HistogramSummary"
    input: "param-summary/last_linear/b-histogram/tag"
    input: "last_linear/b/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "Square_10"
    op: "Square"
    input: "tower0/linear0/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "Const_10"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\000\000\000\000\001\000\000\000"
        }
      }
    }
  }
  node {
    name: "Mean_10"
    op: "Mean"
    input: "Square_10"
    input: "Const_10"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/linear0/output/rms"
    op: "Sqrt"
    input: "Mean_10"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/linear0/output-rms/tags"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "tower0/activation-summaries/tower0/linear0/output-rms"
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/linear0/output-rms"
    op: "ScalarSummary"
    input: "tower0/activation-summaries/tower0/linear0/output-rms/tags"
    input: "tower0/linear0/output/rms"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/linear0/output-histogram/tag"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "tower0/activation-summaries/tower0/linear0/output-histogram"
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/linear0/output-histogram"
    op: "HistogramSummary"
    input: "tower0/activation-summaries/tower0/linear0/output-histogram/tag"
    input: "tower0/linear0/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "Square_11"
    op: "Square"
    input: "tower0/linear1/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "Const_11"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\000\000\000\000\001\000\000\000"
        }
      }
    }
  }
  node {
    name: "Mean_11"
    op: "Mean"
    input: "Square_11"
    input: "Const_11"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/linear1/output/rms"
    op: "Sqrt"
    input: "Mean_11"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/linear1/output-rms/tags"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "tower0/activation-summaries/tower0/linear1/output-rms"
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/linear1/output-rms"
    op: "ScalarSummary"
    input: "tower0/activation-summaries/tower0/linear1/output-rms/tags"
    input: "tower0/linear1/output/rms"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/linear1/output-histogram/tag"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "tower0/activation-summaries/tower0/linear1/output-histogram"
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/linear1/output-histogram"
    op: "HistogramSummary"
    input: "tower0/activation-summaries/tower0/linear1/output-histogram/tag"
    input: "tower0/linear1/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "Square_12"
    op: "Square"
    input: "tower0/linear2/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "Const_12"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\000\000\000\000\001\000\000\000"
        }
      }
    }
  }
  node {
    name: "Mean_12"
    op: "Mean"
    input: "Square_12"
    input: "Const_12"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/linear2/output/rms"
    op: "Sqrt"
    input: "Mean_12"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/linear2/output-rms/tags"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "tower0/activation-summaries/tower0/linear2/output-rms"
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/linear2/output-rms"
    op: "ScalarSummary"
    input: "tower0/activation-summaries/tower0/linear2/output-rms/tags"
    input: "tower0/linear2/output/rms"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/linear2/output-histogram/tag"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "tower0/activation-summaries/tower0/linear2/output-histogram"
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/linear2/output-histogram"
    op: "HistogramSummary"
    input: "tower0/activation-summaries/tower0/linear2/output-histogram/tag"
    input: "tower0/linear2/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "Square_13"
    op: "Square"
    input: "tower0/linear3/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "Const_13"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\000\000\000\000\001\000\000\000"
        }
      }
    }
  }
  node {
    name: "Mean_13"
    op: "Mean"
    input: "Square_13"
    input: "Const_13"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/linear3/output/rms"
    op: "Sqrt"
    input: "Mean_13"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/linear3/output-rms/tags"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "tower0/activation-summaries/tower0/linear3/output-rms"
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/linear3/output-rms"
    op: "ScalarSummary"
    input: "tower0/activation-summaries/tower0/linear3/output-rms/tags"
    input: "tower0/linear3/output/rms"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/linear3/output-histogram/tag"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "tower0/activation-summaries/tower0/linear3/output-histogram"
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/linear3/output-histogram"
    op: "HistogramSummary"
    input: "tower0/activation-summaries/tower0/linear3/output-histogram/tag"
    input: "tower0/linear3/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "Square_14"
    op: "Square"
    input: "tower0/last_linear/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
  }
  node {
    name: "Const_14"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\000\000\000\000\001\000\000\000"
        }
      }
    }
  }
  node {
    name: "Mean_14"
    op: "Mean"
    input: "Square_14"
    input: "Const_14"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/last_linear/output/rms"
    op: "Sqrt"
    input: "Mean_14"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/last_linear/output-rms/tags"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "tower0/activation-summaries/tower0/last_linear/output-rms"
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/last_linear/output-rms"
    op: "ScalarSummary"
    input: "tower0/activation-summaries/tower0/last_linear/output-rms/tags"
    input: "tower0/last_linear/output/rms"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/last_linear/output-histogram/tag"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "tower0/activation-summaries/tower0/last_linear/output-histogram"
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/last_linear/output-histogram"
    op: "HistogramSummary"
    input: "tower0/activation-summaries/tower0/last_linear/output-histogram/tag"
    input: "tower0/last_linear/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "Square_15"
    op: "Square"
    input: "tower0/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
  }
  node {
    name: "Const_15"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\000\000\000\000\001\000\000\000"
        }
      }
    }
  }
  node {
    name: "Mean_15"
    op: "Mean"
    input: "Square_15"
    input: "Const_15"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/output/rms"
    op: "Sqrt"
    input: "Mean_15"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/output-rms/tags"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "tower0/activation-summaries/tower0/output-rms"
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/output-rms"
    op: "ScalarSummary"
    input: "tower0/activation-summaries/tower0/output-rms/tags"
    input: "tower0/output/rms"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/output-histogram/tag"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "tower0/activation-summaries/tower0/output-histogram"
        }
      }
    }
  }
  node {
    name: "tower0/activation-summaries/tower0/output-histogram"
    op: "HistogramSummary"
    input: "tower0/activation-summaries/tower0/output-histogram/tag"
    input: "tower0/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "tower0/cost"
    op: "Identity"
    input: "tower0/cross_entropy_loss"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "tower0/TotalMults"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 1394568
        }
      }
    }
  }
  node {
    name: "tower0/TotalWeights"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 1396839
        }
      }
    }
  }
  node {
    name: "tower0/gradients/Shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cost"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cost"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "tower0/gradients/Fill"
    op: "Fill"
    input: "tower0/gradients/Shape"
    input: "tower0/gradients/Const"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cost"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/cross_entropy_loss_grad/Reshape/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/cross_entropy_loss_grad/Reshape"
    op: "Reshape"
    input: "tower0/gradients/Fill"
    input: "tower0/gradients/tower0/cross_entropy_loss_grad/Reshape/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/cross_entropy_loss_grad/Shape"
    op: "Shape"
    input: "tower0/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/cross_entropy_loss_grad/Tile"
    op: "Tile"
    input: "tower0/gradients/tower0/cross_entropy_loss_grad/Reshape"
    input: "tower0/gradients/tower0/cross_entropy_loss_grad/Shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tmultiples"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/cross_entropy_loss_grad/Shape_1"
    op: "Shape"
    input: "tower0/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/cross_entropy_loss_grad/Shape_2"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/cross_entropy_loss_grad/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/cross_entropy_loss_grad/Prod"
    op: "Prod"
    input: "tower0/gradients/tower0/cross_entropy_loss_grad/Shape_1"
    input: "tower0/gradients/tower0/cross_entropy_loss_grad/Const"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/cross_entropy_loss_grad/Const_1"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/cross_entropy_loss_grad/Prod_1"
    op: "Prod"
    input: "tower0/gradients/tower0/cross_entropy_loss_grad/Shape_2"
    input: "tower0/gradients/tower0/cross_entropy_loss_grad/Const_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/cross_entropy_loss_grad/Maximum/y"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/cross_entropy_loss_grad/Maximum"
    op: "Maximum"
    input: "tower0/gradients/tower0/cross_entropy_loss_grad/Prod_1"
    input: "tower0/gradients/tower0/cross_entropy_loss_grad/Maximum/y"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/cross_entropy_loss_grad/floordiv"
    op: "FloorDiv"
    input: "tower0/gradients/tower0/cross_entropy_loss_grad/Prod"
    input: "tower0/gradients/tower0/cross_entropy_loss_grad/Maximum"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/cross_entropy_loss_grad/Cast"
    op: "Cast"
    input: "tower0/gradients/tower0/cross_entropy_loss_grad/floordiv"
    device: "/device:GPU:0"
    attr {
      key: "DstT"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "SrcT"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/cross_entropy_loss_grad/truediv"
    op: "RealDiv"
    input: "tower0/gradients/tower0/cross_entropy_loss_grad/Tile"
    input: "tower0/gradients/tower0/cross_entropy_loss_grad/Cast"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/zeros_like"
    op: "ZerosLike"
    input: "tower0/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
    op: "PreventGradient"
    input: "tower0/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "message"
      value {
        s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: -1
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
    op: "ExpandDims"
    input: "tower0/gradients/tower0/cross_entropy_loss_grad/truediv"
    input: "tower0/gradients/tower0/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tdim"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
    op: "Mul"
    input: "tower0/gradients/tower0/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
    input: "tower0/gradients/tower0/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/last_linear/BiasAdd_grad/BiasAddGrad"
    op: "BiasAddGrad"
    input: "tower0/gradients/tower0/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/last_linear/BiasAdd"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/last_linear/MatMul_grad/MatMul"
    op: "MatMul"
    input: "tower0/gradients/tower0/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
    input: "last_linear/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/last_linear/MatMul"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: false
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: true
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/last_linear/MatMul_grad/MatMul_1"
    op: "MatMul"
    input: "tower0/last_linear/Reshape"
    input: "tower0/gradients/tower0/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/last_linear/MatMul"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: true
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/last_linear/Reshape_grad/Shape"
    op: "Shape"
    input: "tower0/linear3/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/last_linear/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/last_linear/Reshape_grad/Reshape"
    op: "Reshape"
    input: "tower0/gradients/tower0/last_linear/MatMul_grad/MatMul"
    input: "tower0/gradients/tower0/last_linear/Reshape_grad/Shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/last_linear/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear3/output_grad/ReluGrad"
    op: "ReluGrad"
    input: "tower0/gradients/tower0/last_linear/Reshape_grad/Reshape"
    input: "tower0/linear3/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear3/output"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear3/bn/Squeeze_grad/Shape"
    op: "Shape"
    input: "tower0/linear3/bn/FusedBatchNorm"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear3/bn/Squeeze"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 4
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear3/bn/Squeeze_grad/Reshape"
    op: "Reshape"
    input: "tower0/gradients/tower0/linear3/output_grad/ReluGrad"
    input: "tower0/gradients/tower0/linear3/bn/Squeeze_grad/Shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear3/bn/Squeeze"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/zeros_like_1"
    op: "ZerosLike"
    input: "tower0/linear3/bn/FusedBatchNorm:1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear3/bn/FusedBatchNorm"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/zeros_like_2"
    op: "ZerosLike"
    input: "tower0/linear3/bn/FusedBatchNorm:2"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear3/bn/FusedBatchNorm"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/zeros_like_3"
    op: "ZerosLike"
    input: "tower0/linear3/bn/FusedBatchNorm:3"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear3/bn/FusedBatchNorm"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/zeros_like_4"
    op: "ZerosLike"
    input: "tower0/linear3/bn/FusedBatchNorm:4"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear3/bn/FusedBatchNorm"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear3/bn/FusedBatchNorm_grad/FusedBatchNormGrad"
    op: "FusedBatchNormGrad"
    input: "tower0/gradients/tower0/linear3/bn/Squeeze_grad/Reshape"
    input: "tower0/linear3/bn/Reshape"
    input: "linear3/bn/gamma/read"
    input: "tower0/linear3/bn/FusedBatchNorm:3"
    input: "tower0/linear3/bn/FusedBatchNorm:4"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear3/bn/FusedBatchNorm"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
          shape {
            dim {
            }
          }
          shape {
            dim {
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
    attr {
      key: "epsilon"
      value {
        f: 1.00099996416e-05
      }
    }
    attr {
      key: "is_training"
      value {
        b: true
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear3/bn/Reshape_grad/Shape"
    op: "Shape"
    input: "tower0/linear3/BiasAdd"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear3/bn/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear3/bn/Reshape_grad/Reshape"
    op: "Reshape"
    input: "tower0/gradients/tower0/linear3/bn/FusedBatchNorm_grad/FusedBatchNormGrad"
    input: "tower0/gradients/tower0/linear3/bn/Reshape_grad/Shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear3/bn/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear3/BiasAdd_grad/BiasAddGrad"
    op: "BiasAddGrad"
    input: "tower0/gradients/tower0/linear3/bn/Reshape_grad/Reshape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear3/BiasAdd"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear3/MatMul_grad/MatMul"
    op: "MatMul"
    input: "tower0/gradients/tower0/linear3/bn/Reshape_grad/Reshape"
    input: "linear3/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear3/MatMul"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: false
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: true
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear3/MatMul_grad/MatMul_1"
    op: "MatMul"
    input: "tower0/linear3/Reshape"
    input: "tower0/gradients/tower0/linear3/bn/Reshape_grad/Reshape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear3/MatMul"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: true
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear3/Reshape_grad/Shape"
    op: "Shape"
    input: "tower0/linear2/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear3/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear3/Reshape_grad/Reshape"
    op: "Reshape"
    input: "tower0/gradients/tower0/linear3/MatMul_grad/MatMul"
    input: "tower0/gradients/tower0/linear3/Reshape_grad/Shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear3/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear2/output_grad/ReluGrad"
    op: "ReluGrad"
    input: "tower0/gradients/tower0/linear3/Reshape_grad/Reshape"
    input: "tower0/linear2/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear2/output"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear2/bn/Squeeze_grad/Shape"
    op: "Shape"
    input: "tower0/linear2/bn/FusedBatchNorm"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear2/bn/Squeeze"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 4
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear2/bn/Squeeze_grad/Reshape"
    op: "Reshape"
    input: "tower0/gradients/tower0/linear2/output_grad/ReluGrad"
    input: "tower0/gradients/tower0/linear2/bn/Squeeze_grad/Shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear2/bn/Squeeze"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/zeros_like_5"
    op: "ZerosLike"
    input: "tower0/linear2/bn/FusedBatchNorm:1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear2/bn/FusedBatchNorm"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/zeros_like_6"
    op: "ZerosLike"
    input: "tower0/linear2/bn/FusedBatchNorm:2"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear2/bn/FusedBatchNorm"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/zeros_like_7"
    op: "ZerosLike"
    input: "tower0/linear2/bn/FusedBatchNorm:3"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear2/bn/FusedBatchNorm"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/zeros_like_8"
    op: "ZerosLike"
    input: "tower0/linear2/bn/FusedBatchNorm:4"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear2/bn/FusedBatchNorm"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear2/bn/FusedBatchNorm_grad/FusedBatchNormGrad"
    op: "FusedBatchNormGrad"
    input: "tower0/gradients/tower0/linear2/bn/Squeeze_grad/Reshape"
    input: "tower0/linear2/bn/Reshape"
    input: "linear2/bn/gamma/read"
    input: "tower0/linear2/bn/FusedBatchNorm:3"
    input: "tower0/linear2/bn/FusedBatchNorm:4"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear2/bn/FusedBatchNorm"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
          shape {
            dim {
            }
          }
          shape {
            dim {
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
    attr {
      key: "epsilon"
      value {
        f: 1.00099996416e-05
      }
    }
    attr {
      key: "is_training"
      value {
        b: true
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear2/bn/Reshape_grad/Shape"
    op: "Shape"
    input: "tower0/linear2/BiasAdd"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear2/bn/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear2/bn/Reshape_grad/Reshape"
    op: "Reshape"
    input: "tower0/gradients/tower0/linear2/bn/FusedBatchNorm_grad/FusedBatchNormGrad"
    input: "tower0/gradients/tower0/linear2/bn/Reshape_grad/Shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear2/bn/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear2/BiasAdd_grad/BiasAddGrad"
    op: "BiasAddGrad"
    input: "tower0/gradients/tower0/linear2/bn/Reshape_grad/Reshape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear2/BiasAdd"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear2/MatMul_grad/MatMul"
    op: "MatMul"
    input: "tower0/gradients/tower0/linear2/bn/Reshape_grad/Reshape"
    input: "linear2/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear2/MatMul"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: false
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: true
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear2/MatMul_grad/MatMul_1"
    op: "MatMul"
    input: "tower0/linear2/Reshape"
    input: "tower0/gradients/tower0/linear2/bn/Reshape_grad/Reshape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear2/MatMul"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: true
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear2/Reshape_grad/Shape"
    op: "Shape"
    input: "tower0/linear1/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear2/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear2/Reshape_grad/Reshape"
    op: "Reshape"
    input: "tower0/gradients/tower0/linear2/MatMul_grad/MatMul"
    input: "tower0/gradients/tower0/linear2/Reshape_grad/Shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear2/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear1/output_grad/ReluGrad"
    op: "ReluGrad"
    input: "tower0/gradients/tower0/linear2/Reshape_grad/Reshape"
    input: "tower0/linear1/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear1/output"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear1/bn/Squeeze_grad/Shape"
    op: "Shape"
    input: "tower0/linear1/bn/FusedBatchNorm"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear1/bn/Squeeze"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 4
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear1/bn/Squeeze_grad/Reshape"
    op: "Reshape"
    input: "tower0/gradients/tower0/linear1/output_grad/ReluGrad"
    input: "tower0/gradients/tower0/linear1/bn/Squeeze_grad/Shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear1/bn/Squeeze"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/zeros_like_9"
    op: "ZerosLike"
    input: "tower0/linear1/bn/FusedBatchNorm:1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear1/bn/FusedBatchNorm"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/zeros_like_10"
    op: "ZerosLike"
    input: "tower0/linear1/bn/FusedBatchNorm:2"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear1/bn/FusedBatchNorm"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/zeros_like_11"
    op: "ZerosLike"
    input: "tower0/linear1/bn/FusedBatchNorm:3"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear1/bn/FusedBatchNorm"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/zeros_like_12"
    op: "ZerosLike"
    input: "tower0/linear1/bn/FusedBatchNorm:4"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear1/bn/FusedBatchNorm"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear1/bn/FusedBatchNorm_grad/FusedBatchNormGrad"
    op: "FusedBatchNormGrad"
    input: "tower0/gradients/tower0/linear1/bn/Squeeze_grad/Reshape"
    input: "tower0/linear1/bn/Reshape"
    input: "linear1/bn/gamma/read"
    input: "tower0/linear1/bn/FusedBatchNorm:3"
    input: "tower0/linear1/bn/FusedBatchNorm:4"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear1/bn/FusedBatchNorm"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
          shape {
            dim {
            }
          }
          shape {
            dim {
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
    attr {
      key: "epsilon"
      value {
        f: 1.00099996416e-05
      }
    }
    attr {
      key: "is_training"
      value {
        b: true
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear1/bn/Reshape_grad/Shape"
    op: "Shape"
    input: "tower0/linear1/BiasAdd"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear1/bn/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear1/bn/Reshape_grad/Reshape"
    op: "Reshape"
    input: "tower0/gradients/tower0/linear1/bn/FusedBatchNorm_grad/FusedBatchNormGrad"
    input: "tower0/gradients/tower0/linear1/bn/Reshape_grad/Shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear1/bn/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear1/BiasAdd_grad/BiasAddGrad"
    op: "BiasAddGrad"
    input: "tower0/gradients/tower0/linear1/bn/Reshape_grad/Reshape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear1/BiasAdd"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear1/MatMul_grad/MatMul"
    op: "MatMul"
    input: "tower0/gradients/tower0/linear1/bn/Reshape_grad/Reshape"
    input: "linear1/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear1/MatMul"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: false
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: true
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear1/MatMul_grad/MatMul_1"
    op: "MatMul"
    input: "tower0/linear1/Reshape"
    input: "tower0/gradients/tower0/linear1/bn/Reshape_grad/Reshape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear1/MatMul"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: true
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: false
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear1/Reshape_grad/Shape"
    op: "Shape"
    input: "tower0/linear0/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear1/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear1/Reshape_grad/Reshape"
    op: "Reshape"
    input: "tower0/gradients/tower0/linear1/MatMul_grad/MatMul"
    input: "tower0/gradients/tower0/linear1/Reshape_grad/Shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear1/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear0/output_grad/ReluGrad"
    op: "ReluGrad"
    input: "tower0/gradients/tower0/linear1/Reshape_grad/Reshape"
    input: "tower0/linear0/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear0/output"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear0/bn/Squeeze_grad/Shape"
    op: "Shape"
    input: "tower0/linear0/bn/FusedBatchNorm"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear0/bn/Squeeze"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 4
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear0/bn/Squeeze_grad/Reshape"
    op: "Reshape"
    input: "tower0/gradients/tower0/linear0/output_grad/ReluGrad"
    input: "tower0/gradients/tower0/linear0/bn/Squeeze_grad/Shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear0/bn/Squeeze"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/zeros_like_13"
    op: "ZerosLike"
    input: "tower0/linear0/bn/FusedBatchNorm:1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear0/bn/FusedBatchNorm"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/zeros_like_14"
    op: "ZerosLike"
    input: "tower0/linear0/bn/FusedBatchNorm:2"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear0/bn/FusedBatchNorm"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/zeros_like_15"
    op: "ZerosLike"
    input: "tower0/linear0/bn/FusedBatchNorm:3"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear0/bn/FusedBatchNorm"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/zeros_like_16"
    op: "ZerosLike"
    input: "tower0/linear0/bn/FusedBatchNorm:4"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear0/bn/FusedBatchNorm"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear0/bn/FusedBatchNorm_grad/FusedBatchNormGrad"
    op: "FusedBatchNormGrad"
    input: "tower0/gradients/tower0/linear0/bn/Squeeze_grad/Reshape"
    input: "tower0/linear0/bn/Reshape"
    input: "linear0/bn/gamma/read"
    input: "tower0/linear0/bn/FusedBatchNorm:3"
    input: "tower0/linear0/bn/FusedBatchNorm:4"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear0/bn/FusedBatchNorm"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
          shape {
            dim {
              size: 504
            }
          }
          shape {
            dim {
            }
          }
          shape {
            dim {
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
    attr {
      key: "epsilon"
      value {
        f: 1.00099996416e-05
      }
    }
    attr {
      key: "is_training"
      value {
        b: true
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear0/bn/Reshape_grad/Shape"
    op: "Shape"
    input: "tower0/linear0/BiasAdd"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear0/bn/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear0/bn/Reshape_grad/Reshape"
    op: "Reshape"
    input: "tower0/gradients/tower0/linear0/bn/FusedBatchNorm_grad/FusedBatchNormGrad"
    input: "tower0/gradients/tower0/linear0/bn/Reshape_grad/Shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear0/bn/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear0/BiasAdd_grad/BiasAddGrad"
    op: "BiasAddGrad"
    input: "tower0/gradients/tower0/linear0/bn/Reshape_grad/Reshape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear0/BiasAdd"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear0/MatMul_grad/MatMul"
    op: "MatMul"
    input: "tower0/gradients/tower0/linear0/bn/Reshape_grad/Reshape"
    input: "linear0/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear0/MatMul"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1000
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: false
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: true
      }
    }
  }
  node {
    name: "tower0/gradients/tower0/linear0/MatMul_grad/MatMul_1"
    op: "MatMul"
    input: "tower0/linear0/Reshape"
    input: "tower0/gradients/tower0/linear0/bn/Reshape_grad/Reshape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/linear0/MatMul"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: true
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: false
      }
    }
  }
  node {
    name: "beta1_power/initial_value"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.899999976158
        }
      }
    }
  }
  node {
    name: "beta1_power"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "beta1_power/Assign"
    op: "Assign"
    input: "beta1_power"
    input: "beta1_power/initial_value"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "beta1_power/read"
    op: "Identity"
    input: "beta1_power"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "beta2_power/initial_value"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.999000012875
        }
      }
    }
  }
  node {
    name: "beta2_power"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "beta2_power/Assign"
    op: "Assign"
    input: "beta2_power"
    input: "beta2_power/initial_value"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "beta2_power/read"
    op: "Identity"
    input: "beta2_power"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "linear0/W/Adam/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 1000
            }
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear0/W/Adam"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear0/W/Adam/Assign"
    op: "Assign"
    input: "linear0/W/Adam"
    input: "linear0/W/Adam/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear0/W/Adam/read"
    op: "Identity"
    input: "linear0/W/Adam"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear0/W/Adam_1/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 1000
            }
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear0/W/Adam_1"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear0/W/Adam_1/Assign"
    op: "Assign"
    input: "linear0/W/Adam_1"
    input: "linear0/W/Adam_1/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear0/W/Adam_1/read"
    op: "Identity"
    input: "linear0/W/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear0/b/Adam/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear0/b/Adam"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear0/b/Adam/Assign"
    op: "Assign"
    input: "linear0/b/Adam"
    input: "linear0/b/Adam/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear0/b/Adam/read"
    op: "Identity"
    input: "linear0/b/Adam"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear0/b/Adam_1/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear0/b/Adam_1"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear0/b/Adam_1/Assign"
    op: "Assign"
    input: "linear0/b/Adam_1"
    input: "linear0/b/Adam_1/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear0/b/Adam_1/read"
    op: "Identity"
    input: "linear0/b/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear0/bn/beta/Adam/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear0/bn/beta/Adam"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear0/bn/beta/Adam/Assign"
    op: "Assign"
    input: "linear0/bn/beta/Adam"
    input: "linear0/bn/beta/Adam/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear0/bn/beta/Adam/read"
    op: "Identity"
    input: "linear0/bn/beta/Adam"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear0/bn/beta/Adam_1/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear0/bn/beta/Adam_1"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear0/bn/beta/Adam_1/Assign"
    op: "Assign"
    input: "linear0/bn/beta/Adam_1"
    input: "linear0/bn/beta/Adam_1/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear0/bn/beta/Adam_1/read"
    op: "Identity"
    input: "linear0/bn/beta/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear0/bn/gamma/Adam/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear0/bn/gamma/Adam"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear0/bn/gamma/Adam/Assign"
    op: "Assign"
    input: "linear0/bn/gamma/Adam"
    input: "linear0/bn/gamma/Adam/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear0/bn/gamma/Adam/read"
    op: "Identity"
    input: "linear0/bn/gamma/Adam"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear0/bn/gamma/Adam_1/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear0/bn/gamma/Adam_1"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear0/bn/gamma/Adam_1/Assign"
    op: "Assign"
    input: "linear0/bn/gamma/Adam_1"
    input: "linear0/bn/gamma/Adam_1/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear0/bn/gamma/Adam_1/read"
    op: "Identity"
    input: "linear0/bn/gamma/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear1/W/Adam/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear1/W/Adam"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear1/W/Adam/Assign"
    op: "Assign"
    input: "linear1/W/Adam"
    input: "linear1/W/Adam/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear1/W/Adam/read"
    op: "Identity"
    input: "linear1/W/Adam"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear1/W/Adam_1/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear1/W/Adam_1"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear1/W/Adam_1/Assign"
    op: "Assign"
    input: "linear1/W/Adam_1"
    input: "linear1/W/Adam_1/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear1/W/Adam_1/read"
    op: "Identity"
    input: "linear1/W/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear1/b/Adam/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear1/b/Adam"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear1/b/Adam/Assign"
    op: "Assign"
    input: "linear1/b/Adam"
    input: "linear1/b/Adam/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear1/b/Adam/read"
    op: "Identity"
    input: "linear1/b/Adam"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear1/b/Adam_1/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear1/b/Adam_1"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear1/b/Adam_1/Assign"
    op: "Assign"
    input: "linear1/b/Adam_1"
    input: "linear1/b/Adam_1/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear1/b/Adam_1/read"
    op: "Identity"
    input: "linear1/b/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear1/bn/beta/Adam/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear1/bn/beta/Adam"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear1/bn/beta/Adam/Assign"
    op: "Assign"
    input: "linear1/bn/beta/Adam"
    input: "linear1/bn/beta/Adam/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear1/bn/beta/Adam/read"
    op: "Identity"
    input: "linear1/bn/beta/Adam"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear1/bn/beta/Adam_1/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear1/bn/beta/Adam_1"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear1/bn/beta/Adam_1/Assign"
    op: "Assign"
    input: "linear1/bn/beta/Adam_1"
    input: "linear1/bn/beta/Adam_1/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear1/bn/beta/Adam_1/read"
    op: "Identity"
    input: "linear1/bn/beta/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear1/bn/gamma/Adam/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear1/bn/gamma/Adam"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear1/bn/gamma/Adam/Assign"
    op: "Assign"
    input: "linear1/bn/gamma/Adam"
    input: "linear1/bn/gamma/Adam/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear1/bn/gamma/Adam/read"
    op: "Identity"
    input: "linear1/bn/gamma/Adam"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear1/bn/gamma/Adam_1/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear1/bn/gamma/Adam_1"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear1/bn/gamma/Adam_1/Assign"
    op: "Assign"
    input: "linear1/bn/gamma/Adam_1"
    input: "linear1/bn/gamma/Adam_1/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear1/bn/gamma/Adam_1/read"
    op: "Identity"
    input: "linear1/bn/gamma/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear2/W/Adam/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear2/W/Adam"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear2/W/Adam/Assign"
    op: "Assign"
    input: "linear2/W/Adam"
    input: "linear2/W/Adam/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear2/W/Adam/read"
    op: "Identity"
    input: "linear2/W/Adam"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear2/W/Adam_1/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear2/W/Adam_1"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear2/W/Adam_1/Assign"
    op: "Assign"
    input: "linear2/W/Adam_1"
    input: "linear2/W/Adam_1/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear2/W/Adam_1/read"
    op: "Identity"
    input: "linear2/W/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear2/b/Adam/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear2/b/Adam"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear2/b/Adam/Assign"
    op: "Assign"
    input: "linear2/b/Adam"
    input: "linear2/b/Adam/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear2/b/Adam/read"
    op: "Identity"
    input: "linear2/b/Adam"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear2/b/Adam_1/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear2/b/Adam_1"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear2/b/Adam_1/Assign"
    op: "Assign"
    input: "linear2/b/Adam_1"
    input: "linear2/b/Adam_1/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear2/b/Adam_1/read"
    op: "Identity"
    input: "linear2/b/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear2/bn/beta/Adam/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear2/bn/beta/Adam"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear2/bn/beta/Adam/Assign"
    op: "Assign"
    input: "linear2/bn/beta/Adam"
    input: "linear2/bn/beta/Adam/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear2/bn/beta/Adam/read"
    op: "Identity"
    input: "linear2/bn/beta/Adam"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear2/bn/beta/Adam_1/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear2/bn/beta/Adam_1"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear2/bn/beta/Adam_1/Assign"
    op: "Assign"
    input: "linear2/bn/beta/Adam_1"
    input: "linear2/bn/beta/Adam_1/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear2/bn/beta/Adam_1/read"
    op: "Identity"
    input: "linear2/bn/beta/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear2/bn/gamma/Adam/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear2/bn/gamma/Adam"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear2/bn/gamma/Adam/Assign"
    op: "Assign"
    input: "linear2/bn/gamma/Adam"
    input: "linear2/bn/gamma/Adam/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear2/bn/gamma/Adam/read"
    op: "Identity"
    input: "linear2/bn/gamma/Adam"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear2/bn/gamma/Adam_1/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear2/bn/gamma/Adam_1"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear2/bn/gamma/Adam_1/Assign"
    op: "Assign"
    input: "linear2/bn/gamma/Adam_1"
    input: "linear2/bn/gamma/Adam_1/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear2/bn/gamma/Adam_1/read"
    op: "Identity"
    input: "linear2/bn/gamma/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear3/W/Adam/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear3/W/Adam"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear3/W/Adam/Assign"
    op: "Assign"
    input: "linear3/W/Adam"
    input: "linear3/W/Adam/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear3/W/Adam/read"
    op: "Identity"
    input: "linear3/W/Adam"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear3/W/Adam_1/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear3/W/Adam_1"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear3/W/Adam_1/Assign"
    op: "Assign"
    input: "linear3/W/Adam_1"
    input: "linear3/W/Adam_1/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear3/W/Adam_1/read"
    op: "Identity"
    input: "linear3/W/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear3/b/Adam/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear3/b/Adam"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear3/b/Adam/Assign"
    op: "Assign"
    input: "linear3/b/Adam"
    input: "linear3/b/Adam/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear3/b/Adam/read"
    op: "Identity"
    input: "linear3/b/Adam"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear3/b/Adam_1/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear3/b/Adam_1"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear3/b/Adam_1/Assign"
    op: "Assign"
    input: "linear3/b/Adam_1"
    input: "linear3/b/Adam_1/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear3/b/Adam_1/read"
    op: "Identity"
    input: "linear3/b/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear3/bn/beta/Adam/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear3/bn/beta/Adam"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear3/bn/beta/Adam/Assign"
    op: "Assign"
    input: "linear3/bn/beta/Adam"
    input: "linear3/bn/beta/Adam/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear3/bn/beta/Adam/read"
    op: "Identity"
    input: "linear3/bn/beta/Adam"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear3/bn/beta/Adam_1/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear3/bn/beta/Adam_1"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear3/bn/beta/Adam_1/Assign"
    op: "Assign"
    input: "linear3/bn/beta/Adam_1"
    input: "linear3/bn/beta/Adam_1/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear3/bn/beta/Adam_1/read"
    op: "Identity"
    input: "linear3/bn/beta/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear3/bn/gamma/Adam/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear3/bn/gamma/Adam"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear3/bn/gamma/Adam/Assign"
    op: "Assign"
    input: "linear3/bn/gamma/Adam"
    input: "linear3/bn/gamma/Adam/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear3/bn/gamma/Adam/read"
    op: "Identity"
    input: "linear3/bn/gamma/Adam"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "linear3/bn/gamma/Adam_1/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "linear3/bn/gamma/Adam_1"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "linear3/bn/gamma/Adam_1/Assign"
    op: "Assign"
    input: "linear3/bn/gamma/Adam_1"
    input: "linear3/bn/gamma/Adam_1/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "linear3/bn/gamma/Adam_1/read"
    op: "Identity"
    input: "linear3/bn/gamma/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "last_linear/W/Adam/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
            dim {
              size: 255
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "last_linear/W/Adam"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
          dim {
            size: 255
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "last_linear/W/Adam/Assign"
    op: "Assign"
    input: "last_linear/W/Adam"
    input: "last_linear/W/Adam/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "last_linear/W/Adam/read"
    op: "Identity"
    input: "last_linear/W/Adam"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
  }
  node {
    name: "last_linear/W/Adam_1/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 504
            }
            dim {
              size: 255
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "last_linear/W/Adam_1"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 504
          }
          dim {
            size: 255
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "last_linear/W/Adam_1/Assign"
    op: "Assign"
    input: "last_linear/W/Adam_1"
    input: "last_linear/W/Adam_1/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "last_linear/W/Adam_1/read"
    op: "Identity"
    input: "last_linear/W/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
  }
  node {
    name: "last_linear/b/Adam/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 255
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "last_linear/b/Adam"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 255
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "last_linear/b/Adam/Assign"
    op: "Assign"
    input: "last_linear/b/Adam"
    input: "last_linear/b/Adam/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "last_linear/b/Adam/read"
    op: "Identity"
    input: "last_linear/b/Adam"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 255
            }
          }
        }
      }
    }
  }
  node {
    name: "last_linear/b/Adam_1/Initializer/zeros"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 255
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "last_linear/b/Adam_1"
    op: "VariableV2"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 255
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "last_linear/b/Adam_1/Assign"
    op: "Assign"
    input: "last_linear/b/Adam_1"
    input: "last_linear/b/Adam_1/Initializer/zeros"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "last_linear/b/Adam_1/read"
    op: "Identity"
    input: "last_linear/b/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 255
            }
          }
        }
      }
    }
  }
  node {
    name: "train_op/learning_rate"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0010000000475
        }
      }
    }
  }
  node {
    name: "train_op/beta1"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.899999976158
        }
      }
    }
  }
  node {
    name: "train_op/beta2"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.999000012875
        }
      }
    }
  }
  node {
    name: "train_op/epsilon"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 9.99999993923e-09
        }
      }
    }
  }
  node {
    name: "train_op/update_linear0/W/ApplyAdam"
    op: "ApplyAdam"
    input: "linear0/W"
    input: "linear0/W/Adam"
    input: "linear0/W/Adam_1"
    input: "beta1_power/read"
    input: "beta2_power/read"
    input: "train_op/learning_rate"
    input: "train_op/beta1"
    input: "train_op/beta2"
    input: "train_op/epsilon"
    input: "tower0/gradients/tower0/linear0/MatMul_grad/MatMul_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
    attr {
      key: "use_nesterov"
      value {
        b: false
      }
    }
  }
  node {
    name: "train_op/update_linear0/b/ApplyAdam"
    op: "ApplyAdam"
    input: "linear0/b"
    input: "linear0/b/Adam"
    input: "linear0/b/Adam_1"
    input: "beta1_power/read"
    input: "beta2_power/read"
    input: "train_op/learning_rate"
    input: "train_op/beta1"
    input: "train_op/beta2"
    input: "train_op/epsilon"
    input: "tower0/gradients/tower0/linear0/BiasAdd_grad/BiasAddGrad"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
    attr {
      key: "use_nesterov"
      value {
        b: false
      }
    }
  }
  node {
    name: "train_op/update_linear0/bn/beta/ApplyAdam"
    op: "ApplyAdam"
    input: "linear0/bn/beta"
    input: "linear0/bn/beta/Adam"
    input: "linear0/bn/beta/Adam_1"
    input: "beta1_power/read"
    input: "beta2_power/read"
    input: "train_op/learning_rate"
    input: "train_op/beta1"
    input: "train_op/beta2"
    input: "train_op/epsilon"
    input: "tower0/gradients/tower0/linear0/bn/FusedBatchNorm_grad/FusedBatchNormGrad:2"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
    attr {
      key: "use_nesterov"
      value {
        b: false
      }
    }
  }
  node {
    name: "train_op/update_linear0/bn/gamma/ApplyAdam"
    op: "ApplyAdam"
    input: "linear0/bn/gamma"
    input: "linear0/bn/gamma/Adam"
    input: "linear0/bn/gamma/Adam_1"
    input: "beta1_power/read"
    input: "beta2_power/read"
    input: "train_op/learning_rate"
    input: "train_op/beta1"
    input: "train_op/beta2"
    input: "train_op/epsilon"
    input: "tower0/gradients/tower0/linear0/bn/FusedBatchNorm_grad/FusedBatchNormGrad:1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
    attr {
      key: "use_nesterov"
      value {
        b: false
      }
    }
  }
  node {
    name: "train_op/update_linear1/W/ApplyAdam"
    op: "ApplyAdam"
    input: "linear1/W"
    input: "linear1/W/Adam"
    input: "linear1/W/Adam_1"
    input: "beta1_power/read"
    input: "beta2_power/read"
    input: "train_op/learning_rate"
    input: "train_op/beta1"
    input: "train_op/beta2"
    input: "train_op/epsilon"
    input: "tower0/gradients/tower0/linear1/MatMul_grad/MatMul_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
    attr {
      key: "use_nesterov"
      value {
        b: false
      }
    }
  }
  node {
    name: "train_op/update_linear1/b/ApplyAdam"
    op: "ApplyAdam"
    input: "linear1/b"
    input: "linear1/b/Adam"
    input: "linear1/b/Adam_1"
    input: "beta1_power/read"
    input: "beta2_power/read"
    input: "train_op/learning_rate"
    input: "train_op/beta1"
    input: "train_op/beta2"
    input: "train_op/epsilon"
    input: "tower0/gradients/tower0/linear1/BiasAdd_grad/BiasAddGrad"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
    attr {
      key: "use_nesterov"
      value {
        b: false
      }
    }
  }
  node {
    name: "train_op/update_linear1/bn/beta/ApplyAdam"
    op: "ApplyAdam"
    input: "linear1/bn/beta"
    input: "linear1/bn/beta/Adam"
    input: "linear1/bn/beta/Adam_1"
    input: "beta1_power/read"
    input: "beta2_power/read"
    input: "train_op/learning_rate"
    input: "train_op/beta1"
    input: "train_op/beta2"
    input: "train_op/epsilon"
    input: "tower0/gradients/tower0/linear1/bn/FusedBatchNorm_grad/FusedBatchNormGrad:2"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
    attr {
      key: "use_nesterov"
      value {
        b: false
      }
    }
  }
  node {
    name: "train_op/update_linear1/bn/gamma/ApplyAdam"
    op: "ApplyAdam"
    input: "linear1/bn/gamma"
    input: "linear1/bn/gamma/Adam"
    input: "linear1/bn/gamma/Adam_1"
    input: "beta1_power/read"
    input: "beta2_power/read"
    input: "train_op/learning_rate"
    input: "train_op/beta1"
    input: "train_op/beta2"
    input: "train_op/epsilon"
    input: "tower0/gradients/tower0/linear1/bn/FusedBatchNorm_grad/FusedBatchNormGrad:1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
    attr {
      key: "use_nesterov"
      value {
        b: false
      }
    }
  }
  node {
    name: "train_op/update_linear2/W/ApplyAdam"
    op: "ApplyAdam"
    input: "linear2/W"
    input: "linear2/W/Adam"
    input: "linear2/W/Adam_1"
    input: "beta1_power/read"
    input: "beta2_power/read"
    input: "train_op/learning_rate"
    input: "train_op/beta1"
    input: "train_op/beta2"
    input: "train_op/epsilon"
    input: "tower0/gradients/tower0/linear2/MatMul_grad/MatMul_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
    attr {
      key: "use_nesterov"
      value {
        b: false
      }
    }
  }
  node {
    name: "train_op/update_linear2/b/ApplyAdam"
    op: "ApplyAdam"
    input: "linear2/b"
    input: "linear2/b/Adam"
    input: "linear2/b/Adam_1"
    input: "beta1_power/read"
    input: "beta2_power/read"
    input: "train_op/learning_rate"
    input: "train_op/beta1"
    input: "train_op/beta2"
    input: "train_op/epsilon"
    input: "tower0/gradients/tower0/linear2/BiasAdd_grad/BiasAddGrad"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
    attr {
      key: "use_nesterov"
      value {
        b: false
      }
    }
  }
  node {
    name: "train_op/update_linear2/bn/beta/ApplyAdam"
    op: "ApplyAdam"
    input: "linear2/bn/beta"
    input: "linear2/bn/beta/Adam"
    input: "linear2/bn/beta/Adam_1"
    input: "beta1_power/read"
    input: "beta2_power/read"
    input: "train_op/learning_rate"
    input: "train_op/beta1"
    input: "train_op/beta2"
    input: "train_op/epsilon"
    input: "tower0/gradients/tower0/linear2/bn/FusedBatchNorm_grad/FusedBatchNormGrad:2"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
    attr {
      key: "use_nesterov"
      value {
        b: false
      }
    }
  }
  node {
    name: "train_op/update_linear2/bn/gamma/ApplyAdam"
    op: "ApplyAdam"
    input: "linear2/bn/gamma"
    input: "linear2/bn/gamma/Adam"
    input: "linear2/bn/gamma/Adam_1"
    input: "beta1_power/read"
    input: "beta2_power/read"
    input: "train_op/learning_rate"
    input: "train_op/beta1"
    input: "train_op/beta2"
    input: "train_op/epsilon"
    input: "tower0/gradients/tower0/linear2/bn/FusedBatchNorm_grad/FusedBatchNormGrad:1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
    attr {
      key: "use_nesterov"
      value {
        b: false
      }
    }
  }
  node {
    name: "train_op/update_linear3/W/ApplyAdam"
    op: "ApplyAdam"
    input: "linear3/W"
    input: "linear3/W/Adam"
    input: "linear3/W/Adam_1"
    input: "beta1_power/read"
    input: "beta2_power/read"
    input: "train_op/learning_rate"
    input: "train_op/beta1"
    input: "train_op/beta2"
    input: "train_op/epsilon"
    input: "tower0/gradients/tower0/linear3/MatMul_grad/MatMul_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
    attr {
      key: "use_nesterov"
      value {
        b: false
      }
    }
  }
  node {
    name: "train_op/update_linear3/b/ApplyAdam"
    op: "ApplyAdam"
    input: "linear3/b"
    input: "linear3/b/Adam"
    input: "linear3/b/Adam_1"
    input: "beta1_power/read"
    input: "beta2_power/read"
    input: "train_op/learning_rate"
    input: "train_op/beta1"
    input: "train_op/beta2"
    input: "train_op/epsilon"
    input: "tower0/gradients/tower0/linear3/BiasAdd_grad/BiasAddGrad"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
    attr {
      key: "use_nesterov"
      value {
        b: false
      }
    }
  }
  node {
    name: "train_op/update_linear3/bn/beta/ApplyAdam"
    op: "ApplyAdam"
    input: "linear3/bn/beta"
    input: "linear3/bn/beta/Adam"
    input: "linear3/bn/beta/Adam_1"
    input: "beta1_power/read"
    input: "beta2_power/read"
    input: "train_op/learning_rate"
    input: "train_op/beta1"
    input: "train_op/beta2"
    input: "train_op/epsilon"
    input: "tower0/gradients/tower0/linear3/bn/FusedBatchNorm_grad/FusedBatchNormGrad:2"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
    attr {
      key: "use_nesterov"
      value {
        b: false
      }
    }
  }
  node {
    name: "train_op/update_linear3/bn/gamma/ApplyAdam"
    op: "ApplyAdam"
    input: "linear3/bn/gamma"
    input: "linear3/bn/gamma/Adam"
    input: "linear3/bn/gamma/Adam_1"
    input: "beta1_power/read"
    input: "beta2_power/read"
    input: "train_op/learning_rate"
    input: "train_op/beta1"
    input: "train_op/beta2"
    input: "train_op/epsilon"
    input: "tower0/gradients/tower0/linear3/bn/FusedBatchNorm_grad/FusedBatchNormGrad:1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
    attr {
      key: "use_nesterov"
      value {
        b: false
      }
    }
  }
  node {
    name: "train_op/update_last_linear/W/ApplyAdam"
    op: "ApplyAdam"
    input: "last_linear/W"
    input: "last_linear/W/Adam"
    input: "last_linear/W/Adam_1"
    input: "beta1_power/read"
    input: "beta2_power/read"
    input: "train_op/learning_rate"
    input: "train_op/beta1"
    input: "train_op/beta2"
    input: "train_op/epsilon"
    input: "tower0/gradients/tower0/last_linear/MatMul_grad/MatMul_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
    attr {
      key: "use_nesterov"
      value {
        b: false
      }
    }
  }
  node {
    name: "train_op/update_last_linear/b/ApplyAdam"
    op: "ApplyAdam"
    input: "last_linear/b"
    input: "last_linear/b/Adam"
    input: "last_linear/b/Adam_1"
    input: "beta1_power/read"
    input: "beta2_power/read"
    input: "train_op/learning_rate"
    input: "train_op/beta1"
    input: "train_op/beta2"
    input: "train_op/epsilon"
    input: "tower0/gradients/tower0/last_linear/BiasAdd_grad/BiasAddGrad"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
    attr {
      key: "use_nesterov"
      value {
        b: false
      }
    }
  }
  node {
    name: "train_op/mul"
    op: "Mul"
    input: "beta1_power/read"
    input: "train_op/beta1"
    input: "^train_op/update_linear0/W/ApplyAdam"
    input: "^train_op/update_linear0/b/ApplyAdam"
    input: "^train_op/update_linear0/bn/beta/ApplyAdam"
    input: "^train_op/update_linear0/bn/gamma/ApplyAdam"
    input: "^train_op/update_linear1/W/ApplyAdam"
    input: "^train_op/update_linear1/b/ApplyAdam"
    input: "^train_op/update_linear1/bn/beta/ApplyAdam"
    input: "^train_op/update_linear1/bn/gamma/ApplyAdam"
    input: "^train_op/update_linear2/W/ApplyAdam"
    input: "^train_op/update_linear2/b/ApplyAdam"
    input: "^train_op/update_linear2/bn/beta/ApplyAdam"
    input: "^train_op/update_linear2/bn/gamma/ApplyAdam"
    input: "^train_op/update_linear3/W/ApplyAdam"
    input: "^train_op/update_linear3/b/ApplyAdam"
    input: "^train_op/update_linear3/bn/beta/ApplyAdam"
    input: "^train_op/update_linear3/bn/gamma/ApplyAdam"
    input: "^train_op/update_last_linear/W/ApplyAdam"
    input: "^train_op/update_last_linear/b/ApplyAdam"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "train_op/Assign"
    op: "Assign"
    input: "beta1_power"
    input: "train_op/mul"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "train_op/mul_1"
    op: "Mul"
    input: "beta2_power/read"
    input: "train_op/beta2"
    input: "^train_op/update_linear0/W/ApplyAdam"
    input: "^train_op/update_linear0/b/ApplyAdam"
    input: "^train_op/update_linear0/bn/beta/ApplyAdam"
    input: "^train_op/update_linear0/bn/gamma/ApplyAdam"
    input: "^train_op/update_linear1/W/ApplyAdam"
    input: "^train_op/update_linear1/b/ApplyAdam"
    input: "^train_op/update_linear1/bn/beta/ApplyAdam"
    input: "^train_op/update_linear1/bn/gamma/ApplyAdam"
    input: "^train_op/update_linear2/W/ApplyAdam"
    input: "^train_op/update_linear2/b/ApplyAdam"
    input: "^train_op/update_linear2/bn/beta/ApplyAdam"
    input: "^train_op/update_linear2/bn/gamma/ApplyAdam"
    input: "^train_op/update_linear3/W/ApplyAdam"
    input: "^train_op/update_linear3/b/ApplyAdam"
    input: "^train_op/update_linear3/bn/beta/ApplyAdam"
    input: "^train_op/update_linear3/bn/gamma/ApplyAdam"
    input: "^train_op/update_last_linear/W/ApplyAdam"
    input: "^train_op/update_last_linear/b/ApplyAdam"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "train_op/Assign_1"
    op: "Assign"
    input: "beta2_power"
    input: "train_op/mul_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "train_op"
    op: "NoOp"
    input: "^train_op/update_linear0/W/ApplyAdam"
    input: "^train_op/update_linear0/b/ApplyAdam"
    input: "^train_op/update_linear0/bn/beta/ApplyAdam"
    input: "^train_op/update_linear0/bn/gamma/ApplyAdam"
    input: "^train_op/update_linear1/W/ApplyAdam"
    input: "^train_op/update_linear1/b/ApplyAdam"
    input: "^train_op/update_linear1/bn/beta/ApplyAdam"
    input: "^train_op/update_linear1/bn/gamma/ApplyAdam"
    input: "^train_op/update_linear2/W/ApplyAdam"
    input: "^train_op/update_linear2/b/ApplyAdam"
    input: "^train_op/update_linear2/bn/beta/ApplyAdam"
    input: "^train_op/update_linear2/bn/gamma/ApplyAdam"
    input: "^train_op/update_linear3/W/ApplyAdam"
    input: "^train_op/update_linear3/b/ApplyAdam"
    input: "^train_op/update_linear3/bn/beta/ApplyAdam"
    input: "^train_op/update_linear3/bn/gamma/ApplyAdam"
    input: "^train_op/update_last_linear/W/ApplyAdam"
    input: "^train_op/update_last_linear/b/ApplyAdam"
    input: "^train_op/Assign"
    input: "^train_op/Assign_1"
    device: "/device:GPU:0"
  }
  node {
    name: "global_step/Initializer/zeros"
    op: "Const"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@global_step"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT64
          tensor_shape {
          }
          int64_val: 0
        }
      }
    }
  }
  node {
    name: "global_step"
    op: "VariableV2"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@global_step"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "shape"
      value {
        shape {
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "global_step/Assign"
    op: "Assign"
    input: "global_step"
    input: "global_step/Initializer/zeros"
    attr {
      key: "T"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@global_step"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "global_step/read"
    op: "Identity"
    input: "global_step"
    attr {
      key: "T"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@global_step"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "global_step_incr/value"
    op: "Const"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@global_step"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT64
          tensor_shape {
          }
          int64_val: 1
        }
      }
    }
  }
  node {
    name: "global_step_incr"
    op: "AssignAdd"
    input: "global_step"
    input: "global_step_incr/value"
    attr {
      key: "T"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@global_step"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "ModelSaver/save/Const"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "model"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/SaveV2/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 74
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 74
            }
          }
          string_val: "EMA/QueueInput/queue_size"
          string_val: "EMA/QueueInput/queue_size/biased"
          string_val: "EMA/QueueInput/queue_size/local_step"
          string_val: "EMA/cross_entropy_loss"
          string_val: "EMA/cross_entropy_loss/biased"
          string_val: "EMA/cross_entropy_loss/local_step"
          string_val: "EMA/train-error-top1"
          string_val: "EMA/train-error-top1/biased"
          string_val: "EMA/train-error-top1/local_step"
          string_val: "beta1_power"
          string_val: "beta2_power"
          string_val: "global_step"
          string_val: "last_linear/W"
          string_val: "last_linear/W/Adam"
          string_val: "last_linear/W/Adam_1"
          string_val: "last_linear/b"
          string_val: "last_linear/b/Adam"
          string_val: "last_linear/b/Adam_1"
          string_val: "linear0/W"
          string_val: "linear0/W/Adam"
          string_val: "linear0/W/Adam_1"
          string_val: "linear0/b"
          string_val: "linear0/b/Adam"
          string_val: "linear0/b/Adam_1"
          string_val: "linear0/bn/beta"
          string_val: "linear0/bn/beta/Adam"
          string_val: "linear0/bn/beta/Adam_1"
          string_val: "linear0/bn/gamma"
          string_val: "linear0/bn/gamma/Adam"
          string_val: "linear0/bn/gamma/Adam_1"
          string_val: "linear0/bn/mean/EMA"
          string_val: "linear0/bn/variance/EMA"
          string_val: "linear1/W"
          string_val: "linear1/W/Adam"
          string_val: "linear1/W/Adam_1"
          string_val: "linear1/b"
          string_val: "linear1/b/Adam"
          string_val: "linear1/b/Adam_1"
          string_val: "linear1/bn/beta"
          string_val: "linear1/bn/beta/Adam"
          string_val: "linear1/bn/beta/Adam_1"
          string_val: "linear1/bn/gamma"
          string_val: "linear1/bn/gamma/Adam"
          string_val: "linear1/bn/gamma/Adam_1"
          string_val: "linear1/bn/mean/EMA"
          string_val: "linear1/bn/variance/EMA"
          string_val: "linear2/W"
          string_val: "linear2/W/Adam"
          string_val: "linear2/W/Adam_1"
          string_val: "linear2/b"
          string_val: "linear2/b/Adam"
          string_val: "linear2/b/Adam_1"
          string_val: "linear2/bn/beta"
          string_val: "linear2/bn/beta/Adam"
          string_val: "linear2/bn/beta/Adam_1"
          string_val: "linear2/bn/gamma"
          string_val: "linear2/bn/gamma/Adam"
          string_val: "linear2/bn/gamma/Adam_1"
          string_val: "linear2/bn/mean/EMA"
          string_val: "linear2/bn/variance/EMA"
          string_val: "linear3/W"
          string_val: "linear3/W/Adam"
          string_val: "linear3/W/Adam_1"
          string_val: "linear3/b"
          string_val: "linear3/b/Adam"
          string_val: "linear3/b/Adam_1"
          string_val: "linear3/bn/beta"
          string_val: "linear3/bn/beta/Adam"
          string_val: "linear3/bn/beta/Adam_1"
          string_val: "linear3/bn/gamma"
          string_val: "linear3/bn/gamma/Adam"
          string_val: "linear3/bn/gamma/Adam_1"
          string_val: "linear3/bn/mean/EMA"
          string_val: "linear3/bn/variance/EMA"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/SaveV2/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 74
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 74
            }
          }
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/SaveV2"
    op: "SaveV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/SaveV2/tensor_names"
    input: "ModelSaver/save/SaveV2/shape_and_slices"
    input: "EMA/QueueInput/queue_size"
    input: "EMA/QueueInput/queue_size/biased"
    input: "EMA/QueueInput/queue_size/local_step"
    input: "EMA/cross_entropy_loss"
    input: "EMA/cross_entropy_loss/biased"
    input: "EMA/cross_entropy_loss/local_step"
    input: "EMA/train-error-top1"
    input: "EMA/train-error-top1/biased"
    input: "EMA/train-error-top1/local_step"
    input: "beta1_power"
    input: "beta2_power"
    input: "global_step"
    input: "last_linear/W"
    input: "last_linear/W/Adam"
    input: "last_linear/W/Adam_1"
    input: "last_linear/b"
    input: "last_linear/b/Adam"
    input: "last_linear/b/Adam_1"
    input: "linear0/W"
    input: "linear0/W/Adam"
    input: "linear0/W/Adam_1"
    input: "linear0/b"
    input: "linear0/b/Adam"
    input: "linear0/b/Adam_1"
    input: "linear0/bn/beta"
    input: "linear0/bn/beta/Adam"
    input: "linear0/bn/beta/Adam_1"
    input: "linear0/bn/gamma"
    input: "linear0/bn/gamma/Adam"
    input: "linear0/bn/gamma/Adam_1"
    input: "linear0/bn/mean/EMA"
    input: "linear0/bn/variance/EMA"
    input: "linear1/W"
    input: "linear1/W/Adam"
    input: "linear1/W/Adam_1"
    input: "linear1/b"
    input: "linear1/b/Adam"
    input: "linear1/b/Adam_1"
    input: "linear1/bn/beta"
    input: "linear1/bn/beta/Adam"
    input: "linear1/bn/beta/Adam_1"
    input: "linear1/bn/gamma"
    input: "linear1/bn/gamma/Adam"
    input: "linear1/bn/gamma/Adam_1"
    input: "linear1/bn/mean/EMA"
    input: "linear1/bn/variance/EMA"
    input: "linear2/W"
    input: "linear2/W/Adam"
    input: "linear2/W/Adam_1"
    input: "linear2/b"
    input: "linear2/b/Adam"
    input: "linear2/b/Adam_1"
    input: "linear2/bn/beta"
    input: "linear2/bn/beta/Adam"
    input: "linear2/bn/beta/Adam_1"
    input: "linear2/bn/gamma"
    input: "linear2/bn/gamma/Adam"
    input: "linear2/bn/gamma/Adam_1"
    input: "linear2/bn/mean/EMA"
    input: "linear2/bn/variance/EMA"
    input: "linear3/W"
    input: "linear3/W/Adam"
    input: "linear3/W/Adam_1"
    input: "linear3/b"
    input: "linear3/b/Adam"
    input: "linear3/b/Adam_1"
    input: "linear3/bn/beta"
    input: "linear3/bn/beta/Adam"
    input: "linear3/bn/beta/Adam_1"
    input: "linear3/bn/gamma"
    input: "linear3/bn/gamma/Adam"
    input: "linear3/bn/gamma/Adam_1"
    input: "linear3/bn/mean/EMA"
    input: "linear3/bn/variance/EMA"
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_INT64
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/control_dependency"
    op: "Identity"
    input: "ModelSaver/save/Const"
    input: "^ModelSaver/save/SaveV2"
    attr {
      key: "T"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@ModelSaver/save/Const"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "EMA/QueueInput/queue_size"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2/tensor_names"
    input: "ModelSaver/save/RestoreV2/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign"
    op: "Assign"
    input: "EMA/QueueInput/queue_size"
    input: "ModelSaver/save/RestoreV2"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_1/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "EMA/QueueInput/queue_size/biased"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_1/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_1"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_1/tensor_names"
    input: "ModelSaver/save/RestoreV2_1/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_1"
    op: "Assign"
    input: "EMA/QueueInput/queue_size/biased"
    input: "ModelSaver/save/RestoreV2_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_2/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "EMA/QueueInput/queue_size/local_step"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_2/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_2"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_2/tensor_names"
    input: "ModelSaver/save/RestoreV2_2/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_2"
    op: "Assign"
    input: "EMA/QueueInput/queue_size/local_step"
    input: "ModelSaver/save/RestoreV2_2"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_3/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "EMA/cross_entropy_loss"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_3/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_3"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_3/tensor_names"
    input: "ModelSaver/save/RestoreV2_3/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_3"
    op: "Assign"
    input: "EMA/cross_entropy_loss"
    input: "ModelSaver/save/RestoreV2_3"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_4/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "EMA/cross_entropy_loss/biased"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_4/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_4"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_4/tensor_names"
    input: "ModelSaver/save/RestoreV2_4/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_4"
    op: "Assign"
    input: "EMA/cross_entropy_loss/biased"
    input: "ModelSaver/save/RestoreV2_4"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_5/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "EMA/cross_entropy_loss/local_step"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_5/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_5"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_5/tensor_names"
    input: "ModelSaver/save/RestoreV2_5/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_5"
    op: "Assign"
    input: "EMA/cross_entropy_loss/local_step"
    input: "ModelSaver/save/RestoreV2_5"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_6/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "EMA/train-error-top1"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_6/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_6"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_6/tensor_names"
    input: "ModelSaver/save/RestoreV2_6/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_6"
    op: "Assign"
    input: "EMA/train-error-top1"
    input: "ModelSaver/save/RestoreV2_6"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_7/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "EMA/train-error-top1/biased"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_7/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_7"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_7/tensor_names"
    input: "ModelSaver/save/RestoreV2_7/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_7"
    op: "Assign"
    input: "EMA/train-error-top1/biased"
    input: "ModelSaver/save/RestoreV2_7"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_8/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "EMA/train-error-top1/local_step"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_8/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_8"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_8/tensor_names"
    input: "ModelSaver/save/RestoreV2_8/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_8"
    op: "Assign"
    input: "EMA/train-error-top1/local_step"
    input: "ModelSaver/save/RestoreV2_8"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_9/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "beta1_power"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_9/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_9"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_9/tensor_names"
    input: "ModelSaver/save/RestoreV2_9/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_9"
    op: "Assign"
    input: "beta1_power"
    input: "ModelSaver/save/RestoreV2_9"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_10/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "beta2_power"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_10/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_10"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_10/tensor_names"
    input: "ModelSaver/save/RestoreV2_10/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_10"
    op: "Assign"
    input: "beta2_power"
    input: "ModelSaver/save/RestoreV2_10"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_11/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "global_step"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_11/shape_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_11"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_11/tensor_names"
    input: "ModelSaver/save/RestoreV2_11/shape_and_slices"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_INT64
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_11"
    op: "Assign"
    input: "global_step"
    input: "ModelSaver/save/RestoreV2_11"
    attr {
      key: "T"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@global_step"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_12/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "last_linear/W"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_12/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_12"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_12/tensor_names"
    input: "ModelSaver/save/RestoreV2_12/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_12"
    op: "Assign"
    input: "last_linear/W"
    input: "ModelSaver/save/RestoreV2_12"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_13/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "last_linear/W/Adam"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_13/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_13"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_13/tensor_names"
    input: "ModelSaver/save/RestoreV2_13/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_13"
    op: "Assign"
    input: "last_linear/W/Adam"
    input: "ModelSaver/save/RestoreV2_13"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_14/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "last_linear/W/Adam_1"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_14/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_14"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_14/tensor_names"
    input: "ModelSaver/save/RestoreV2_14/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_14"
    op: "Assign"
    input: "last_linear/W/Adam_1"
    input: "ModelSaver/save/RestoreV2_14"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_15/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "last_linear/b"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_15/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_15"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_15/tensor_names"
    input: "ModelSaver/save/RestoreV2_15/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_15"
    op: "Assign"
    input: "last_linear/b"
    input: "ModelSaver/save/RestoreV2_15"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_16/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "last_linear/b/Adam"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_16/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_16"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_16/tensor_names"
    input: "ModelSaver/save/RestoreV2_16/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_16"
    op: "Assign"
    input: "last_linear/b/Adam"
    input: "ModelSaver/save/RestoreV2_16"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_17/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "last_linear/b/Adam_1"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_17/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_17"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_17/tensor_names"
    input: "ModelSaver/save/RestoreV2_17/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_17"
    op: "Assign"
    input: "last_linear/b/Adam_1"
    input: "ModelSaver/save/RestoreV2_17"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_18/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear0/W"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_18/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_18"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_18/tensor_names"
    input: "ModelSaver/save/RestoreV2_18/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_18"
    op: "Assign"
    input: "linear0/W"
    input: "ModelSaver/save/RestoreV2_18"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_19/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear0/W/Adam"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_19/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_19"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_19/tensor_names"
    input: "ModelSaver/save/RestoreV2_19/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_19"
    op: "Assign"
    input: "linear0/W/Adam"
    input: "ModelSaver/save/RestoreV2_19"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_20/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear0/W/Adam_1"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_20/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_20"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_20/tensor_names"
    input: "ModelSaver/save/RestoreV2_20/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_20"
    op: "Assign"
    input: "linear0/W/Adam_1"
    input: "ModelSaver/save/RestoreV2_20"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_21/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear0/b"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_21/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_21"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_21/tensor_names"
    input: "ModelSaver/save/RestoreV2_21/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_21"
    op: "Assign"
    input: "linear0/b"
    input: "ModelSaver/save/RestoreV2_21"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_22/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear0/b/Adam"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_22/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_22"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_22/tensor_names"
    input: "ModelSaver/save/RestoreV2_22/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_22"
    op: "Assign"
    input: "linear0/b/Adam"
    input: "ModelSaver/save/RestoreV2_22"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_23/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear0/b/Adam_1"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_23/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_23"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_23/tensor_names"
    input: "ModelSaver/save/RestoreV2_23/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_23"
    op: "Assign"
    input: "linear0/b/Adam_1"
    input: "ModelSaver/save/RestoreV2_23"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_24/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear0/bn/beta"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_24/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_24"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_24/tensor_names"
    input: "ModelSaver/save/RestoreV2_24/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_24"
    op: "Assign"
    input: "linear0/bn/beta"
    input: "ModelSaver/save/RestoreV2_24"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_25/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear0/bn/beta/Adam"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_25/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_25"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_25/tensor_names"
    input: "ModelSaver/save/RestoreV2_25/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_25"
    op: "Assign"
    input: "linear0/bn/beta/Adam"
    input: "ModelSaver/save/RestoreV2_25"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_26/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear0/bn/beta/Adam_1"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_26/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_26"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_26/tensor_names"
    input: "ModelSaver/save/RestoreV2_26/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_26"
    op: "Assign"
    input: "linear0/bn/beta/Adam_1"
    input: "ModelSaver/save/RestoreV2_26"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_27/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear0/bn/gamma"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_27/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_27"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_27/tensor_names"
    input: "ModelSaver/save/RestoreV2_27/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_27"
    op: "Assign"
    input: "linear0/bn/gamma"
    input: "ModelSaver/save/RestoreV2_27"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_28/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear0/bn/gamma/Adam"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_28/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_28"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_28/tensor_names"
    input: "ModelSaver/save/RestoreV2_28/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_28"
    op: "Assign"
    input: "linear0/bn/gamma/Adam"
    input: "ModelSaver/save/RestoreV2_28"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_29/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear0/bn/gamma/Adam_1"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_29/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_29"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_29/tensor_names"
    input: "ModelSaver/save/RestoreV2_29/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_29"
    op: "Assign"
    input: "linear0/bn/gamma/Adam_1"
    input: "ModelSaver/save/RestoreV2_29"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_30/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear0/bn/mean/EMA"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_30/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_30"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_30/tensor_names"
    input: "ModelSaver/save/RestoreV2_30/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_30"
    op: "Assign"
    input: "linear0/bn/mean/EMA"
    input: "ModelSaver/save/RestoreV2_30"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_31/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear0/bn/variance/EMA"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_31/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_31"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_31/tensor_names"
    input: "ModelSaver/save/RestoreV2_31/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_31"
    op: "Assign"
    input: "linear0/bn/variance/EMA"
    input: "ModelSaver/save/RestoreV2_31"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_32/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear1/W"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_32/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_32"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_32/tensor_names"
    input: "ModelSaver/save/RestoreV2_32/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_32"
    op: "Assign"
    input: "linear1/W"
    input: "ModelSaver/save/RestoreV2_32"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_33/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear1/W/Adam"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_33/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_33"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_33/tensor_names"
    input: "ModelSaver/save/RestoreV2_33/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_33"
    op: "Assign"
    input: "linear1/W/Adam"
    input: "ModelSaver/save/RestoreV2_33"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_34/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear1/W/Adam_1"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_34/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_34"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_34/tensor_names"
    input: "ModelSaver/save/RestoreV2_34/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_34"
    op: "Assign"
    input: "linear1/W/Adam_1"
    input: "ModelSaver/save/RestoreV2_34"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_35/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear1/b"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_35/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_35"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_35/tensor_names"
    input: "ModelSaver/save/RestoreV2_35/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_35"
    op: "Assign"
    input: "linear1/b"
    input: "ModelSaver/save/RestoreV2_35"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_36/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear1/b/Adam"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_36/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_36"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_36/tensor_names"
    input: "ModelSaver/save/RestoreV2_36/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_36"
    op: "Assign"
    input: "linear1/b/Adam"
    input: "ModelSaver/save/RestoreV2_36"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_37/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear1/b/Adam_1"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_37/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_37"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_37/tensor_names"
    input: "ModelSaver/save/RestoreV2_37/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_37"
    op: "Assign"
    input: "linear1/b/Adam_1"
    input: "ModelSaver/save/RestoreV2_37"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_38/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear1/bn/beta"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_38/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_38"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_38/tensor_names"
    input: "ModelSaver/save/RestoreV2_38/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_38"
    op: "Assign"
    input: "linear1/bn/beta"
    input: "ModelSaver/save/RestoreV2_38"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_39/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear1/bn/beta/Adam"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_39/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_39"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_39/tensor_names"
    input: "ModelSaver/save/RestoreV2_39/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_39"
    op: "Assign"
    input: "linear1/bn/beta/Adam"
    input: "ModelSaver/save/RestoreV2_39"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_40/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear1/bn/beta/Adam_1"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_40/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_40"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_40/tensor_names"
    input: "ModelSaver/save/RestoreV2_40/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_40"
    op: "Assign"
    input: "linear1/bn/beta/Adam_1"
    input: "ModelSaver/save/RestoreV2_40"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_41/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear1/bn/gamma"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_41/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_41"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_41/tensor_names"
    input: "ModelSaver/save/RestoreV2_41/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_41"
    op: "Assign"
    input: "linear1/bn/gamma"
    input: "ModelSaver/save/RestoreV2_41"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_42/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear1/bn/gamma/Adam"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_42/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_42"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_42/tensor_names"
    input: "ModelSaver/save/RestoreV2_42/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_42"
    op: "Assign"
    input: "linear1/bn/gamma/Adam"
    input: "ModelSaver/save/RestoreV2_42"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_43/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear1/bn/gamma/Adam_1"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_43/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_43"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_43/tensor_names"
    input: "ModelSaver/save/RestoreV2_43/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_43"
    op: "Assign"
    input: "linear1/bn/gamma/Adam_1"
    input: "ModelSaver/save/RestoreV2_43"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_44/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear1/bn/mean/EMA"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_44/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_44"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_44/tensor_names"
    input: "ModelSaver/save/RestoreV2_44/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_44"
    op: "Assign"
    input: "linear1/bn/mean/EMA"
    input: "ModelSaver/save/RestoreV2_44"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_45/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear1/bn/variance/EMA"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_45/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_45"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_45/tensor_names"
    input: "ModelSaver/save/RestoreV2_45/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_45"
    op: "Assign"
    input: "linear1/bn/variance/EMA"
    input: "ModelSaver/save/RestoreV2_45"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_46/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear2/W"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_46/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_46"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_46/tensor_names"
    input: "ModelSaver/save/RestoreV2_46/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_46"
    op: "Assign"
    input: "linear2/W"
    input: "ModelSaver/save/RestoreV2_46"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_47/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear2/W/Adam"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_47/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_47"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_47/tensor_names"
    input: "ModelSaver/save/RestoreV2_47/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_47"
    op: "Assign"
    input: "linear2/W/Adam"
    input: "ModelSaver/save/RestoreV2_47"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_48/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear2/W/Adam_1"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_48/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_48"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_48/tensor_names"
    input: "ModelSaver/save/RestoreV2_48/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_48"
    op: "Assign"
    input: "linear2/W/Adam_1"
    input: "ModelSaver/save/RestoreV2_48"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_49/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear2/b"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_49/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_49"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_49/tensor_names"
    input: "ModelSaver/save/RestoreV2_49/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_49"
    op: "Assign"
    input: "linear2/b"
    input: "ModelSaver/save/RestoreV2_49"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_50/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear2/b/Adam"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_50/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_50"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_50/tensor_names"
    input: "ModelSaver/save/RestoreV2_50/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_50"
    op: "Assign"
    input: "linear2/b/Adam"
    input: "ModelSaver/save/RestoreV2_50"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_51/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear2/b/Adam_1"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_51/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_51"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_51/tensor_names"
    input: "ModelSaver/save/RestoreV2_51/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_51"
    op: "Assign"
    input: "linear2/b/Adam_1"
    input: "ModelSaver/save/RestoreV2_51"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_52/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear2/bn/beta"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_52/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_52"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_52/tensor_names"
    input: "ModelSaver/save/RestoreV2_52/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_52"
    op: "Assign"
    input: "linear2/bn/beta"
    input: "ModelSaver/save/RestoreV2_52"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_53/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear2/bn/beta/Adam"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_53/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_53"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_53/tensor_names"
    input: "ModelSaver/save/RestoreV2_53/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_53"
    op: "Assign"
    input: "linear2/bn/beta/Adam"
    input: "ModelSaver/save/RestoreV2_53"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_54/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear2/bn/beta/Adam_1"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_54/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_54"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_54/tensor_names"
    input: "ModelSaver/save/RestoreV2_54/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_54"
    op: "Assign"
    input: "linear2/bn/beta/Adam_1"
    input: "ModelSaver/save/RestoreV2_54"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_55/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear2/bn/gamma"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_55/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_55"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_55/tensor_names"
    input: "ModelSaver/save/RestoreV2_55/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_55"
    op: "Assign"
    input: "linear2/bn/gamma"
    input: "ModelSaver/save/RestoreV2_55"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_56/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear2/bn/gamma/Adam"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_56/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_56"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_56/tensor_names"
    input: "ModelSaver/save/RestoreV2_56/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_56"
    op: "Assign"
    input: "linear2/bn/gamma/Adam"
    input: "ModelSaver/save/RestoreV2_56"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_57/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear2/bn/gamma/Adam_1"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_57/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_57"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_57/tensor_names"
    input: "ModelSaver/save/RestoreV2_57/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_57"
    op: "Assign"
    input: "linear2/bn/gamma/Adam_1"
    input: "ModelSaver/save/RestoreV2_57"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_58/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear2/bn/mean/EMA"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_58/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_58"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_58/tensor_names"
    input: "ModelSaver/save/RestoreV2_58/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_58"
    op: "Assign"
    input: "linear2/bn/mean/EMA"
    input: "ModelSaver/save/RestoreV2_58"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_59/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear2/bn/variance/EMA"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_59/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_59"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_59/tensor_names"
    input: "ModelSaver/save/RestoreV2_59/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_59"
    op: "Assign"
    input: "linear2/bn/variance/EMA"
    input: "ModelSaver/save/RestoreV2_59"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_60/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear3/W"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_60/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_60"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_60/tensor_names"
    input: "ModelSaver/save/RestoreV2_60/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_60"
    op: "Assign"
    input: "linear3/W"
    input: "ModelSaver/save/RestoreV2_60"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_61/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear3/W/Adam"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_61/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_61"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_61/tensor_names"
    input: "ModelSaver/save/RestoreV2_61/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_61"
    op: "Assign"
    input: "linear3/W/Adam"
    input: "ModelSaver/save/RestoreV2_61"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_62/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear3/W/Adam_1"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_62/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_62"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_62/tensor_names"
    input: "ModelSaver/save/RestoreV2_62/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_62"
    op: "Assign"
    input: "linear3/W/Adam_1"
    input: "ModelSaver/save/RestoreV2_62"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_63/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear3/b"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_63/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_63"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_63/tensor_names"
    input: "ModelSaver/save/RestoreV2_63/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_63"
    op: "Assign"
    input: "linear3/b"
    input: "ModelSaver/save/RestoreV2_63"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_64/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear3/b/Adam"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_64/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_64"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_64/tensor_names"
    input: "ModelSaver/save/RestoreV2_64/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_64"
    op: "Assign"
    input: "linear3/b/Adam"
    input: "ModelSaver/save/RestoreV2_64"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_65/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear3/b/Adam_1"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_65/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_65"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_65/tensor_names"
    input: "ModelSaver/save/RestoreV2_65/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_65"
    op: "Assign"
    input: "linear3/b/Adam_1"
    input: "ModelSaver/save/RestoreV2_65"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_66/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear3/bn/beta"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_66/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_66"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_66/tensor_names"
    input: "ModelSaver/save/RestoreV2_66/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_66"
    op: "Assign"
    input: "linear3/bn/beta"
    input: "ModelSaver/save/RestoreV2_66"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_67/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear3/bn/beta/Adam"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_67/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_67"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_67/tensor_names"
    input: "ModelSaver/save/RestoreV2_67/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_67"
    op: "Assign"
    input: "linear3/bn/beta/Adam"
    input: "ModelSaver/save/RestoreV2_67"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_68/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear3/bn/beta/Adam_1"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_68/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_68"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_68/tensor_names"
    input: "ModelSaver/save/RestoreV2_68/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_68"
    op: "Assign"
    input: "linear3/bn/beta/Adam_1"
    input: "ModelSaver/save/RestoreV2_68"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_69/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear3/bn/gamma"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_69/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_69"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_69/tensor_names"
    input: "ModelSaver/save/RestoreV2_69/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_69"
    op: "Assign"
    input: "linear3/bn/gamma"
    input: "ModelSaver/save/RestoreV2_69"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_70/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear3/bn/gamma/Adam"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_70/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_70"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_70/tensor_names"
    input: "ModelSaver/save/RestoreV2_70/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_70"
    op: "Assign"
    input: "linear3/bn/gamma/Adam"
    input: "ModelSaver/save/RestoreV2_70"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_71/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear3/bn/gamma/Adam_1"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_71/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_71"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_71/tensor_names"
    input: "ModelSaver/save/RestoreV2_71/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_71"
    op: "Assign"
    input: "linear3/bn/gamma/Adam_1"
    input: "ModelSaver/save/RestoreV2_71"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_72/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear3/bn/mean/EMA"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_72/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_72"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_72/tensor_names"
    input: "ModelSaver/save/RestoreV2_72/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_72"
    op: "Assign"
    input: "linear3/bn/mean/EMA"
    input: "ModelSaver/save/RestoreV2_72"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_73/tensor_names"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: "linear3/bn/variance/EMA"
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_73/shape_and_slices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 1
            }
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/RestoreV2_73"
    op: "RestoreV2"
    input: "ModelSaver/save/Const"
    input: "ModelSaver/save/RestoreV2_73/tensor_names"
    input: "ModelSaver/save/RestoreV2_73/shape_and_slices"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtypes"
      value {
        list {
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "ModelSaver/save/Assign_73"
    op: "Assign"
    input: "linear3/bn/variance/EMA"
    input: "ModelSaver/save/RestoreV2_73"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "ModelSaver/save/restore_all/NoOp"
    op: "NoOp"
    input: "^ModelSaver/save/Assign"
    input: "^ModelSaver/save/Assign_1"
    input: "^ModelSaver/save/Assign_2"
    input: "^ModelSaver/save/Assign_11"
  }
  node {
    name: "ModelSaver/save/restore_all/NoOp_1"
    op: "NoOp"
    input: "^ModelSaver/save/Assign_3"
    input: "^ModelSaver/save/Assign_4"
    input: "^ModelSaver/save/Assign_5"
    input: "^ModelSaver/save/Assign_6"
    input: "^ModelSaver/save/Assign_7"
    input: "^ModelSaver/save/Assign_8"
    input: "^ModelSaver/save/Assign_9"
    input: "^ModelSaver/save/Assign_10"
    input: "^ModelSaver/save/Assign_12"
    input: "^ModelSaver/save/Assign_13"
    input: "^ModelSaver/save/Assign_14"
    input: "^ModelSaver/save/Assign_15"
    input: "^ModelSaver/save/Assign_16"
    input: "^ModelSaver/save/Assign_17"
    input: "^ModelSaver/save/Assign_18"
    input: "^ModelSaver/save/Assign_19"
    input: "^ModelSaver/save/Assign_20"
    input: "^ModelSaver/save/Assign_21"
    input: "^ModelSaver/save/Assign_22"
    input: "^ModelSaver/save/Assign_23"
    input: "^ModelSaver/save/Assign_24"
    input: "^ModelSaver/save/Assign_25"
    input: "^ModelSaver/save/Assign_26"
    input: "^ModelSaver/save/Assign_27"
    input: "^ModelSaver/save/Assign_28"
    input: "^ModelSaver/save/Assign_29"
    input: "^ModelSaver/save/Assign_30"
    input: "^ModelSaver/save/Assign_31"
    input: "^ModelSaver/save/Assign_32"
    input: "^ModelSaver/save/Assign_33"
    input: "^ModelSaver/save/Assign_34"
    input: "^ModelSaver/save/Assign_35"
    input: "^ModelSaver/save/Assign_36"
    input: "^ModelSaver/save/Assign_37"
    input: "^ModelSaver/save/Assign_38"
    input: "^ModelSaver/save/Assign_39"
    input: "^ModelSaver/save/Assign_40"
    input: "^ModelSaver/save/Assign_41"
    input: "^ModelSaver/save/Assign_42"
    input: "^ModelSaver/save/Assign_43"
    input: "^ModelSaver/save/Assign_44"
    input: "^ModelSaver/save/Assign_45"
    input: "^ModelSaver/save/Assign_46"
    input: "^ModelSaver/save/Assign_47"
    input: "^ModelSaver/save/Assign_48"
    input: "^ModelSaver/save/Assign_49"
    input: "^ModelSaver/save/Assign_50"
    input: "^ModelSaver/save/Assign_51"
    input: "^ModelSaver/save/Assign_52"
    input: "^ModelSaver/save/Assign_53"
    input: "^ModelSaver/save/Assign_54"
    input: "^ModelSaver/save/Assign_55"
    input: "^ModelSaver/save/Assign_56"
    input: "^ModelSaver/save/Assign_57"
    input: "^ModelSaver/save/Assign_58"
    input: "^ModelSaver/save/Assign_59"
    input: "^ModelSaver/save/Assign_60"
    input: "^ModelSaver/save/Assign_61"
    input: "^ModelSaver/save/Assign_62"
    input: "^ModelSaver/save/Assign_63"
    input: "^ModelSaver/save/Assign_64"
    input: "^ModelSaver/save/Assign_65"
    input: "^ModelSaver/save/Assign_66"
    input: "^ModelSaver/save/Assign_67"
    input: "^ModelSaver/save/Assign_68"
    input: "^ModelSaver/save/Assign_69"
    input: "^ModelSaver/save/Assign_70"
    input: "^ModelSaver/save/Assign_71"
    input: "^ModelSaver/save/Assign_72"
    input: "^ModelSaver/save/Assign_73"
    device: "/device:GPU:0"
  }
  node {
    name: "ModelSaver/save/restore_all"
    op: "NoOp"
    input: "^ModelSaver/save/restore_all/NoOp"
    input: "^ModelSaver/save/restore_all/NoOp_1"
  }
  node {
    name: "InferenceTower/linear0/Reshape/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\377\377\377\377\350\003\000\000"
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear0/Reshape"
    op: "Reshape"
    input: "input"
    input: "InferenceTower/linear0/Reshape/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1000
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear0/MatMul"
    op: "MatMul"
    input: "InferenceTower/linear0/Reshape"
    input: "linear0/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: false
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: false
      }
    }
  }
  node {
    name: "InferenceTower/linear0/BiasAdd"
    op: "BiasAdd"
    input: "InferenceTower/linear0/MatMul"
    input: "linear0/b/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
  }
  node {
    name: "InferenceTower/linear0/bn/batchnorm/add/y"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 9.99999974738e-06
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear0/bn/batchnorm/add"
    op: "Add"
    input: "linear0/bn/variance/EMA/read"
    input: "InferenceTower/linear0/bn/batchnorm/add/y"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear0/bn/batchnorm/Rsqrt"
    op: "Rsqrt"
    input: "InferenceTower/linear0/bn/batchnorm/add"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear0/bn/batchnorm/mul"
    op: "Mul"
    input: "InferenceTower/linear0/bn/batchnorm/Rsqrt"
    input: "linear0/bn/gamma/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear0/bn/batchnorm/mul_1"
    op: "Mul"
    input: "InferenceTower/linear0/BiasAdd"
    input: "InferenceTower/linear0/bn/batchnorm/mul"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear0/bn/batchnorm/mul_2"
    op: "Mul"
    input: "linear0/bn/mean/EMA/read"
    input: "InferenceTower/linear0/bn/batchnorm/mul"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear0/bn/batchnorm/sub"
    op: "Sub"
    input: "linear0/bn/beta/read"
    input: "InferenceTower/linear0/bn/batchnorm/mul_2"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear0/bn/batchnorm/add_1"
    op: "Add"
    input: "InferenceTower/linear0/bn/batchnorm/mul_1"
    input: "InferenceTower/linear0/bn/batchnorm/sub"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear0/bn/output"
    op: "Identity"
    input: "InferenceTower/linear0/bn/batchnorm/add_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear0/output"
    op: "Relu"
    input: "InferenceTower/linear0/bn/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear1/Reshape/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\377\377\377\377\370\001\000\000"
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear1/Reshape"
    op: "Reshape"
    input: "InferenceTower/linear0/output"
    input: "InferenceTower/linear1/Reshape/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear1/MatMul"
    op: "MatMul"
    input: "InferenceTower/linear1/Reshape"
    input: "linear1/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: false
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: false
      }
    }
  }
  node {
    name: "InferenceTower/linear1/BiasAdd"
    op: "BiasAdd"
    input: "InferenceTower/linear1/MatMul"
    input: "linear1/b/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
  }
  node {
    name: "InferenceTower/linear1/bn/batchnorm/add/y"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 9.99999974738e-06
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear1/bn/batchnorm/add"
    op: "Add"
    input: "linear1/bn/variance/EMA/read"
    input: "InferenceTower/linear1/bn/batchnorm/add/y"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear1/bn/batchnorm/Rsqrt"
    op: "Rsqrt"
    input: "InferenceTower/linear1/bn/batchnorm/add"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear1/bn/batchnorm/mul"
    op: "Mul"
    input: "InferenceTower/linear1/bn/batchnorm/Rsqrt"
    input: "linear1/bn/gamma/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear1/bn/batchnorm/mul_1"
    op: "Mul"
    input: "InferenceTower/linear1/BiasAdd"
    input: "InferenceTower/linear1/bn/batchnorm/mul"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear1/bn/batchnorm/mul_2"
    op: "Mul"
    input: "linear1/bn/mean/EMA/read"
    input: "InferenceTower/linear1/bn/batchnorm/mul"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear1/bn/batchnorm/sub"
    op: "Sub"
    input: "linear1/bn/beta/read"
    input: "InferenceTower/linear1/bn/batchnorm/mul_2"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear1/bn/batchnorm/add_1"
    op: "Add"
    input: "InferenceTower/linear1/bn/batchnorm/mul_1"
    input: "InferenceTower/linear1/bn/batchnorm/sub"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear1/bn/output"
    op: "Identity"
    input: "InferenceTower/linear1/bn/batchnorm/add_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear1/output"
    op: "Relu"
    input: "InferenceTower/linear1/bn/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear2/Reshape/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\377\377\377\377\370\001\000\000"
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear2/Reshape"
    op: "Reshape"
    input: "InferenceTower/linear1/output"
    input: "InferenceTower/linear2/Reshape/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear2/MatMul"
    op: "MatMul"
    input: "InferenceTower/linear2/Reshape"
    input: "linear2/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: false
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: false
      }
    }
  }
  node {
    name: "InferenceTower/linear2/BiasAdd"
    op: "BiasAdd"
    input: "InferenceTower/linear2/MatMul"
    input: "linear2/b/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
  }
  node {
    name: "InferenceTower/linear2/bn/batchnorm/add/y"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 9.99999974738e-06
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear2/bn/batchnorm/add"
    op: "Add"
    input: "linear2/bn/variance/EMA/read"
    input: "InferenceTower/linear2/bn/batchnorm/add/y"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear2/bn/batchnorm/Rsqrt"
    op: "Rsqrt"
    input: "InferenceTower/linear2/bn/batchnorm/add"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear2/bn/batchnorm/mul"
    op: "Mul"
    input: "InferenceTower/linear2/bn/batchnorm/Rsqrt"
    input: "linear2/bn/gamma/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear2/bn/batchnorm/mul_1"
    op: "Mul"
    input: "InferenceTower/linear2/BiasAdd"
    input: "InferenceTower/linear2/bn/batchnorm/mul"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear2/bn/batchnorm/mul_2"
    op: "Mul"
    input: "linear2/bn/mean/EMA/read"
    input: "InferenceTower/linear2/bn/batchnorm/mul"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear2/bn/batchnorm/sub"
    op: "Sub"
    input: "linear2/bn/beta/read"
    input: "InferenceTower/linear2/bn/batchnorm/mul_2"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear2/bn/batchnorm/add_1"
    op: "Add"
    input: "InferenceTower/linear2/bn/batchnorm/mul_1"
    input: "InferenceTower/linear2/bn/batchnorm/sub"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear2/bn/output"
    op: "Identity"
    input: "InferenceTower/linear2/bn/batchnorm/add_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear2/output"
    op: "Relu"
    input: "InferenceTower/linear2/bn/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear3/Reshape/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\377\377\377\377\370\001\000\000"
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear3/Reshape"
    op: "Reshape"
    input: "InferenceTower/linear2/output"
    input: "InferenceTower/linear3/Reshape/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear3/MatMul"
    op: "MatMul"
    input: "InferenceTower/linear3/Reshape"
    input: "linear3/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: false
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: false
      }
    }
  }
  node {
    name: "InferenceTower/linear3/BiasAdd"
    op: "BiasAdd"
    input: "InferenceTower/linear3/MatMul"
    input: "linear3/b/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
  }
  node {
    name: "InferenceTower/linear3/bn/batchnorm/add/y"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 9.99999974738e-06
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear3/bn/batchnorm/add"
    op: "Add"
    input: "linear3/bn/variance/EMA/read"
    input: "InferenceTower/linear3/bn/batchnorm/add/y"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear3/bn/batchnorm/Rsqrt"
    op: "Rsqrt"
    input: "InferenceTower/linear3/bn/batchnorm/add"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear3/bn/batchnorm/mul"
    op: "Mul"
    input: "InferenceTower/linear3/bn/batchnorm/Rsqrt"
    input: "linear3/bn/gamma/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear3/bn/batchnorm/mul_1"
    op: "Mul"
    input: "InferenceTower/linear3/BiasAdd"
    input: "InferenceTower/linear3/bn/batchnorm/mul"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear3/bn/batchnorm/mul_2"
    op: "Mul"
    input: "linear3/bn/mean/EMA/read"
    input: "InferenceTower/linear3/bn/batchnorm/mul"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear3/bn/batchnorm/sub"
    op: "Sub"
    input: "linear3/bn/beta/read"
    input: "InferenceTower/linear3/bn/batchnorm/mul_2"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear3/bn/batchnorm/add_1"
    op: "Add"
    input: "InferenceTower/linear3/bn/batchnorm/mul_1"
    input: "InferenceTower/linear3/bn/batchnorm/sub"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear3/bn/output"
    op: "Identity"
    input: "InferenceTower/linear3/bn/batchnorm/add_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/linear3/output"
    op: "Relu"
    input: "InferenceTower/linear3/bn/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/last_linear/Reshape/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\377\377\377\377\370\001\000\000"
        }
      }
    }
  }
  node {
    name: "InferenceTower/last_linear/Reshape"
    op: "Reshape"
    input: "InferenceTower/linear3/output"
    input: "InferenceTower/last_linear/Reshape/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/last_linear/MatMul"
    op: "MatMul"
    input: "InferenceTower/last_linear/Reshape"
    input: "last_linear/W/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: false
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: false
      }
    }
  }
  node {
    name: "InferenceTower/last_linear/BiasAdd"
    op: "BiasAdd"
    input: "InferenceTower/last_linear/MatMul"
    input: "last_linear/b/read"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
  }
  node {
    name: "InferenceTower/last_linear/output"
    op: "Identity"
    input: "InferenceTower/last_linear/BiasAdd"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/output"
    op: "Softmax"
    input: "InferenceTower/last_linear/output"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/ArgMax/dimension"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "InferenceTower/ArgMax"
    op: "ArgMax"
    input: "InferenceTower/output"
    input: "InferenceTower/ArgMax/dimension"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    attr {
      key: "output_type"
      value {
        type: DT_INT64
      }
    }
  }
  node {
    name: "InferenceTower/Reshape/shape"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: -1
        }
      }
    }
  }
  node {
    name: "InferenceTower/Reshape"
    op: "Reshape"
    input: "InferenceTower/ArgMax"
    input: "InferenceTower/Reshape/shape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/UniqueWithCounts"
    op: "UniqueWithCounts"
    input: "InferenceTower/Reshape"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    attr {
      key: "out_idx"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "InferenceTower/ArgMax_1/dimension"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "InferenceTower/ArgMax_1"
    op: "ArgMax"
    input: "InferenceTower/UniqueWithCounts:2"
    input: "InferenceTower/ArgMax_1/dimension"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "output_type"
      value {
        type: DT_INT64
      }
    }
  }
  node {
    name: "InferenceTower/Gather"
    op: "Gather"
    input: "InferenceTower/UniqueWithCounts"
    input: "InferenceTower/ArgMax_1"
    device: "/device:GPU:0"
    attr {
      key: "Tindices"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "Tparams"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "validate_indices"
      value {
        b: true
      }
    }
  }
  node {
    name: "InferenceTower/strided_slice/stack"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "InferenceTower/strided_slice/stack_1"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "InferenceTower/strided_slice/stack_2"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "InferenceTower/strided_slice"
    op: "StridedSlice"
    input: "label"
    input: "InferenceTower/strided_slice/stack"
    input: "InferenceTower/strided_slice/stack_1"
    input: "InferenceTower/strided_slice/stack_2"
    device: "/device:GPU:0"
    attr {
      key: "Index"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "begin_mask"
      value {
        i: 0
      }
    }
    attr {
      key: "ellipsis_mask"
      value {
        i: 0
      }
    }
    attr {
      key: "end_mask"
      value {
        i: 0
      }
    }
    attr {
      key: "new_axis_mask"
      value {
        i: 0
      }
    }
    attr {
      key: "shrink_axis_mask"
      value {
        i: 1
      }
    }
  }
  node {
    name: "InferenceTower/Cast"
    op: "Cast"
    input: "InferenceTower/strided_slice"
    device: "/device:GPU:0"
    attr {
      key: "DstT"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "SrcT"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/NotEqual"
    op: "NotEqual"
    input: "InferenceTower/Gather"
    input: "InferenceTower/Cast"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/utt-wrong/dim"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "InferenceTower/utt-wrong"
    op: "ExpandDims"
    input: "InferenceTower/NotEqual"
    input: "InferenceTower/utt-wrong/dim"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "Tdim"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/SparseSoftmaxCrossEntropyWithLogits/Shape"
    op: "Shape"
    input: "label"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "InferenceTower/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
    op: "SparseSoftmaxCrossEntropyWithLogits"
    input: "InferenceTower/last_linear/output"
    input: "label"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tlabels"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 255
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/Const"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "InferenceTower/cross_entropy_loss"
    op: "Mean"
    input: "InferenceTower/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
    input: "InferenceTower/Const"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "InferenceTower/in_top_k/InTopKV2/k"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "InferenceTower/in_top_k/InTopKV2"
    op: "InTopKV2"
    input: "InferenceTower/last_linear/output"
    input: "label"
    input: "InferenceTower/in_top_k/InTopKV2/k"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/LogicalNot"
    op: "LogicalNot"
    input: "InferenceTower/in_top_k/InTopKV2"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/wrong-top1"
    op: "Cast"
    input: "InferenceTower/LogicalNot"
    device: "/device:GPU:0"
    attr {
      key: "DstT"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "SrcT"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/Const_1"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "InferenceTower/train-error-top1"
    op: "Mean"
    input: "InferenceTower/wrong-top1"
    input: "InferenceTower/Const_1"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "InferenceTower/cost"
    op: "Identity"
    input: "InferenceTower/cross_entropy_loss"
    device: "/device:GPU:0"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "InferenceTower/TotalMults"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 1394568
        }
      }
    }
  }
  node {
    name: "InferenceTower/TotalWeights"
    op: "Const"
    device: "/device:GPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 1396839
        }
      }
    }
  }
  node {
    name: "MovingAverageSummary/maintain_moving_average_summary"
    op: "NoOp"
    input: "^EMA/cross_entropy_loss_EMA_apply"
    input: "^EMA/train-error-top1_EMA_apply"
    device: "/device:GPU:0"
  }
  node {
    name: "MergeAllSummariesRunWithOp/Merge/MergeSummary"
    op: "MergeSummary"
    input: "QueueInput/queue_size-summary"
    input: "cross_entropy_loss-summary"
    input: "train-error-top1-summary"
    input: "param-summary/linear0/W-rms"
    input: "param-summary/linear0/W-histogram"
    input: "param-summary/linear1/W-rms"
    input: "param-summary/linear1/W-histogram"
    input: "param-summary/linear2/W-rms"
    input: "param-summary/linear2/W-histogram"
    input: "param-summary/linear3/W-rms"
    input: "param-summary/linear3/W-histogram"
    input: "param-summary/last_linear/W-rms"
    input: "param-summary/last_linear/W-histogram"
    input: "param-summary/linear0/b-rms"
    input: "param-summary/linear0/b-histogram"
    input: "param-summary/linear1/b-rms"
    input: "param-summary/linear1/b-histogram"
    input: "param-summary/linear2/b-rms"
    input: "param-summary/linear2/b-histogram"
    input: "param-summary/linear3/b-rms"
    input: "param-summary/linear3/b-histogram"
    input: "param-summary/last_linear/b-rms"
    input: "param-summary/last_linear/b-histogram"
    input: "tower0/activation-summaries/tower0/linear0/output-rms"
    input: "tower0/activation-summaries/tower0/linear0/output-histogram"
    input: "tower0/activation-summaries/tower0/linear1/output-rms"
    input: "tower0/activation-summaries/tower0/linear1/output-histogram"
    input: "tower0/activation-summaries/tower0/linear2/output-rms"
    input: "tower0/activation-summaries/tower0/linear2/output-histogram"
    input: "tower0/activation-summaries/tower0/linear3/output-rms"
    input: "tower0/activation-summaries/tower0/linear3/output-histogram"
    input: "tower0/activation-summaries/tower0/last_linear/output-rms"
    input: "tower0/activation-summaries/tower0/last_linear/output-histogram"
    input: "tower0/activation-summaries/tower0/output-rms"
    input: "tower0/activation-summaries/tower0/output-histogram"
    attr {
      key: "N"
      value {
        i: 35
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "RunUpdateOps/update_ops"
    op: "NoOp"
    input: "^tower0/linear0/bn/mean_ema_op"
    input: "^tower0/linear0/bn/var_ema_op"
    input: "^tower0/linear1/bn/mean_ema_op"
    input: "^tower0/linear1/bn/var_ema_op"
    input: "^tower0/linear2/bn/mean_ema_op"
    input: "^tower0/linear2/bn/var_ema_op"
    input: "^tower0/linear3/bn/mean_ema_op"
    input: "^tower0/linear3/bn/var_ema_op"
    device: "/device:GPU:0"
  }
  node {
    name: "init/NoOp"
    op: "NoOp"
    input: "^EMA/QueueInput/queue_size/Assign"
    input: "^EMA/QueueInput/queue_size/biased/Assign"
    input: "^EMA/QueueInput/queue_size/local_step/Assign"
    input: "^global_step/Assign"
  }
  node {
    name: "init/NoOp_1"
    op: "NoOp"
    input: "^linear0/W/Assign"
    input: "^linear0/b/Assign"
    input: "^linear0/bn/beta/Assign"
    input: "^linear0/bn/gamma/Assign"
    input: "^linear0/bn/mean/EMA/Assign"
    input: "^linear0/bn/variance/EMA/Assign"
    input: "^linear1/W/Assign"
    input: "^linear1/b/Assign"
    input: "^linear1/bn/beta/Assign"
    input: "^linear1/bn/gamma/Assign"
    input: "^linear1/bn/mean/EMA/Assign"
    input: "^linear1/bn/variance/EMA/Assign"
    input: "^linear2/W/Assign"
    input: "^linear2/b/Assign"
    input: "^linear2/bn/beta/Assign"
    input: "^linear2/bn/gamma/Assign"
    input: "^linear2/bn/mean/EMA/Assign"
    input: "^linear2/bn/variance/EMA/Assign"
    input: "^linear3/W/Assign"
    input: "^linear3/b/Assign"
    input: "^linear3/bn/beta/Assign"
    input: "^linear3/bn/gamma/Assign"
    input: "^linear3/bn/mean/EMA/Assign"
    input: "^linear3/bn/variance/EMA/Assign"
    input: "^last_linear/W/Assign"
    input: "^last_linear/b/Assign"
    input: "^EMA/cross_entropy_loss/Assign"
    input: "^EMA/cross_entropy_loss/biased/Assign"
    input: "^EMA/cross_entropy_loss/local_step/Assign"
    input: "^EMA/train-error-top1/Assign"
    input: "^EMA/train-error-top1/biased/Assign"
    input: "^EMA/train-error-top1/local_step/Assign"
    input: "^beta1_power/Assign"
    input: "^beta2_power/Assign"
    input: "^linear0/W/Adam/Assign"
    input: "^linear0/W/Adam_1/Assign"
    input: "^linear0/b/Adam/Assign"
    input: "^linear0/b/Adam_1/Assign"
    input: "^linear0/bn/beta/Adam/Assign"
    input: "^linear0/bn/beta/Adam_1/Assign"
    input: "^linear0/bn/gamma/Adam/Assign"
    input: "^linear0/bn/gamma/Adam_1/Assign"
    input: "^linear1/W/Adam/Assign"
    input: "^linear1/W/Adam_1/Assign"
    input: "^linear1/b/Adam/Assign"
    input: "^linear1/b/Adam_1/Assign"
    input: "^linear1/bn/beta/Adam/Assign"
    input: "^linear1/bn/beta/Adam_1/Assign"
    input: "^linear1/bn/gamma/Adam/Assign"
    input: "^linear1/bn/gamma/Adam_1/Assign"
    input: "^linear2/W/Adam/Assign"
    input: "^linear2/W/Adam_1/Assign"
    input: "^linear2/b/Adam/Assign"
    input: "^linear2/b/Adam_1/Assign"
    input: "^linear2/bn/beta/Adam/Assign"
    input: "^linear2/bn/beta/Adam_1/Assign"
    input: "^linear2/bn/gamma/Adam/Assign"
    input: "^linear2/bn/gamma/Adam_1/Assign"
    input: "^linear3/W/Adam/Assign"
    input: "^linear3/W/Adam_1/Assign"
    input: "^linear3/b/Adam/Assign"
    input: "^linear3/b/Adam_1/Assign"
    input: "^linear3/bn/beta/Adam/Assign"
    input: "^linear3/bn/beta/Adam_1/Assign"
    input: "^linear3/bn/gamma/Adam/Assign"
    input: "^linear3/bn/gamma/Adam_1/Assign"
    input: "^last_linear/W/Adam/Assign"
    input: "^last_linear/W/Adam_1/Assign"
    input: "^last_linear/b/Adam/Assign"
    input: "^last_linear/b/Adam_1/Assign"
    device: "/device:GPU:0"
  }
  node {
    name: "init"
    op: "NoOp"
    input: "^init/NoOp"
    input: "^init/NoOp_1"
  }
  node {
    name: "init_1"
    op: "NoOp"
  }
  node {
    name: "group_deps"
    op: "NoOp"
    input: "^init"
    input: "^init_1"
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized"
    op: "IsVariableInitialized"
    input: "EMA/QueueInput/queue_size"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_1"
    op: "IsVariableInitialized"
    input: "EMA/QueueInput/queue_size/biased"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_2"
    op: "IsVariableInitialized"
    input: "EMA/QueueInput/queue_size/local_step"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_3"
    op: "IsVariableInitialized"
    input: "linear0/W"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_4"
    op: "IsVariableInitialized"
    input: "linear0/b"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_5"
    op: "IsVariableInitialized"
    input: "linear0/bn/beta"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_6"
    op: "IsVariableInitialized"
    input: "linear0/bn/gamma"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_7"
    op: "IsVariableInitialized"
    input: "linear0/bn/mean/EMA"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_8"
    op: "IsVariableInitialized"
    input: "linear0/bn/variance/EMA"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_9"
    op: "IsVariableInitialized"
    input: "linear1/W"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_10"
    op: "IsVariableInitialized"
    input: "linear1/b"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_11"
    op: "IsVariableInitialized"
    input: "linear1/bn/beta"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_12"
    op: "IsVariableInitialized"
    input: "linear1/bn/gamma"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_13"
    op: "IsVariableInitialized"
    input: "linear1/bn/mean/EMA"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_14"
    op: "IsVariableInitialized"
    input: "linear1/bn/variance/EMA"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_15"
    op: "IsVariableInitialized"
    input: "linear2/W"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_16"
    op: "IsVariableInitialized"
    input: "linear2/b"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_17"
    op: "IsVariableInitialized"
    input: "linear2/bn/beta"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_18"
    op: "IsVariableInitialized"
    input: "linear2/bn/gamma"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_19"
    op: "IsVariableInitialized"
    input: "linear2/bn/mean/EMA"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_20"
    op: "IsVariableInitialized"
    input: "linear2/bn/variance/EMA"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_21"
    op: "IsVariableInitialized"
    input: "linear3/W"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_22"
    op: "IsVariableInitialized"
    input: "linear3/b"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_23"
    op: "IsVariableInitialized"
    input: "linear3/bn/beta"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_24"
    op: "IsVariableInitialized"
    input: "linear3/bn/gamma"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_25"
    op: "IsVariableInitialized"
    input: "linear3/bn/mean/EMA"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_26"
    op: "IsVariableInitialized"
    input: "linear3/bn/variance/EMA"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_27"
    op: "IsVariableInitialized"
    input: "last_linear/W"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_28"
    op: "IsVariableInitialized"
    input: "last_linear/b"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_29"
    op: "IsVariableInitialized"
    input: "EMA/cross_entropy_loss"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_30"
    op: "IsVariableInitialized"
    input: "EMA/cross_entropy_loss/biased"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_31"
    op: "IsVariableInitialized"
    input: "EMA/cross_entropy_loss/local_step"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_32"
    op: "IsVariableInitialized"
    input: "EMA/train-error-top1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_33"
    op: "IsVariableInitialized"
    input: "EMA/train-error-top1/biased"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_34"
    op: "IsVariableInitialized"
    input: "EMA/train-error-top1/local_step"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_35"
    op: "IsVariableInitialized"
    input: "beta1_power"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_36"
    op: "IsVariableInitialized"
    input: "beta2_power"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_37"
    op: "IsVariableInitialized"
    input: "linear0/W/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_38"
    op: "IsVariableInitialized"
    input: "linear0/W/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_39"
    op: "IsVariableInitialized"
    input: "linear0/b/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_40"
    op: "IsVariableInitialized"
    input: "linear0/b/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_41"
    op: "IsVariableInitialized"
    input: "linear0/bn/beta/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_42"
    op: "IsVariableInitialized"
    input: "linear0/bn/beta/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_43"
    op: "IsVariableInitialized"
    input: "linear0/bn/gamma/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_44"
    op: "IsVariableInitialized"
    input: "linear0/bn/gamma/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_45"
    op: "IsVariableInitialized"
    input: "linear1/W/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_46"
    op: "IsVariableInitialized"
    input: "linear1/W/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_47"
    op: "IsVariableInitialized"
    input: "linear1/b/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_48"
    op: "IsVariableInitialized"
    input: "linear1/b/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_49"
    op: "IsVariableInitialized"
    input: "linear1/bn/beta/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_50"
    op: "IsVariableInitialized"
    input: "linear1/bn/beta/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_51"
    op: "IsVariableInitialized"
    input: "linear1/bn/gamma/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_52"
    op: "IsVariableInitialized"
    input: "linear1/bn/gamma/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_53"
    op: "IsVariableInitialized"
    input: "linear2/W/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_54"
    op: "IsVariableInitialized"
    input: "linear2/W/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_55"
    op: "IsVariableInitialized"
    input: "linear2/b/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_56"
    op: "IsVariableInitialized"
    input: "linear2/b/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_57"
    op: "IsVariableInitialized"
    input: "linear2/bn/beta/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_58"
    op: "IsVariableInitialized"
    input: "linear2/bn/beta/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_59"
    op: "IsVariableInitialized"
    input: "linear2/bn/gamma/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_60"
    op: "IsVariableInitialized"
    input: "linear2/bn/gamma/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_61"
    op: "IsVariableInitialized"
    input: "linear3/W/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_62"
    op: "IsVariableInitialized"
    input: "linear3/W/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_63"
    op: "IsVariableInitialized"
    input: "linear3/b/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_64"
    op: "IsVariableInitialized"
    input: "linear3/b/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_65"
    op: "IsVariableInitialized"
    input: "linear3/bn/beta/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_66"
    op: "IsVariableInitialized"
    input: "linear3/bn/beta/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_67"
    op: "IsVariableInitialized"
    input: "linear3/bn/gamma/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_68"
    op: "IsVariableInitialized"
    input: "linear3/bn/gamma/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_69"
    op: "IsVariableInitialized"
    input: "last_linear/W/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_70"
    op: "IsVariableInitialized"
    input: "last_linear/W/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_71"
    op: "IsVariableInitialized"
    input: "last_linear/b/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_72"
    op: "IsVariableInitialized"
    input: "last_linear/b/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables/IsVariableInitialized_73"
    op: "IsVariableInitialized"
    input: "global_step"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@global_step"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT64
      }
    }
  }
  node {
    name: "report_uninitialized_variables/stack"
    op: "Pack"
    input: "report_uninitialized_variables/IsVariableInitialized"
    input: "report_uninitialized_variables/IsVariableInitialized_1"
    input: "report_uninitialized_variables/IsVariableInitialized_2"
    input: "report_uninitialized_variables/IsVariableInitialized_3"
    input: "report_uninitialized_variables/IsVariableInitialized_4"
    input: "report_uninitialized_variables/IsVariableInitialized_5"
    input: "report_uninitialized_variables/IsVariableInitialized_6"
    input: "report_uninitialized_variables/IsVariableInitialized_7"
    input: "report_uninitialized_variables/IsVariableInitialized_8"
    input: "report_uninitialized_variables/IsVariableInitialized_9"
    input: "report_uninitialized_variables/IsVariableInitialized_10"
    input: "report_uninitialized_variables/IsVariableInitialized_11"
    input: "report_uninitialized_variables/IsVariableInitialized_12"
    input: "report_uninitialized_variables/IsVariableInitialized_13"
    input: "report_uninitialized_variables/IsVariableInitialized_14"
    input: "report_uninitialized_variables/IsVariableInitialized_15"
    input: "report_uninitialized_variables/IsVariableInitialized_16"
    input: "report_uninitialized_variables/IsVariableInitialized_17"
    input: "report_uninitialized_variables/IsVariableInitialized_18"
    input: "report_uninitialized_variables/IsVariableInitialized_19"
    input: "report_uninitialized_variables/IsVariableInitialized_20"
    input: "report_uninitialized_variables/IsVariableInitialized_21"
    input: "report_uninitialized_variables/IsVariableInitialized_22"
    input: "report_uninitialized_variables/IsVariableInitialized_23"
    input: "report_uninitialized_variables/IsVariableInitialized_24"
    input: "report_uninitialized_variables/IsVariableInitialized_25"
    input: "report_uninitialized_variables/IsVariableInitialized_26"
    input: "report_uninitialized_variables/IsVariableInitialized_27"
    input: "report_uninitialized_variables/IsVariableInitialized_28"
    input: "report_uninitialized_variables/IsVariableInitialized_29"
    input: "report_uninitialized_variables/IsVariableInitialized_30"
    input: "report_uninitialized_variables/IsVariableInitialized_31"
    input: "report_uninitialized_variables/IsVariableInitialized_32"
    input: "report_uninitialized_variables/IsVariableInitialized_33"
    input: "report_uninitialized_variables/IsVariableInitialized_34"
    input: "report_uninitialized_variables/IsVariableInitialized_35"
    input: "report_uninitialized_variables/IsVariableInitialized_36"
    input: "report_uninitialized_variables/IsVariableInitialized_37"
    input: "report_uninitialized_variables/IsVariableInitialized_38"
    input: "report_uninitialized_variables/IsVariableInitialized_39"
    input: "report_uninitialized_variables/IsVariableInitialized_40"
    input: "report_uninitialized_variables/IsVariableInitialized_41"
    input: "report_uninitialized_variables/IsVariableInitialized_42"
    input: "report_uninitialized_variables/IsVariableInitialized_43"
    input: "report_uninitialized_variables/IsVariableInitialized_44"
    input: "report_uninitialized_variables/IsVariableInitialized_45"
    input: "report_uninitialized_variables/IsVariableInitialized_46"
    input: "report_uninitialized_variables/IsVariableInitialized_47"
    input: "report_uninitialized_variables/IsVariableInitialized_48"
    input: "report_uninitialized_variables/IsVariableInitialized_49"
    input: "report_uninitialized_variables/IsVariableInitialized_50"
    input: "report_uninitialized_variables/IsVariableInitialized_51"
    input: "report_uninitialized_variables/IsVariableInitialized_52"
    input: "report_uninitialized_variables/IsVariableInitialized_53"
    input: "report_uninitialized_variables/IsVariableInitialized_54"
    input: "report_uninitialized_variables/IsVariableInitialized_55"
    input: "report_uninitialized_variables/IsVariableInitialized_56"
    input: "report_uninitialized_variables/IsVariableInitialized_57"
    input: "report_uninitialized_variables/IsVariableInitialized_58"
    input: "report_uninitialized_variables/IsVariableInitialized_59"
    input: "report_uninitialized_variables/IsVariableInitialized_60"
    input: "report_uninitialized_variables/IsVariableInitialized_61"
    input: "report_uninitialized_variables/IsVariableInitialized_62"
    input: "report_uninitialized_variables/IsVariableInitialized_63"
    input: "report_uninitialized_variables/IsVariableInitialized_64"
    input: "report_uninitialized_variables/IsVariableInitialized_65"
    input: "report_uninitialized_variables/IsVariableInitialized_66"
    input: "report_uninitialized_variables/IsVariableInitialized_67"
    input: "report_uninitialized_variables/IsVariableInitialized_68"
    input: "report_uninitialized_variables/IsVariableInitialized_69"
    input: "report_uninitialized_variables/IsVariableInitialized_70"
    input: "report_uninitialized_variables/IsVariableInitialized_71"
    input: "report_uninitialized_variables/IsVariableInitialized_72"
    input: "report_uninitialized_variables/IsVariableInitialized_73"
    device: "/device:CPU:0"
    attr {
      key: "N"
      value {
        i: 74
      }
    }
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 74
            }
          }
        }
      }
    }
    attr {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  node {
    name: "report_uninitialized_variables/LogicalNot"
    op: "LogicalNot"
    input: "report_uninitialized_variables/stack"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 74
            }
          }
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables/Const"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 74
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 74
            }
          }
          string_val: "EMA/QueueInput/queue_size"
          string_val: "EMA/QueueInput/queue_size/biased"
          string_val: "EMA/QueueInput/queue_size/local_step"
          string_val: "linear0/W"
          string_val: "linear0/b"
          string_val: "linear0/bn/beta"
          string_val: "linear0/bn/gamma"
          string_val: "linear0/bn/mean/EMA"
          string_val: "linear0/bn/variance/EMA"
          string_val: "linear1/W"
          string_val: "linear1/b"
          string_val: "linear1/bn/beta"
          string_val: "linear1/bn/gamma"
          string_val: "linear1/bn/mean/EMA"
          string_val: "linear1/bn/variance/EMA"
          string_val: "linear2/W"
          string_val: "linear2/b"
          string_val: "linear2/bn/beta"
          string_val: "linear2/bn/gamma"
          string_val: "linear2/bn/mean/EMA"
          string_val: "linear2/bn/variance/EMA"
          string_val: "linear3/W"
          string_val: "linear3/b"
          string_val: "linear3/bn/beta"
          string_val: "linear3/bn/gamma"
          string_val: "linear3/bn/mean/EMA"
          string_val: "linear3/bn/variance/EMA"
          string_val: "last_linear/W"
          string_val: "last_linear/b"
          string_val: "EMA/cross_entropy_loss"
          string_val: "EMA/cross_entropy_loss/biased"
          string_val: "EMA/cross_entropy_loss/local_step"
          string_val: "EMA/train-error-top1"
          string_val: "EMA/train-error-top1/biased"
          string_val: "EMA/train-error-top1/local_step"
          string_val: "beta1_power"
          string_val: "beta2_power"
          string_val: "linear0/W/Adam"
          string_val: "linear0/W/Adam_1"
          string_val: "linear0/b/Adam"
          string_val: "linear0/b/Adam_1"
          string_val: "linear0/bn/beta/Adam"
          string_val: "linear0/bn/beta/Adam_1"
          string_val: "linear0/bn/gamma/Adam"
          string_val: "linear0/bn/gamma/Adam_1"
          string_val: "linear1/W/Adam"
          string_val: "linear1/W/Adam_1"
          string_val: "linear1/b/Adam"
          string_val: "linear1/b/Adam_1"
          string_val: "linear1/bn/beta/Adam"
          string_val: "linear1/bn/beta/Adam_1"
          string_val: "linear1/bn/gamma/Adam"
          string_val: "linear1/bn/gamma/Adam_1"
          string_val: "linear2/W/Adam"
          string_val: "linear2/W/Adam_1"
          string_val: "linear2/b/Adam"
          string_val: "linear2/b/Adam_1"
          string_val: "linear2/bn/beta/Adam"
          string_val: "linear2/bn/beta/Adam_1"
          string_val: "linear2/bn/gamma/Adam"
          string_val: "linear2/bn/gamma/Adam_1"
          string_val: "linear3/W/Adam"
          string_val: "linear3/W/Adam_1"
          string_val: "linear3/b/Adam"
          string_val: "linear3/b/Adam_1"
          string_val: "linear3/bn/beta/Adam"
          string_val: "linear3/bn/beta/Adam_1"
          string_val: "linear3/bn/gamma/Adam"
          string_val: "linear3/bn/gamma/Adam_1"
          string_val: "last_linear/W/Adam"
          string_val: "last_linear/W/Adam_1"
          string_val: "last_linear/b/Adam"
          string_val: "last_linear/b/Adam_1"
          string_val: "global_step"
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables/boolean_mask/Shape"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 74
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables/boolean_mask/strided_slice"
    op: "StridedSlice"
    input: "report_uninitialized_variables/boolean_mask/Shape"
    input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
    input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
    input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
    device: "/device:CPU:0"
    attr {
      key: "Index"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "begin_mask"
      value {
        i: 1
      }
    }
    attr {
      key: "ellipsis_mask"
      value {
        i: 0
      }
    }
    attr {
      key: "end_mask"
      value {
        i: 0
      }
    }
    attr {
      key: "new_axis_mask"
      value {
        i: 0
      }
    }
    attr {
      key: "shrink_axis_mask"
      value {
        i: 0
      }
    }
  }
  node {
    name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables/boolean_mask/Prod"
    op: "Prod"
    input: "report_uninitialized_variables/boolean_mask/strided_slice"
    input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
    device: "/device:CPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "report_uninitialized_variables/boolean_mask/Shape_1"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 74
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
    op: "StridedSlice"
    input: "report_uninitialized_variables/boolean_mask/Shape_1"
    input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
    input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
    input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
    device: "/device:CPU:0"
    attr {
      key: "Index"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
            }
          }
        }
      }
    }
    attr {
      key: "begin_mask"
      value {
        i: 0
      }
    }
    attr {
      key: "ellipsis_mask"
      value {
        i: 0
      }
    }
    attr {
      key: "end_mask"
      value {
        i: 1
      }
    }
    attr {
      key: "new_axis_mask"
      value {
        i: 0
      }
    }
    attr {
      key: "shrink_axis_mask"
      value {
        i: 0
      }
    }
  }
  node {
    name: "report_uninitialized_variables/boolean_mask/concat/values_0"
    op: "Pack"
    input: "report_uninitialized_variables/boolean_mask/Prod"
    device: "/device:CPU:0"
    attr {
      key: "N"
      value {
        i: 1
      }
    }
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  node {
    name: "report_uninitialized_variables/boolean_mask/concat/axis"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables/boolean_mask/concat"
    op: "ConcatV2"
    input: "report_uninitialized_variables/boolean_mask/concat/values_0"
    input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
    input: "report_uninitialized_variables/boolean_mask/concat/axis"
    device: "/device:CPU:0"
    attr {
      key: "N"
      value {
        i: 2
      }
    }
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables/boolean_mask/Reshape"
    op: "Reshape"
    input: "report_uninitialized_variables/Const"
    input: "report_uninitialized_variables/boolean_mask/concat"
    device: "/device:CPU:0"
    attr {
      key: "T"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 74
            }
          }
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: -1
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables/boolean_mask/Reshape_1"
    op: "Reshape"
    input: "report_uninitialized_variables/LogicalNot"
    input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
    device: "/device:CPU:0"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 74
            }
          }
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables/boolean_mask/Where"
    op: "Where"
    input: "report_uninitialized_variables/boolean_mask/Reshape_1"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables/boolean_mask/Squeeze"
    op: "Squeeze"
    input: "report_uninitialized_variables/boolean_mask/Where"
    device: "/device:CPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    attr {
      key: "squeeze_dims"
      value {
        list {
          i: 1
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables/boolean_mask/Gather"
    op: "Gather"
    input: "report_uninitialized_variables/boolean_mask/Reshape"
    input: "report_uninitialized_variables/boolean_mask/Squeeze"
    device: "/device:CPU:0"
    attr {
      key: "Tindices"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "Tparams"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    attr {
      key: "validate_indices"
      value {
        b: true
      }
    }
  }
  node {
    name: "report_uninitialized_resources/Const"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
            }
          }
        }
      }
    }
  }
  node {
    name: "concat/axis"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "concat"
    op: "ConcatV2"
    input: "report_uninitialized_variables/boolean_mask/Gather"
    input: "report_uninitialized_resources/Const"
    input: "concat/axis"
    attr {
      key: "N"
      value {
        i: 2
      }
    }
    attr {
      key: "T"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized"
    op: "IsVariableInitialized"
    input: "EMA/QueueInput/queue_size"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_1"
    op: "IsVariableInitialized"
    input: "EMA/QueueInput/queue_size/biased"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_2"
    op: "IsVariableInitialized"
    input: "EMA/QueueInput/queue_size/local_step"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@QueueInput/queue_size"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_3"
    op: "IsVariableInitialized"
    input: "linear0/W"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_4"
    op: "IsVariableInitialized"
    input: "linear0/b"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_5"
    op: "IsVariableInitialized"
    input: "linear0/bn/beta"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_6"
    op: "IsVariableInitialized"
    input: "linear0/bn/gamma"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_7"
    op: "IsVariableInitialized"
    input: "linear0/bn/mean/EMA"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_8"
    op: "IsVariableInitialized"
    input: "linear0/bn/variance/EMA"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_9"
    op: "IsVariableInitialized"
    input: "linear1/W"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_10"
    op: "IsVariableInitialized"
    input: "linear1/b"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_11"
    op: "IsVariableInitialized"
    input: "linear1/bn/beta"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_12"
    op: "IsVariableInitialized"
    input: "linear1/bn/gamma"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_13"
    op: "IsVariableInitialized"
    input: "linear1/bn/mean/EMA"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_14"
    op: "IsVariableInitialized"
    input: "linear1/bn/variance/EMA"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_15"
    op: "IsVariableInitialized"
    input: "linear2/W"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_16"
    op: "IsVariableInitialized"
    input: "linear2/b"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_17"
    op: "IsVariableInitialized"
    input: "linear2/bn/beta"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_18"
    op: "IsVariableInitialized"
    input: "linear2/bn/gamma"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_19"
    op: "IsVariableInitialized"
    input: "linear2/bn/mean/EMA"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_20"
    op: "IsVariableInitialized"
    input: "linear2/bn/variance/EMA"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_21"
    op: "IsVariableInitialized"
    input: "linear3/W"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_22"
    op: "IsVariableInitialized"
    input: "linear3/b"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_23"
    op: "IsVariableInitialized"
    input: "linear3/bn/beta"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_24"
    op: "IsVariableInitialized"
    input: "linear3/bn/gamma"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_25"
    op: "IsVariableInitialized"
    input: "linear3/bn/mean/EMA"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/mean/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_26"
    op: "IsVariableInitialized"
    input: "linear3/bn/variance/EMA"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/variance/EMA"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_27"
    op: "IsVariableInitialized"
    input: "last_linear/W"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_28"
    op: "IsVariableInitialized"
    input: "last_linear/b"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_29"
    op: "IsVariableInitialized"
    input: "EMA/cross_entropy_loss"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_30"
    op: "IsVariableInitialized"
    input: "EMA/cross_entropy_loss/biased"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_31"
    op: "IsVariableInitialized"
    input: "EMA/cross_entropy_loss/local_step"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/cross_entropy_loss"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_32"
    op: "IsVariableInitialized"
    input: "EMA/train-error-top1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_33"
    op: "IsVariableInitialized"
    input: "EMA/train-error-top1/biased"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_34"
    op: "IsVariableInitialized"
    input: "EMA/train-error-top1/local_step"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@tower0/train-error-top1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_35"
    op: "IsVariableInitialized"
    input: "beta1_power"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_36"
    op: "IsVariableInitialized"
    input: "beta2_power"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_37"
    op: "IsVariableInitialized"
    input: "linear0/W/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_38"
    op: "IsVariableInitialized"
    input: "linear0/W/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_39"
    op: "IsVariableInitialized"
    input: "linear0/b/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_40"
    op: "IsVariableInitialized"
    input: "linear0/b/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_41"
    op: "IsVariableInitialized"
    input: "linear0/bn/beta/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_42"
    op: "IsVariableInitialized"
    input: "linear0/bn/beta/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_43"
    op: "IsVariableInitialized"
    input: "linear0/bn/gamma/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_44"
    op: "IsVariableInitialized"
    input: "linear0/bn/gamma/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear0/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_45"
    op: "IsVariableInitialized"
    input: "linear1/W/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_46"
    op: "IsVariableInitialized"
    input: "linear1/W/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_47"
    op: "IsVariableInitialized"
    input: "linear1/b/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_48"
    op: "IsVariableInitialized"
    input: "linear1/b/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_49"
    op: "IsVariableInitialized"
    input: "linear1/bn/beta/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_50"
    op: "IsVariableInitialized"
    input: "linear1/bn/beta/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_51"
    op: "IsVariableInitialized"
    input: "linear1/bn/gamma/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_52"
    op: "IsVariableInitialized"
    input: "linear1/bn/gamma/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear1/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_53"
    op: "IsVariableInitialized"
    input: "linear2/W/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_54"
    op: "IsVariableInitialized"
    input: "linear2/W/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_55"
    op: "IsVariableInitialized"
    input: "linear2/b/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_56"
    op: "IsVariableInitialized"
    input: "linear2/b/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_57"
    op: "IsVariableInitialized"
    input: "linear2/bn/beta/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_58"
    op: "IsVariableInitialized"
    input: "linear2/bn/beta/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_59"
    op: "IsVariableInitialized"
    input: "linear2/bn/gamma/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_60"
    op: "IsVariableInitialized"
    input: "linear2/bn/gamma/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear2/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_61"
    op: "IsVariableInitialized"
    input: "linear3/W/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_62"
    op: "IsVariableInitialized"
    input: "linear3/W/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_63"
    op: "IsVariableInitialized"
    input: "linear3/b/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_64"
    op: "IsVariableInitialized"
    input: "linear3/b/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_65"
    op: "IsVariableInitialized"
    input: "linear3/bn/beta/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_66"
    op: "IsVariableInitialized"
    input: "linear3/bn/beta/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/beta"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_67"
    op: "IsVariableInitialized"
    input: "linear3/bn/gamma/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_68"
    op: "IsVariableInitialized"
    input: "linear3/bn/gamma/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@linear3/bn/gamma"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_69"
    op: "IsVariableInitialized"
    input: "last_linear/W/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_70"
    op: "IsVariableInitialized"
    input: "last_linear/W/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_71"
    op: "IsVariableInitialized"
    input: "last_linear/b/Adam"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_72"
    op: "IsVariableInitialized"
    input: "last_linear/b/Adam_1"
    device: "/device:GPU:0"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@last_linear/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/IsVariableInitialized_73"
    op: "IsVariableInitialized"
    input: "global_step"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@global_step"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT64
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/stack"
    op: "Pack"
    input: "report_uninitialized_variables_1/IsVariableInitialized"
    input: "report_uninitialized_variables_1/IsVariableInitialized_1"
    input: "report_uninitialized_variables_1/IsVariableInitialized_2"
    input: "report_uninitialized_variables_1/IsVariableInitialized_3"
    input: "report_uninitialized_variables_1/IsVariableInitialized_4"
    input: "report_uninitialized_variables_1/IsVariableInitialized_5"
    input: "report_uninitialized_variables_1/IsVariableInitialized_6"
    input: "report_uninitialized_variables_1/IsVariableInitialized_7"
    input: "report_uninitialized_variables_1/IsVariableInitialized_8"
    input: "report_uninitialized_variables_1/IsVariableInitialized_9"
    input: "report_uninitialized_variables_1/IsVariableInitialized_10"
    input: "report_uninitialized_variables_1/IsVariableInitialized_11"
    input: "report_uninitialized_variables_1/IsVariableInitialized_12"
    input: "report_uninitialized_variables_1/IsVariableInitialized_13"
    input: "report_uninitialized_variables_1/IsVariableInitialized_14"
    input: "report_uninitialized_variables_1/IsVariableInitialized_15"
    input: "report_uninitialized_variables_1/IsVariableInitialized_16"
    input: "report_uninitialized_variables_1/IsVariableInitialized_17"
    input: "report_uninitialized_variables_1/IsVariableInitialized_18"
    input: "report_uninitialized_variables_1/IsVariableInitialized_19"
    input: "report_uninitialized_variables_1/IsVariableInitialized_20"
    input: "report_uninitialized_variables_1/IsVariableInitialized_21"
    input: "report_uninitialized_variables_1/IsVariableInitialized_22"
    input: "report_uninitialized_variables_1/IsVariableInitialized_23"
    input: "report_uninitialized_variables_1/IsVariableInitialized_24"
    input: "report_uninitialized_variables_1/IsVariableInitialized_25"
    input: "report_uninitialized_variables_1/IsVariableInitialized_26"
    input: "report_uninitialized_variables_1/IsVariableInitialized_27"
    input: "report_uninitialized_variables_1/IsVariableInitialized_28"
    input: "report_uninitialized_variables_1/IsVariableInitialized_29"
    input: "report_uninitialized_variables_1/IsVariableInitialized_30"
    input: "report_uninitialized_variables_1/IsVariableInitialized_31"
    input: "report_uninitialized_variables_1/IsVariableInitialized_32"
    input: "report_uninitialized_variables_1/IsVariableInitialized_33"
    input: "report_uninitialized_variables_1/IsVariableInitialized_34"
    input: "report_uninitialized_variables_1/IsVariableInitialized_35"
    input: "report_uninitialized_variables_1/IsVariableInitialized_36"
    input: "report_uninitialized_variables_1/IsVariableInitialized_37"
    input: "report_uninitialized_variables_1/IsVariableInitialized_38"
    input: "report_uninitialized_variables_1/IsVariableInitialized_39"
    input: "report_uninitialized_variables_1/IsVariableInitialized_40"
    input: "report_uninitialized_variables_1/IsVariableInitialized_41"
    input: "report_uninitialized_variables_1/IsVariableInitialized_42"
    input: "report_uninitialized_variables_1/IsVariableInitialized_43"
    input: "report_uninitialized_variables_1/IsVariableInitialized_44"
    input: "report_uninitialized_variables_1/IsVariableInitialized_45"
    input: "report_uninitialized_variables_1/IsVariableInitialized_46"
    input: "report_uninitialized_variables_1/IsVariableInitialized_47"
    input: "report_uninitialized_variables_1/IsVariableInitialized_48"
    input: "report_uninitialized_variables_1/IsVariableInitialized_49"
    input: "report_uninitialized_variables_1/IsVariableInitialized_50"
    input: "report_uninitialized_variables_1/IsVariableInitialized_51"
    input: "report_uninitialized_variables_1/IsVariableInitialized_52"
    input: "report_uninitialized_variables_1/IsVariableInitialized_53"
    input: "report_uninitialized_variables_1/IsVariableInitialized_54"
    input: "report_uninitialized_variables_1/IsVariableInitialized_55"
    input: "report_uninitialized_variables_1/IsVariableInitialized_56"
    input: "report_uninitialized_variables_1/IsVariableInitialized_57"
    input: "report_uninitialized_variables_1/IsVariableInitialized_58"
    input: "report_uninitialized_variables_1/IsVariableInitialized_59"
    input: "report_uninitialized_variables_1/IsVariableInitialized_60"
    input: "report_uninitialized_variables_1/IsVariableInitialized_61"
    input: "report_uninitialized_variables_1/IsVariableInitialized_62"
    input: "report_uninitialized_variables_1/IsVariableInitialized_63"
    input: "report_uninitialized_variables_1/IsVariableInitialized_64"
    input: "report_uninitialized_variables_1/IsVariableInitialized_65"
    input: "report_uninitialized_variables_1/IsVariableInitialized_66"
    input: "report_uninitialized_variables_1/IsVariableInitialized_67"
    input: "report_uninitialized_variables_1/IsVariableInitialized_68"
    input: "report_uninitialized_variables_1/IsVariableInitialized_69"
    input: "report_uninitialized_variables_1/IsVariableInitialized_70"
    input: "report_uninitialized_variables_1/IsVariableInitialized_71"
    input: "report_uninitialized_variables_1/IsVariableInitialized_72"
    input: "report_uninitialized_variables_1/IsVariableInitialized_73"
    device: "/device:CPU:0"
    attr {
      key: "N"
      value {
        i: 74
      }
    }
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 74
            }
          }
        }
      }
    }
    attr {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/LogicalNot"
    op: "LogicalNot"
    input: "report_uninitialized_variables_1/stack"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 74
            }
          }
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/Const"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 74
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 74
            }
          }
          string_val: "EMA/QueueInput/queue_size"
          string_val: "EMA/QueueInput/queue_size/biased"
          string_val: "EMA/QueueInput/queue_size/local_step"
          string_val: "linear0/W"
          string_val: "linear0/b"
          string_val: "linear0/bn/beta"
          string_val: "linear0/bn/gamma"
          string_val: "linear0/bn/mean/EMA"
          string_val: "linear0/bn/variance/EMA"
          string_val: "linear1/W"
          string_val: "linear1/b"
          string_val: "linear1/bn/beta"
          string_val: "linear1/bn/gamma"
          string_val: "linear1/bn/mean/EMA"
          string_val: "linear1/bn/variance/EMA"
          string_val: "linear2/W"
          string_val: "linear2/b"
          string_val: "linear2/bn/beta"
          string_val: "linear2/bn/gamma"
          string_val: "linear2/bn/mean/EMA"
          string_val: "linear2/bn/variance/EMA"
          string_val: "linear3/W"
          string_val: "linear3/b"
          string_val: "linear3/bn/beta"
          string_val: "linear3/bn/gamma"
          string_val: "linear3/bn/mean/EMA"
          string_val: "linear3/bn/variance/EMA"
          string_val: "last_linear/W"
          string_val: "last_linear/b"
          string_val: "EMA/cross_entropy_loss"
          string_val: "EMA/cross_entropy_loss/biased"
          string_val: "EMA/cross_entropy_loss/local_step"
          string_val: "EMA/train-error-top1"
          string_val: "EMA/train-error-top1/biased"
          string_val: "EMA/train-error-top1/local_step"
          string_val: "beta1_power"
          string_val: "beta2_power"
          string_val: "linear0/W/Adam"
          string_val: "linear0/W/Adam_1"
          string_val: "linear0/b/Adam"
          string_val: "linear0/b/Adam_1"
          string_val: "linear0/bn/beta/Adam"
          string_val: "linear0/bn/beta/Adam_1"
          string_val: "linear0/bn/gamma/Adam"
          string_val: "linear0/bn/gamma/Adam_1"
          string_val: "linear1/W/Adam"
          string_val: "linear1/W/Adam_1"
          string_val: "linear1/b/Adam"
          string_val: "linear1/b/Adam_1"
          string_val: "linear1/bn/beta/Adam"
          string_val: "linear1/bn/beta/Adam_1"
          string_val: "linear1/bn/gamma/Adam"
          string_val: "linear1/bn/gamma/Adam_1"
          string_val: "linear2/W/Adam"
          string_val: "linear2/W/Adam_1"
          string_val: "linear2/b/Adam"
          string_val: "linear2/b/Adam_1"
          string_val: "linear2/bn/beta/Adam"
          string_val: "linear2/bn/beta/Adam_1"
          string_val: "linear2/bn/gamma/Adam"
          string_val: "linear2/bn/gamma/Adam_1"
          string_val: "linear3/W/Adam"
          string_val: "linear3/W/Adam_1"
          string_val: "linear3/b/Adam"
          string_val: "linear3/b/Adam_1"
          string_val: "linear3/bn/beta/Adam"
          string_val: "linear3/bn/beta/Adam_1"
          string_val: "linear3/bn/gamma/Adam"
          string_val: "linear3/bn/gamma/Adam_1"
          string_val: "last_linear/W/Adam"
          string_val: "last_linear/W/Adam_1"
          string_val: "last_linear/b/Adam"
          string_val: "last_linear/b/Adam_1"
          string_val: "global_step"
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/boolean_mask/Shape"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 74
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
    op: "StridedSlice"
    input: "report_uninitialized_variables_1/boolean_mask/Shape"
    input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
    input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
    input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
    device: "/device:CPU:0"
    attr {
      key: "Index"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "begin_mask"
      value {
        i: 1
      }
    }
    attr {
      key: "ellipsis_mask"
      value {
        i: 0
      }
    }
    attr {
      key: "end_mask"
      value {
        i: 0
      }
    }
    attr {
      key: "new_axis_mask"
      value {
        i: 0
      }
    }
    attr {
      key: "shrink_axis_mask"
      value {
        i: 0
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/boolean_mask/Prod"
    op: "Prod"
    input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
    input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
    device: "/device:CPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 74
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
    op: "StridedSlice"
    input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
    input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
    input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
    input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
    device: "/device:CPU:0"
    attr {
      key: "Index"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
            }
          }
        }
      }
    }
    attr {
      key: "begin_mask"
      value {
        i: 0
      }
    }
    attr {
      key: "ellipsis_mask"
      value {
        i: 0
      }
    }
    attr {
      key: "end_mask"
      value {
        i: 1
      }
    }
    attr {
      key: "new_axis_mask"
      value {
        i: 0
      }
    }
    attr {
      key: "shrink_axis_mask"
      value {
        i: 0
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
    op: "Pack"
    input: "report_uninitialized_variables_1/boolean_mask/Prod"
    device: "/device:CPU:0"
    attr {
      key: "N"
      value {
        i: 1
      }
    }
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/boolean_mask/concat"
    op: "ConcatV2"
    input: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
    input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
    input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
    device: "/device:CPU:0"
    attr {
      key: "N"
      value {
        i: 2
      }
    }
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/boolean_mask/Reshape"
    op: "Reshape"
    input: "report_uninitialized_variables_1/Const"
    input: "report_uninitialized_variables_1/boolean_mask/concat"
    device: "/device:CPU:0"
    attr {
      key: "T"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 74
            }
          }
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
    op: "Const"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: -1
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
    op: "Reshape"
    input: "report_uninitialized_variables_1/LogicalNot"
    input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
    device: "/device:CPU:0"
    attr {
      key: "T"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 74
            }
          }
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/boolean_mask/Where"
    op: "Where"
    input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
    device: "/device:CPU:0"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
    op: "Squeeze"
    input: "report_uninitialized_variables_1/boolean_mask/Where"
    device: "/device:CPU:0"
    attr {
      key: "T"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    attr {
      key: "squeeze_dims"
      value {
        list {
          i: 1
        }
      }
    }
  }
  node {
    name: "report_uninitialized_variables_1/boolean_mask/Gather"
    op: "Gather"
    input: "report_uninitialized_variables_1/boolean_mask/Reshape"
    input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
    device: "/device:CPU:0"
    attr {
      key: "Tindices"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "Tparams"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    attr {
      key: "validate_indices"
      value {
        b: true
      }
    }
  }
  node {
    name: "init_2"
    op: "NoOp"
  }
  node {
    name: "init_all_tables"
    op: "NoOp"
  }
  node {
    name: "group_deps_1"
    op: "NoOp"
    input: "^init_2"
    input: "^init_all_tables"
  }
  node {
    name: "Merge/MergeSummary"
    op: "MergeSummary"
    input: "QueueInput/queue_size-summary"
    input: "cross_entropy_loss-summary"
    input: "train-error-top1-summary"
    input: "param-summary/linear0/W-rms"
    input: "param-summary/linear0/W-histogram"
    input: "param-summary/linear1/W-rms"
    input: "param-summary/linear1/W-histogram"
    input: "param-summary/linear2/W-rms"
    input: "param-summary/linear2/W-histogram"
    input: "param-summary/linear3/W-rms"
    input: "param-summary/linear3/W-histogram"
    input: "param-summary/last_linear/W-rms"
    input: "param-summary/last_linear/W-histogram"
    input: "param-summary/linear0/b-rms"
    input: "param-summary/linear0/b-histogram"
    input: "param-summary/linear1/b-rms"
    input: "param-summary/linear1/b-histogram"
    input: "param-summary/linear2/b-rms"
    input: "param-summary/linear2/b-histogram"
    input: "param-summary/linear3/b-rms"
    input: "param-summary/linear3/b-histogram"
    input: "param-summary/last_linear/b-rms"
    input: "param-summary/last_linear/b-histogram"
    input: "tower0/activation-summaries/tower0/linear0/output-rms"
    input: "tower0/activation-summaries/tower0/linear0/output-histogram"
    input: "tower0/activation-summaries/tower0/linear1/output-rms"
    input: "tower0/activation-summaries/tower0/linear1/output-histogram"
    input: "tower0/activation-summaries/tower0/linear2/output-rms"
    input: "tower0/activation-summaries/tower0/linear2/output-histogram"
    input: "tower0/activation-summaries/tower0/linear3/output-rms"
    input: "tower0/activation-summaries/tower0/linear3/output-histogram"
    input: "tower0/activation-summaries/tower0/last_linear/output-rms"
    input: "tower0/activation-summaries/tower0/last_linear/output-histogram"
    input: "tower0/activation-summaries/tower0/output-rms"
    input: "tower0/activation-summaries/tower0/output-histogram"
    attr {
      key: "N"
      value {
        i: 35
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear0/wrapper_to_relu_0"
    op: "Identity"
    input: "tower0/linear0/output"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear1/wrapper_to_relu_1"
    op: "Identity"
    input: "tower0/linear1/output"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear2/wrapper_to_relu_2"
    op: "Identity"
    input: "tower0/linear2/output"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear3/wrapper_to_relu_3"
    op: "Identity"
    input: "tower0/linear3/output"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 504
            }
          }
        }
      }
    }
  }
  node {
    name: "tower0/linear3/geph__wrapper_to_relu_3_0"
    op: "Placeholder"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  versions {
    producer: 24
  }
}
collection_def {
  key: "MOVING_SUMMARY_OPS"
  value {
    node_list {
      value: "EMA/cross_entropy_loss_EMA_apply:0"
      value: "EMA/train-error-top1_EMA_apply:0"
    }
  }
}
collection_def {
  key: "global_step"
  value {
    node_list {
      value: "global_step:0"
    }
  }
}
collection_def {
  key: "init_op"
  value {
    node_list {
      value: "group_deps"
    }
  }
}
collection_def {
  key: "local_init_op"
  value {
    node_list {
      value: "group_deps_1"
    }
  }
}
collection_def {
  key: "model_variables"
  value {
    bytes_list {
      value: "\n\025linear0/bn/mean/EMA:0\022\032linear0/bn/mean/EMA/Assign\032\032linear0/bn/mean/EMA/read:02\'linear0/bn/mean/EMA/Initializer/Const:0"
      value: "\n\031linear0/bn/variance/EMA:0\022\036linear0/bn/variance/EMA/Assign\032\036linear0/bn/variance/EMA/read:02+linear0/bn/variance/EMA/Initializer/Const:0"
      value: "\n\025linear1/bn/mean/EMA:0\022\032linear1/bn/mean/EMA/Assign\032\032linear1/bn/mean/EMA/read:02\'linear1/bn/mean/EMA/Initializer/Const:0"
      value: "\n\031linear1/bn/variance/EMA:0\022\036linear1/bn/variance/EMA/Assign\032\036linear1/bn/variance/EMA/read:02+linear1/bn/variance/EMA/Initializer/Const:0"
      value: "\n\025linear2/bn/mean/EMA:0\022\032linear2/bn/mean/EMA/Assign\032\032linear2/bn/mean/EMA/read:02\'linear2/bn/mean/EMA/Initializer/Const:0"
      value: "\n\031linear2/bn/variance/EMA:0\022\036linear2/bn/variance/EMA/Assign\032\036linear2/bn/variance/EMA/read:02+linear2/bn/variance/EMA/Initializer/Const:0"
      value: "\n\025linear3/bn/mean/EMA:0\022\032linear3/bn/mean/EMA/Assign\032\032linear3/bn/mean/EMA/read:02\'linear3/bn/mean/EMA/Initializer/Const:0"
      value: "\n\031linear3/bn/variance/EMA:0\022\036linear3/bn/variance/EMA/Assign\032\036linear3/bn/variance/EMA/read:02+linear3/bn/variance/EMA/Initializer/Const:0"
    }
  }
}
collection_def {
  key: "ready_for_local_init_op"
  value {
    node_list {
      value: "report_uninitialized_variables_1/boolean_mask/Gather:0"
    }
  }
}
collection_def {
  key: "ready_op"
  value {
    node_list {
      value: "concat:0"
    }
  }
}
collection_def {
  key: "savers"
  value {
    bytes_list {
      value: "\n\027ModelSaver/save/Const:0\022$ModelSaver/save/control_dependency:0\032\033ModelSaver/save/restore_all \n5\000\000\000?8\002"
    }
  }
}
collection_def {
  key: "summaries"
  value {
    node_list {
      value: "QueueInput/queue_size-summary:0"
      value: "cross_entropy_loss-summary:0"
      value: "train-error-top1-summary:0"
      value: "param-summary/linear0/W-rms:0"
      value: "param-summary/linear0/W-histogram:0"
      value: "param-summary/linear1/W-rms:0"
      value: "param-summary/linear1/W-histogram:0"
      value: "param-summary/linear2/W-rms:0"
      value: "param-summary/linear2/W-histogram:0"
      value: "param-summary/linear3/W-rms:0"
      value: "param-summary/linear3/W-histogram:0"
      value: "param-summary/last_linear/W-rms:0"
      value: "param-summary/last_linear/W-histogram:0"
      value: "param-summary/linear0/b-rms:0"
      value: "param-summary/linear0/b-histogram:0"
      value: "param-summary/linear1/b-rms:0"
      value: "param-summary/linear1/b-histogram:0"
      value: "param-summary/linear2/b-rms:0"
      value: "param-summary/linear2/b-histogram:0"
      value: "param-summary/linear3/b-rms:0"
      value: "param-summary/linear3/b-histogram:0"
      value: "param-summary/last_linear/b-rms:0"
      value: "param-summary/last_linear/b-histogram:0"
      value: "tower0/activation-summaries/tower0/linear0/output-rms:0"
      value: "tower0/activation-summaries/tower0/linear0/output-histogram:0"
      value: "tower0/activation-summaries/tower0/linear1/output-rms:0"
      value: "tower0/activation-summaries/tower0/linear1/output-histogram:0"
      value: "tower0/activation-summaries/tower0/linear2/output-rms:0"
      value: "tower0/activation-summaries/tower0/linear2/output-histogram:0"
      value: "tower0/activation-summaries/tower0/linear3/output-rms:0"
      value: "tower0/activation-summaries/tower0/linear3/output-histogram:0"
      value: "tower0/activation-summaries/tower0/last_linear/output-rms:0"
      value: "tower0/activation-summaries/tower0/last_linear/output-histogram:0"
      value: "tower0/activation-summaries/tower0/output-rms:0"
      value: "tower0/activation-summaries/tower0/output-histogram:0"
    }
  }
}
collection_def {
  key: "summary_op"
  value {
    node_list {
      value: "Merge/MergeSummary:0"
    }
  }
}
collection_def {
  key: "train_op"
  value {
    node_list {
      value: "train_op"
    }
  }
}
collection_def {
  key: "trainable_variables"
  value {
    bytes_list {
      value: "\n\013linear0/W:0\022\020linear0/W/Assign\032\020linear0/W/read:02(linear0/W/Initializer/truncated_normal:0"
      value: "\n\013linear0/b:0\022\020linear0/b/Assign\032\020linear0/b/read:02(linear0/b/Initializer/truncated_normal:0"
      value: "\n\021linear0/bn/beta:0\022\026linear0/bn/beta/Assign\032\026linear0/bn/beta/read:02#linear0/bn/beta/Initializer/Const:0"
      value: "\n\022linear0/bn/gamma:0\022\027linear0/bn/gamma/Assign\032\027linear0/bn/gamma/read:02$linear0/bn/gamma/Initializer/Const:0"
      value: "\n\013linear1/W:0\022\020linear1/W/Assign\032\020linear1/W/read:02(linear1/W/Initializer/truncated_normal:0"
      value: "\n\013linear1/b:0\022\020linear1/b/Assign\032\020linear1/b/read:02(linear1/b/Initializer/truncated_normal:0"
      value: "\n\021linear1/bn/beta:0\022\026linear1/bn/beta/Assign\032\026linear1/bn/beta/read:02#linear1/bn/beta/Initializer/Const:0"
      value: "\n\022linear1/bn/gamma:0\022\027linear1/bn/gamma/Assign\032\027linear1/bn/gamma/read:02$linear1/bn/gamma/Initializer/Const:0"
      value: "\n\013linear2/W:0\022\020linear2/W/Assign\032\020linear2/W/read:02(linear2/W/Initializer/truncated_normal:0"
      value: "\n\013linear2/b:0\022\020linear2/b/Assign\032\020linear2/b/read:02(linear2/b/Initializer/truncated_normal:0"
      value: "\n\021linear2/bn/beta:0\022\026linear2/bn/beta/Assign\032\026linear2/bn/beta/read:02#linear2/bn/beta/Initializer/Const:0"
      value: "\n\022linear2/bn/gamma:0\022\027linear2/bn/gamma/Assign\032\027linear2/bn/gamma/read:02$linear2/bn/gamma/Initializer/Const:0"
      value: "\n\013linear3/W:0\022\020linear3/W/Assign\032\020linear3/W/read:02(linear3/W/Initializer/truncated_normal:0"
      value: "\n\013linear3/b:0\022\020linear3/b/Assign\032\020linear3/b/read:02(linear3/b/Initializer/truncated_normal:0"
      value: "\n\021linear3/bn/beta:0\022\026linear3/bn/beta/Assign\032\026linear3/bn/beta/read:02#linear3/bn/beta/Initializer/Const:0"
      value: "\n\022linear3/bn/gamma:0\022\027linear3/bn/gamma/Assign\032\027linear3/bn/gamma/read:02$linear3/bn/gamma/Initializer/Const:0"
      value: "\n\017last_linear/W:0\022\024last_linear/W/Assign\032\024last_linear/W/read:02,last_linear/W/Initializer/truncated_normal:0"
      value: "\n\017last_linear/b:0\022\024last_linear/b/Assign\032\024last_linear/b/read:02,last_linear/b/Initializer/truncated_normal:0"
    }
  }
}
collection_def {
  key: "update_ops"
  value {
    node_list {
      value: "tower0/linear0/bn/mean_ema_op:0"
      value: "tower0/linear0/bn/var_ema_op:0"
      value: "tower0/linear1/bn/mean_ema_op:0"
      value: "tower0/linear1/bn/var_ema_op:0"
      value: "tower0/linear2/bn/mean_ema_op:0"
      value: "tower0/linear2/bn/var_ema_op:0"
      value: "tower0/linear3/bn/mean_ema_op:0"
      value: "tower0/linear3/bn/var_ema_op:0"
    }
  }
}
collection_def {
  key: "variables"
  value {
    bytes_list {
      value: "\n\033EMA/QueueInput/queue_size:0\022 EMA/QueueInput/queue_size/Assign\032 EMA/QueueInput/queue_size/read:02-EMA/QueueInput/queue_size/Initializer/Const:0"
      value: "\n\"EMA/QueueInput/queue_size/biased:0\022\'EMA/QueueInput/queue_size/biased/Assign\032\'EMA/QueueInput/queue_size/biased/read:02EEMA/QueueInput/queue_size_EMA_apply/EMA/QueueInput/queue_size/zeros:0"
      value: "\n&EMA/QueueInput/queue_size/local_step:0\022+EMA/QueueInput/queue_size/local_step/Assign\032+EMA/QueueInput/queue_size/local_step/read:028EMA/QueueInput/queue_size/local_step/Initializer/zeros:0"
      value: "\n\013linear0/W:0\022\020linear0/W/Assign\032\020linear0/W/read:02(linear0/W/Initializer/truncated_normal:0"
      value: "\n\013linear0/b:0\022\020linear0/b/Assign\032\020linear0/b/read:02(linear0/b/Initializer/truncated_normal:0"
      value: "\n\021linear0/bn/beta:0\022\026linear0/bn/beta/Assign\032\026linear0/bn/beta/read:02#linear0/bn/beta/Initializer/Const:0"
      value: "\n\022linear0/bn/gamma:0\022\027linear0/bn/gamma/Assign\032\027linear0/bn/gamma/read:02$linear0/bn/gamma/Initializer/Const:0"
      value: "\n\025linear0/bn/mean/EMA:0\022\032linear0/bn/mean/EMA/Assign\032\032linear0/bn/mean/EMA/read:02\'linear0/bn/mean/EMA/Initializer/Const:0"
      value: "\n\031linear0/bn/variance/EMA:0\022\036linear0/bn/variance/EMA/Assign\032\036linear0/bn/variance/EMA/read:02+linear0/bn/variance/EMA/Initializer/Const:0"
      value: "\n\013linear1/W:0\022\020linear1/W/Assign\032\020linear1/W/read:02(linear1/W/Initializer/truncated_normal:0"
      value: "\n\013linear1/b:0\022\020linear1/b/Assign\032\020linear1/b/read:02(linear1/b/Initializer/truncated_normal:0"
      value: "\n\021linear1/bn/beta:0\022\026linear1/bn/beta/Assign\032\026linear1/bn/beta/read:02#linear1/bn/beta/Initializer/Const:0"
      value: "\n\022linear1/bn/gamma:0\022\027linear1/bn/gamma/Assign\032\027linear1/bn/gamma/read:02$linear1/bn/gamma/Initializer/Const:0"
      value: "\n\025linear1/bn/mean/EMA:0\022\032linear1/bn/mean/EMA/Assign\032\032linear1/bn/mean/EMA/read:02\'linear1/bn/mean/EMA/Initializer/Const:0"
      value: "\n\031linear1/bn/variance/EMA:0\022\036linear1/bn/variance/EMA/Assign\032\036linear1/bn/variance/EMA/read:02+linear1/bn/variance/EMA/Initializer/Const:0"
      value: "\n\013linear2/W:0\022\020linear2/W/Assign\032\020linear2/W/read:02(linear2/W/Initializer/truncated_normal:0"
      value: "\n\013linear2/b:0\022\020linear2/b/Assign\032\020linear2/b/read:02(linear2/b/Initializer/truncated_normal:0"
      value: "\n\021linear2/bn/beta:0\022\026linear2/bn/beta/Assign\032\026linear2/bn/beta/read:02#linear2/bn/beta/Initializer/Const:0"
      value: "\n\022linear2/bn/gamma:0\022\027linear2/bn/gamma/Assign\032\027linear2/bn/gamma/read:02$linear2/bn/gamma/Initializer/Const:0"
      value: "\n\025linear2/bn/mean/EMA:0\022\032linear2/bn/mean/EMA/Assign\032\032linear2/bn/mean/EMA/read:02\'linear2/bn/mean/EMA/Initializer/Const:0"
      value: "\n\031linear2/bn/variance/EMA:0\022\036linear2/bn/variance/EMA/Assign\032\036linear2/bn/variance/EMA/read:02+linear2/bn/variance/EMA/Initializer/Const:0"
      value: "\n\013linear3/W:0\022\020linear3/W/Assign\032\020linear3/W/read:02(linear3/W/Initializer/truncated_normal:0"
      value: "\n\013linear3/b:0\022\020linear3/b/Assign\032\020linear3/b/read:02(linear3/b/Initializer/truncated_normal:0"
      value: "\n\021linear3/bn/beta:0\022\026linear3/bn/beta/Assign\032\026linear3/bn/beta/read:02#linear3/bn/beta/Initializer/Const:0"
      value: "\n\022linear3/bn/gamma:0\022\027linear3/bn/gamma/Assign\032\027linear3/bn/gamma/read:02$linear3/bn/gamma/Initializer/Const:0"
      value: "\n\025linear3/bn/mean/EMA:0\022\032linear3/bn/mean/EMA/Assign\032\032linear3/bn/mean/EMA/read:02\'linear3/bn/mean/EMA/Initializer/Const:0"
      value: "\n\031linear3/bn/variance/EMA:0\022\036linear3/bn/variance/EMA/Assign\032\036linear3/bn/variance/EMA/read:02+linear3/bn/variance/EMA/Initializer/Const:0"
      value: "\n\017last_linear/W:0\022\024last_linear/W/Assign\032\024last_linear/W/read:02,last_linear/W/Initializer/truncated_normal:0"
      value: "\n\017last_linear/b:0\022\024last_linear/b/Assign\032\024last_linear/b/read:02,last_linear/b/Initializer/truncated_normal:0"
      value: "\n\030EMA/cross_entropy_loss:0\022\035EMA/cross_entropy_loss/Assign\032\035EMA/cross_entropy_loss/read:02*EMA/cross_entropy_loss/Initializer/Const:0"
      value: "\n\037EMA/cross_entropy_loss/biased:0\022$EMA/cross_entropy_loss/biased/Assign\032$EMA/cross_entropy_loss/biased/read:02?EMA/cross_entropy_loss_EMA_apply/EMA/cross_entropy_loss/zeros:0"
      value: "\n#EMA/cross_entropy_loss/local_step:0\022(EMA/cross_entropy_loss/local_step/Assign\032(EMA/cross_entropy_loss/local_step/read:025EMA/cross_entropy_loss/local_step/Initializer/zeros:0"
      value: "\n\026EMA/train-error-top1:0\022\033EMA/train-error-top1/Assign\032\033EMA/train-error-top1/read:02(EMA/train-error-top1/Initializer/Const:0"
      value: "\n\035EMA/train-error-top1/biased:0\022\"EMA/train-error-top1/biased/Assign\032\"EMA/train-error-top1/biased/read:02;EMA/train-error-top1_EMA_apply/EMA/train-error-top1/zeros:0"
      value: "\n!EMA/train-error-top1/local_step:0\022&EMA/train-error-top1/local_step/Assign\032&EMA/train-error-top1/local_step/read:023EMA/train-error-top1/local_step/Initializer/zeros:0"
      value: "\n\rbeta1_power:0\022\022beta1_power/Assign\032\022beta1_power/read:02\033beta1_power/initial_value:0"
      value: "\n\rbeta2_power:0\022\022beta2_power/Assign\032\022beta2_power/read:02\033beta2_power/initial_value:0"
      value: "\n\020linear0/W/Adam:0\022\025linear0/W/Adam/Assign\032\025linear0/W/Adam/read:02\"linear0/W/Adam/Initializer/zeros:0"
      value: "\n\022linear0/W/Adam_1:0\022\027linear0/W/Adam_1/Assign\032\027linear0/W/Adam_1/read:02$linear0/W/Adam_1/Initializer/zeros:0"
      value: "\n\020linear0/b/Adam:0\022\025linear0/b/Adam/Assign\032\025linear0/b/Adam/read:02\"linear0/b/Adam/Initializer/zeros:0"
      value: "\n\022linear0/b/Adam_1:0\022\027linear0/b/Adam_1/Assign\032\027linear0/b/Adam_1/read:02$linear0/b/Adam_1/Initializer/zeros:0"
      value: "\n\026linear0/bn/beta/Adam:0\022\033linear0/bn/beta/Adam/Assign\032\033linear0/bn/beta/Adam/read:02(linear0/bn/beta/Adam/Initializer/zeros:0"
      value: "\n\030linear0/bn/beta/Adam_1:0\022\035linear0/bn/beta/Adam_1/Assign\032\035linear0/bn/beta/Adam_1/read:02*linear0/bn/beta/Adam_1/Initializer/zeros:0"
      value: "\n\027linear0/bn/gamma/Adam:0\022\034linear0/bn/gamma/Adam/Assign\032\034linear0/bn/gamma/Adam/read:02)linear0/bn/gamma/Adam/Initializer/zeros:0"
      value: "\n\031linear0/bn/gamma/Adam_1:0\022\036linear0/bn/gamma/Adam_1/Assign\032\036linear0/bn/gamma/Adam_1/read:02+linear0/bn/gamma/Adam_1/Initializer/zeros:0"
      value: "\n\020linear1/W/Adam:0\022\025linear1/W/Adam/Assign\032\025linear1/W/Adam/read:02\"linear1/W/Adam/Initializer/zeros:0"
      value: "\n\022linear1/W/Adam_1:0\022\027linear1/W/Adam_1/Assign\032\027linear1/W/Adam_1/read:02$linear1/W/Adam_1/Initializer/zeros:0"
      value: "\n\020linear1/b/Adam:0\022\025linear1/b/Adam/Assign\032\025linear1/b/Adam/read:02\"linear1/b/Adam/Initializer/zeros:0"
      value: "\n\022linear1/b/Adam_1:0\022\027linear1/b/Adam_1/Assign\032\027linear1/b/Adam_1/read:02$linear1/b/Adam_1/Initializer/zeros:0"
      value: "\n\026linear1/bn/beta/Adam:0\022\033linear1/bn/beta/Adam/Assign\032\033linear1/bn/beta/Adam/read:02(linear1/bn/beta/Adam/Initializer/zeros:0"
      value: "\n\030linear1/bn/beta/Adam_1:0\022\035linear1/bn/beta/Adam_1/Assign\032\035linear1/bn/beta/Adam_1/read:02*linear1/bn/beta/Adam_1/Initializer/zeros:0"
      value: "\n\027linear1/bn/gamma/Adam:0\022\034linear1/bn/gamma/Adam/Assign\032\034linear1/bn/gamma/Adam/read:02)linear1/bn/gamma/Adam/Initializer/zeros:0"
      value: "\n\031linear1/bn/gamma/Adam_1:0\022\036linear1/bn/gamma/Adam_1/Assign\032\036linear1/bn/gamma/Adam_1/read:02+linear1/bn/gamma/Adam_1/Initializer/zeros:0"
      value: "\n\020linear2/W/Adam:0\022\025linear2/W/Adam/Assign\032\025linear2/W/Adam/read:02\"linear2/W/Adam/Initializer/zeros:0"
      value: "\n\022linear2/W/Adam_1:0\022\027linear2/W/Adam_1/Assign\032\027linear2/W/Adam_1/read:02$linear2/W/Adam_1/Initializer/zeros:0"
      value: "\n\020linear2/b/Adam:0\022\025linear2/b/Adam/Assign\032\025linear2/b/Adam/read:02\"linear2/b/Adam/Initializer/zeros:0"
      value: "\n\022linear2/b/Adam_1:0\022\027linear2/b/Adam_1/Assign\032\027linear2/b/Adam_1/read:02$linear2/b/Adam_1/Initializer/zeros:0"
      value: "\n\026linear2/bn/beta/Adam:0\022\033linear2/bn/beta/Adam/Assign\032\033linear2/bn/beta/Adam/read:02(linear2/bn/beta/Adam/Initializer/zeros:0"
      value: "\n\030linear2/bn/beta/Adam_1:0\022\035linear2/bn/beta/Adam_1/Assign\032\035linear2/bn/beta/Adam_1/read:02*linear2/bn/beta/Adam_1/Initializer/zeros:0"
      value: "\n\027linear2/bn/gamma/Adam:0\022\034linear2/bn/gamma/Adam/Assign\032\034linear2/bn/gamma/Adam/read:02)linear2/bn/gamma/Adam/Initializer/zeros:0"
      value: "\n\031linear2/bn/gamma/Adam_1:0\022\036linear2/bn/gamma/Adam_1/Assign\032\036linear2/bn/gamma/Adam_1/read:02+linear2/bn/gamma/Adam_1/Initializer/zeros:0"
      value: "\n\020linear3/W/Adam:0\022\025linear3/W/Adam/Assign\032\025linear3/W/Adam/read:02\"linear3/W/Adam/Initializer/zeros:0"
      value: "\n\022linear3/W/Adam_1:0\022\027linear3/W/Adam_1/Assign\032\027linear3/W/Adam_1/read:02$linear3/W/Adam_1/Initializer/zeros:0"
      value: "\n\020linear3/b/Adam:0\022\025linear3/b/Adam/Assign\032\025linear3/b/Adam/read:02\"linear3/b/Adam/Initializer/zeros:0"
      value: "\n\022linear3/b/Adam_1:0\022\027linear3/b/Adam_1/Assign\032\027linear3/b/Adam_1/read:02$linear3/b/Adam_1/Initializer/zeros:0"
      value: "\n\026linear3/bn/beta/Adam:0\022\033linear3/bn/beta/Adam/Assign\032\033linear3/bn/beta/Adam/read:02(linear3/bn/beta/Adam/Initializer/zeros:0"
      value: "\n\030linear3/bn/beta/Adam_1:0\022\035linear3/bn/beta/Adam_1/Assign\032\035linear3/bn/beta/Adam_1/read:02*linear3/bn/beta/Adam_1/Initializer/zeros:0"
      value: "\n\027linear3/bn/gamma/Adam:0\022\034linear3/bn/gamma/Adam/Assign\032\034linear3/bn/gamma/Adam/read:02)linear3/bn/gamma/Adam/Initializer/zeros:0"
      value: "\n\031linear3/bn/gamma/Adam_1:0\022\036linear3/bn/gamma/Adam_1/Assign\032\036linear3/bn/gamma/Adam_1/read:02+linear3/bn/gamma/Adam_1/Initializer/zeros:0"
      value: "\n\024last_linear/W/Adam:0\022\031last_linear/W/Adam/Assign\032\031last_linear/W/Adam/read:02&last_linear/W/Adam/Initializer/zeros:0"
      value: "\n\026last_linear/W/Adam_1:0\022\033last_linear/W/Adam_1/Assign\032\033last_linear/W/Adam_1/read:02(last_linear/W/Adam_1/Initializer/zeros:0"
      value: "\n\024last_linear/b/Adam:0\022\031last_linear/b/Adam/Assign\032\031last_linear/b/Adam/read:02&last_linear/b/Adam/Initializer/zeros:0"
      value: "\n\026last_linear/b/Adam_1:0\022\033last_linear/b/Adam_1/Assign\032\033last_linear/b/Adam_1/read:02(last_linear/b/Adam_1/Initializer/zeros:0"
      value: "\n\rglobal_step:0\022\022global_step/Assign\032\022global_step/read:02\037global_step/Initializer/zeros:0"
    }
  }
}
